{"version":3,"sources":["webpack:///./src/utils/setting/GlobalSetting.js","webpack:///./src/utils/objects/cube/CubeFactory.js","webpack:///./src/utils/stats/StatsWindow.js","webpack:///./src/utils/basic/Light.js","webpack:///./src/utils/controls/ShowOrbitControl.js","webpack:///./src/utils/objects/cube/DefaultCube.js","webpack:///./src/utils/controls/MCFirstPersonControl.js","webpack:///./src/index.js","webpack:///./src/utils/basic/Scene.js","webpack:///./src/utils/basic/Camera.js","webpack:///./src/utils/basic/Renderer.js","webpack:///./src/utils/controls/ControlBuilder.js","webpack:///./src/utils/sound/Bgm.js"],"names":["enableShadow","defaultCube","_instanceObj","key","this","cubeOptions","_materials","_materialsMap","_geometry","undefined","_geometryMap","_cubeSize","initMaterials","initGeometry","isHalfCube","cubeAttributes","length","textureLoader","textureList","imageUrl","images","push","texture","load","generateMipmaps","minFilter","magFilter","materialList","textureIndex","map","fog","materialParameters","materialParametersForOneList","imageSet","x","y","z","rotateX","rotateY","rotateZ","position","rotation","mesh","receiveShadow","castShadow","GlobalSetting","userData","fullCubePosition","cubeTypeKey","meshParameters","rotateEnable","Math","PI","name","canvasElId","_instance","stats","domElement","style","left","top","document","getElementById","appendChild","getAmbientLightIntensity","lightCurrentIntensity","lightHighIntensity","lightLowIntensity","min","max","getDirectionalLightIntensity","camera","controls","OrbitControls","dampingFactor","enablePan","objects","window","addEventListener","event","clickedObjects","raycaster","mouse","clientX","innerWidth","clientY","innerHeight","setFromCamera","intersectObjects","getClickedObject","obj","object","console","log","grass","color","isPenetrable","isIndestructible","test","dirt","cobblestone","cobblestone_mossy","stone","stone_slab","brick","planks_birch","planks_acacia","planks_jungle","planks_oak","planks_spruce","log_acacia","leaves_acacia","transparent","leaves_acacia_opaque","log_birch","leaves_birch","leaves_birch_opaque","log_jungle","leaves_jungle","leaves_jungle_opaque","log_oak","leaves_oak","leaves_oak_opaque","log_spruce","leaves_spruce","leaves_spruce_opaque","glass","melon","pumpkin_face_off","pumpkin_face_on","cloud","opacity","scene","currentCubeTypeIndex","checkRay","X0","X1","Z0","Z1","Y0","Y1","moveForward","moveBackward","moveLeft","moveRight","preRuning","isRunning","canJump","velocity","direction","worldOption","g","personOption","height","sightHeight","jumpHeight","speedWalk","speedRun","accelerateRateStart","accelerateRateStop","thickness","init","PointerLockControls","blocker","createElement","zIndex","width","id","body","append","lock","display","aimX","setAimStyle","aimY","keyCode","performance","now","sqrt","i","initMouseFunction","initPreviewCube","delta","isLocked","Number","normalize","velocityXZMax","velocityZTmp","abs","velocityXTmp","positionBeforeX","getObject","positionBeforeZ","Z0Flat","ray","origin","copy","rayMove","intersections","Z0NearFlatTmp","point","Z1Flat","Z1NearFlatTmp","nextZ","X0Flat","X0NearFlatTmp","X1Flat","X1NearFlatTmp","nextX","bottomFlatY","bottomFlatYTmp","topFlatY","topFlatYTmp","nextY","updatePreviewCube","aim","distance","face","normal","rotate","targetIsHalfCube","DefaultCube","newPositionVector","applyAxisAngle","round","yMove","newIsHalfCube","Object","keys","newPosition","button","newDirectionRotate","newDirection","worldDirection","getWorldDirection","cube","buildCube","add","index","findIndex","e","splice","remove","getObjectById","wheelDelta","changeCurrentCubeTypeIndex","detail","onmousewheel","isNext","plusValue","result","previewCube","geometryMap","previewCubeType","geometry","previewGeometry","getCurrentCubeTypeIndex","clone","scale","material","previewCubeRotation","aimEl","transform","fontSize","fontWeight","textAlign","verticalAlign","lineHeight","fontFamily","backgroundColor","isWebGLAvailable","getWebGLErrorMessage","lightDirectional","canvasEL","backgroundType","textureCube","background","cubeShader","uniforms","value","fragmentShader","vertexShader","depthWrite","side","cubeWithPic","initScene","lightAmbient","light","setHex","intensity","initAmbientLight","shadow","radius","initDirectionalLight","fov","near","far","initCamera","aspect","offsetWidth","offsetHeight","updateProjectionMatrix","renderer","shadowMap","enabled","setClearColor","initRenderer","setSize","setPixelRatio","devicePixelRatio","controlsType","showOrbitControl","initClickFunction","children","initControls","lightOption","current","low","high","becomeHigher","cubeFactory","testBlock","mountainHeight","zValue","xValue","yValue","cubeType","values","idHalfCube","cubeInfo","prevTime","animate","requestAnimationFrame","time","update","render","changeLight","onresize","onload","audioBGM","currentIndex","arr","Audio","preload","autoplay","hidden","right","loop","src","play","playHandler","removeEventListener","initBGMPlayer"],"mappings":"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","file":"package/index.191fb63bd2cf59827a30.bundle.js","sourcesContent":["export default {\r\n    enableShadow:false\r\n}","import * as THREE from 'three';\r\nimport GlobalSetting from \"../../setting/GlobalSetting\";\r\n\r\nexport default class CubeFactory {\r\n    constructor(defaultCube) {\r\n        if (CubeFactory._instanceObj && CubeFactory._instanceObj[defaultCube.key]) {\r\n            return CubeFactory._instanceObj[defaultCube.key];\r\n        }\r\n        this.cubeOptions = defaultCube;\r\n        this._materials = [];\r\n        this._materialsMap = {};\r\n        this._geometry = undefined;\r\n        this._geometryMap = {};\r\n        this._cubeSize = 1;//方块边长，默认1\r\n        this.initMaterials();\r\n        this.initGeometry();\r\n        CubeFactory._instanceObj = {\r\n            [defaultCube.key]: this\r\n        }\r\n    }\r\n\r\n    //初始化形状\r\n    initGeometry() {\r\n        if (this._geometryMap) {\r\n            this._geometry = this._geometryMap[this.cubeOptions.key];\r\n        }\r\n        if (this._geometry) {\r\n            return;\r\n        }\r\n\r\n        let isHalfCube = (this.cubeOptions.cubeAttributes !== undefined) && this.cubeOptions.cubeAttributes.isHalfCube;\r\n        this._geometry = new THREE.CubeGeometry(this._cubeSize, this._cubeSize / (isHalfCube ? 2 : 1), this._cubeSize);\r\n\r\n        this._geometryMap[this.cubeOptions.key] = this._geometry\r\n    }\r\n\r\n    //初始化材质\r\n    initMaterials() {\r\n        if (this._materialsMap) {\r\n            this._materials = this._materialsMap[this.cubeOptions.key];\r\n        }\r\n        if (this._materials && this._materials.length !== 0) {\r\n            return;\r\n        }\r\n        this._materials = [];\r\n        let textureLoader = new THREE.TextureLoader();\r\n        let textureList = [];\r\n        for (let imageUrl of this.cubeOptions.images) {\r\n            if (imageUrl === '' || imageUrl === undefined) {\r\n                textureList.push(undefined);\r\n            } else {\r\n                let texture = textureLoader.load(imageUrl);\r\n                texture.generateMipmaps = true;//生成纹理，用于相关滤镜，根据远近自动调整贴图质量\r\n                texture.minFilter = THREE.NearestMipMapNearestFilter;//minFilter属性：指定纹理如何缩小。默认值：THREE.LinearMipMapLinearFilter。\r\n                texture.magFilter = THREE.NearestFilter;//magFilter属性：指定纹理如何放大。THREE.NearestFilter 贴图像素化\r\n                textureList.push(texture);\r\n            }\r\n        }\r\n        let materialList = [];\r\n        for (let textureIndex in textureList) {\r\n            let texture = textureList[textureIndex];\r\n            materialList.push(\r\n                new THREE.MeshLambertMaterial({\r\n                    // color:0x4F9C1A,\r\n                    // side: THREE.DoubleSide,\r\n                    map: texture,\r\n                    // vertexColors: THREE.VertexColors,\r\n                    fog: true,//当前材质是否受到全局雾化效果器影响\r\n                    ...(this.cubeOptions.materialParameters ? this.cubeOptions.materialParameters : {}),\r\n                    ...(this.cubeOptions.materialParametersForOneList && this.cubeOptions.materialParametersForOneList[textureIndex] ? this.cubeOptions.materialParametersForOneList[textureIndex] : {}),\r\n                })\r\n            );\r\n        }\r\n        for (let key of this.cubeOptions.imageSet) {\r\n            this._materials.push(materialList[key]);\r\n        }\r\n        this._materialsMap[this.cubeOptions.key] = this._materials;\r\n    };\r\n\r\n\r\n    //构造方块\r\n    buildCube(x, y, z, defaultCube, rotateX, rotateY, rotateZ) {\r\n        let position = {x: x, y: y, z: z};\r\n        let rotation = {rotateX: rotateX, rotateY: rotateY, rotateZ: rotateZ};\r\n        if (defaultCube) {\r\n            this.cubeOptions = defaultCube;\r\n            this.initGeometry();\r\n            this.initMaterials();\r\n        }\r\n        position.x = position.x || 0;\r\n        position.y = position.y || 0;\r\n        position.z = position.z || 0;\r\n        let mesh = new THREE.Mesh(\r\n            this._geometry,\r\n            this._materials\r\n            // new THREE.MeshLambertMaterial({color: 0x00cc00})\r\n        );\r\n        mesh.receiveShadow = mesh.castShadow = GlobalSetting.enableShadow;\r\n        //新方块中心位置\r\n        {\r\n            mesh.position.x = position.x;\r\n            mesh.position.y = position.y;\r\n            mesh.position.z = position.z;\r\n            mesh.userData = {\r\n                fullCubePosition: {\r\n                    x: mesh.position.x,\r\n                    y: mesh.position.y,\r\n                    z: mesh.position.z,\r\n                },\r\n                cubeTypeKey: this.cubeOptions.key,\r\n            };\r\n        }\r\n        if (rotation.rotateX && (defaultCube.meshParameters && defaultCube.meshParameters.rotateEnable && defaultCube.meshParameters.rotateEnable.x)) {\r\n            mesh.rotateX(rotation.rotateX * Math.PI / 180);\r\n        }\r\n        if (rotation.rotateY && (defaultCube.meshParameters && defaultCube.meshParameters.rotateEnable && defaultCube.meshParameters.rotateEnable.y)) {\r\n            mesh.rotateY(rotation.rotateY * Math.PI / 180);\r\n        }\r\n        if (rotation.rotateZ && (defaultCube.meshParameters && defaultCube.meshParameters.rotateEnable && defaultCube.meshParameters.rotateEnable.z)) {\r\n            mesh.rotateZ(rotation.rotateZ * Math.PI / 180);\r\n        }\r\n        mesh.name = this.cubeOptions.key + \"(\" + position.x + \",\" + position.y + \",\" + position.z + \")\";\r\n        return mesh;\r\n    }\r\n}","// 查看信息小控件\r\nimport Stats from \"stats-js\";\r\nexport default class StatsWindow {\r\n    constructor(canvasElId) {\r\n        if (StatsWindow._instance) {\r\n            return StatsWindow._instance;\r\n        }\r\n        let stats;\r\n        stats = new Stats();\r\n        stats.domElement.style.position = 'absolute';\r\n        stats.domElement.style.left = '0px';\r\n        stats.domElement.style.top = '0px';\r\n        document.getElementById(canvasElId).appendChild(stats.domElement);\r\n        StatsWindow._instance = this;\r\n        this.stats=stats;\r\n        return this;\r\n    }\r\n}\r\n\r\n","import * as THREE from \"three\";\r\nimport GlobalSetting from \"../setting/GlobalSetting\";\r\n\r\nexport const lightHighIntensity = 1;\r\nexport const lightLowIntensity = 0.3;\r\nexport const lightCurrentIntensity = 1;\r\nexport const lightValueBecomeHigher = true;\r\n\r\nexport function initAmbientLight() {\r\n    let light = new THREE.AmbientLight();//环境光\r\n    light.castShadow = false;\r\n    light.color = new THREE.Color().setHex(0xffffff);\r\n    light.intensity = getAmbientLightIntensity();\r\n    return light;\r\n}\r\n\r\nexport function getAmbientLightIntensity(lightCurrentIntensity, lightHighIntensity, lightLowIntensity) {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity);\r\n}\r\n\r\nexport function initDirectionalLight() {\r\n    let light = new THREE.DirectionalLight();//环境光\r\n    light.castShadow = GlobalSetting.enableShadow;\r\n    light.color = new THREE.Color().setHex(0xffffff);\r\n    light.intensity = getDirectionalLightIntensity();\r\n    light.shadow.radius = 512;\r\n    light.position.x = 10;\r\n    light.position.y = -10;\r\n    light.position.z = 10;\r\n    return light;\r\n}\r\n\r\nexport function getDirectionalLightIntensity(lightCurrentIntensity, lightHighIntensity, lightLowIntensity) {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity) / 4;\r\n}\r\n","import {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\nimport * as THREE from 'three';\r\nexport default class ShowOrbitControl {\r\n\r\n    constructor(camera, domElement) {\r\n        // ShowOrbitControl._instance;\r\n        // this.controls;\r\n        this.camera = camera;\r\n        if (ShowOrbitControl._instance) {\r\n            return ShowOrbitControl._instance;\r\n        }\r\n        this.controls = new OrbitControls(camera, domElement);\r\n        //动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n        this.controls.dampingFactor = 1;\r\n        //是否允许平移\r\n        this.controls.enablePan = false;\r\n        ShowOrbitControl._instance = this;\r\n        return ShowOrbitControl._instance;\r\n    }\r\n\r\n    initClickFunction(objects, camera) {\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(event, objects, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                let obj = clickedObjects[0].object;\r\n                console.log(\"点击的对象：\" + obj.name);\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(event, objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let mouse = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(mouse, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}\r\n\r\n\r\n","//预设方块信息\r\nimport * as THREE from 'three'\r\n\r\nexport default {\r\n    grass: {\r\n        key: 'grass',//设置和对象key一样\r\n        images: [//贴图路径\r\n            './assets/img/blocks/grass_side.png',\r\n            './assets/img/blocks/grass_top.png',\r\n            './assets/img/blocks/dirt.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 2, 0, 0],//六面贴图使用的images图片下标\r\n        materialParameters: {},//THREE.MeshXxxMaterial 对象参数，六面都影响\r\n        materialParametersForOneList: [//THREE.MeshXxxMaterial 对象参数，只影响对应的一个面\r\n            {},\r\n            {color: 0xB1FB6C},\r\n        ],\r\n        meshParameters: {\r\n            rotateEnable: {//放置方块时，旋转辅助参数，是否可在对应轴上旋转\r\n                x: false,\r\n                y: false,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,//不能碰撞。false-能踩能撞\r\n            isIndestructible: false,//不能销毁。false-左键点击能消除\r\n            isHalfCube: false,//是半砖。false-不是半砖。true-是一个半砖，可以在一个1x1x1内叠加另一个半砖\r\n        },\r\n    },\r\n    test: {\r\n        key: 'test',\r\n        images: [\r\n            './assets/img/1.png',\r\n            './assets/img/2.png',\r\n            './assets/img/3.png',\r\n            './assets/img/4.png',\r\n            './assets/img/5.png',\r\n            './assets/img/6.png',\r\n        ],\r\n        imageSet: [0, 1, 2, 3, 4, 5],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: true,\r\n                y: true,\r\n                z: true,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    dirt: {\r\n        key: 'dirt',\r\n        images: [\r\n            './assets/img/blocks/dirt.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: false,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    // Cloud: {\r\n    //     key: 'Cloud',\r\n    //     images: [\r\n    //         './assets/img/blocks/grass_side.png',\r\n    //         './assets/img/blocks/grass_top_green.png',\r\n    //         './assets/img/blocks/dirt.png',\r\n    //     ],\r\n    //     imageSet: [0, 0, 1, 2, 0, 0],\r\n    //     materialParameters: {\r\n    //         transparent: true,//透明\r\n    //         opacity: 0.2,//透明度\r\n    //     }\r\n    // },\r\n    cobblestone: {\r\n        key: 'Cobblestone',\r\n        images: [\r\n            './assets/img/blocks/cobblestone.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: false,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    cobblestone_mossy: {\r\n        key: 'cobblestone_mossy',\r\n        images: [\r\n            './assets/img/blocks/cobblestone_mossy.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: false,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    stone: {\r\n        key: 'Stone',\r\n        images: [\r\n            './assets/img/blocks/stone.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: false,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    stone_slab: {\r\n        key: 'stone_slab',\r\n        images: [\r\n            './assets/img/blocks/stone_slab_side.png',\r\n            './assets/img/blocks/stone_slab_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: true,\r\n                y: true,\r\n                z: true,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    brick: {\r\n        key: 'brick',\r\n        images: [\r\n            './assets/img/blocks/brick.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    planks_birch: {\r\n        key: 'planks_birch',\r\n        images: [\r\n            './assets/img/blocks/planks_birch.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    planks_acacia: {\r\n        key: 'planks_acacia',\r\n        images: [\r\n            './assets/img/blocks/planks_acacia.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    planks_jungle: {\r\n        key: 'planks_jungle',\r\n        images: [\r\n            './assets/img/blocks/planks_jungle.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    planks_oak: {\r\n        key: 'planks_oak',\r\n        images: [\r\n            './assets/img/blocks/planks_oak.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    planks_spruce: {\r\n        key: 'planks_spruce',\r\n        images: [\r\n            './assets/img/blocks/planks_spruce.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    // reeds: {\r\n    //     key: 'reeds',\r\n    //     images: [\r\n    //         './assets/img/blocks/reeds.png',\r\n    //     ],\r\n    //     imageSet: [0, 0, 0, 0, 0, 0],\r\n    //     materialParameters: {\r\n    //         transparent: true,\r\n    //         side: THREE.DoubleSide,\r\n    //     },\r\n    //     materialParametersForOneList:[]\r\n    // },\r\n\r\n    log_acacia: {\r\n        key: 'log_acacia',\r\n        images: [\r\n            './assets/img/blocks/log_acacia.png',\r\n            './assets/img/blocks/log_acacia_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: true,\r\n                y: true,\r\n                z: true,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_acacia: {\r\n        key: 'leaves_acacia',\r\n        images: [\r\n            './assets/img/blocks/leaves_acacia.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_acacia_opaque: {\r\n        key: 'leaves_acacia_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_acacia_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n\r\n    log_birch: {\r\n        key: 'log_birch',\r\n        images: [\r\n            './assets/img/blocks/log_birch.png',\r\n            './assets/img/blocks/log_birch_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: true,\r\n                y: true,\r\n                z: true,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_birch: {\r\n        key: 'leaves_birch',\r\n        images: [\r\n            './assets/img/blocks/leaves_birch.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_birch_opaque: {\r\n        key: 'leaves_birch_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_birch_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n\r\n    log_jungle: {\r\n        key: 'log_jungle',\r\n        images: [\r\n            './assets/img/blocks/log_jungle.png',\r\n            './assets/img/blocks/log_jungle_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: true,\r\n                y: true,\r\n                z: true,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_jungle: {\r\n        key: 'leaves_jungle',\r\n        images: [\r\n            './assets/img/blocks/leaves_jungle.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_jungle_opaque: {\r\n        key: 'leaves_jungle_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_jungle_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n\r\n    log_oak: {\r\n        key: 'log_oak',\r\n        images: [\r\n            './assets/img/blocks/log_oak.png',\r\n            './assets/img/blocks/log_oak_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: true,\r\n                y: true,\r\n                z: true,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_oak: {\r\n        key: 'leaves_oak',\r\n        images: [\r\n            './assets/img/blocks/leaves_oak.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_oak_opaque: {\r\n        key: 'leaves_oak_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_oak_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n\r\n    log_spruce: {\r\n        key: 'log_spruce',\r\n        images: [\r\n            './assets/img/blocks/log_spruce.png',\r\n            './assets/img/blocks/log_spruce_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: true,\r\n                y: true,\r\n                z: true,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_spruce: {\r\n        key: 'leaves_spruce',\r\n        images: [\r\n            './assets/img/blocks/leaves_spruce.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    leaves_spruce_opaque: {\r\n        key: 'leaves_spruce_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_spruce_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    glass: {\r\n        key: 'glass',\r\n        images: [\r\n            './assets/img/blocks/glass.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList: [],\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    // ice: {\r\n    //     key: 'ice',\r\n    //     images: [\r\n    //         './assets/img/blocks/ice.png',\r\n    //     ],\r\n    //     imageSet: [0, 0, 0, 0, 0, 0],\r\n    //     materialParameters: {\r\n    //         transparent:true\r\n    //     },\r\n    //     materialParametersForOneList: [\r\n    //     ],\r\n    //     meshParameters: {\r\n    //         rotateEnable: {\r\n    //             x: false,\r\n    //             y: false,\r\n    //             z: false,\r\n    //         }\r\n    //     },\r\n    // },\r\n    melon: {\r\n        key: 'melon',\r\n        images: [\r\n            './assets/img/blocks/melon_side.png',\r\n            './assets/img/blocks/melon_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: false,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    pumpkin_face_off: {\r\n        key: 'pumpkin_face_off',\r\n        images: [\r\n            './assets/img/blocks/pumpkin_face_off.png',\r\n            './assets/img/blocks/pumpkin_side.png',\r\n            './assets/img/blocks/pumpkin_top.png',\r\n        ],\r\n        imageSet: [0, 1, 2, 2, 1, 1],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    pumpkin_face_on: {\r\n        key: 'pumpkin_face_on',\r\n        images: [\r\n            './assets/img/blocks/pumpkin_face_on.png',\r\n            './assets/img/blocks/pumpkin_side.png',\r\n            './assets/img/blocks/pumpkin_top.png',\r\n        ],\r\n        imageSet: [0, 1, 2, 2, 1, 1],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: false,\r\n        },\r\n    },\r\n    cloud: {\r\n        key: 'cloud',\r\n        images: [''],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0xFFFFFF,\r\n            transparent: true,//透明\r\n            opacity: 0.8,//透明度\r\n        },\r\n        materialParametersForOneList: [],\r\n        meshParameters: {\r\n            rotateEnable: {\r\n                x: false,\r\n                y: true,\r\n                z: false,\r\n            }\r\n        },\r\n        cubeAttributes:{\r\n            isPenetrable: false,\r\n            isIndestructible: false,\r\n            isHalfCube: true,\r\n        },\r\n    },\r\n}","import {PointerLockControls} from 'three/examples/jsm/controls/PointerLockControls'\r\nimport CubeFactory from \"../objects/cube/CubeFactory\";\r\nimport * as THREE from 'three';\r\nimport DefaultCube from '../objects/cube/DefaultCube'\r\nimport {Vector3} from \"three\";\r\n\r\nexport default class MCFirstPersonControl {\r\n\r\n    constructor(camera, domElement, objects, scene) {\r\n        if (MCFirstPersonControl._instance) {\r\n            return MCFirstPersonControl._instance;\r\n        }\r\n        // MCFirstPersonControl._instance;\r\n        // this.controls;\r\n        // this.removeBlockTimer;//移除方块计时\r\n        // this.previewCube;//预览方块\r\n        this.camera = camera;\r\n        this.objects = objects;\r\n        this.scene = scene;\r\n        this.currentCubeTypeIndex = 0;\r\n\r\n        this.checkRay = {//0为负，1为正\r\n            X0: [],\r\n            X1: [],\r\n            Z0: [],\r\n            Z1: [],\r\n\r\n            Y0: [],\r\n            Y1: [],\r\n        };\r\n        this.moveForward = false;\r\n        this.moveBackward = false;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.preRuning = undefined;\r\n        this.isRunning = false;\r\n        this.canJump = false;\r\n        // this.prevTime = performance.now();\r\n        this.velocity = new THREE.Vector3();\r\n        this.direction = new THREE.Vector3();\r\n        this.worldOption = {\r\n            g: 9.0\r\n        };\r\n        this.personOption = {\r\n            height: 1.8,//人物总高度。现有配置不能让人物高于2\r\n            sightHeight: 1.5,//眼部高度。现有配置不能让人物高于2\r\n            jumpHeight: 1.3,    //最大跳跃高度(并非砖块高度)\r\n            speedWalk: 5.7,     //最大行走速度\r\n            speedRun: 10,       //最大奔跑速度，连按w两次\r\n            accelerateRateStart: 0.3,//加速时加速比率。正数向前；负数反向；0不会加速；绝对值大于等于1可立即到最大速度\r\n            accelerateRateStop: 0.8,//停止时减速比率。范围[0-1]。0时立即停止，1时不会减速\r\n            thickness: 0.6,//人物的边长\r\n        };\r\n        this.init(camera, domElement);\r\n        MCFirstPersonControl._instance = this;\r\n        return MCFirstPersonControl._instance;\r\n    }\r\n\r\n    init(camera, domElement) {\r\n        this.controls = new PointerLockControls(camera, domElement);\r\n        //增加遮罩层\r\n        {\r\n            let blocker = document.createElement(\"div\");\r\n            blocker.style.position = \"absolute\";\r\n            blocker.style.zIndex = \"100\";\r\n            blocker.style.width = \"100%\";\r\n            blocker.style.height = \"100%\";\r\n            blocker.style.top = \"0\";\r\n            blocker.style.left = \"0\";\r\n            blocker.id = \"blocker\";\r\n            // blocker.style.backgroundColor = \"rgba(0, 0, 0, 0.4)\";\r\n            document.body.append(blocker);\r\n            blocker.addEventListener('click', () => {\r\n                this.controls.lock();\r\n            }, false);\r\n            this.controls.addEventListener('lock', function () {\r\n                blocker.style.display = 'none';\r\n            });\r\n            this.controls.addEventListener('unlock', function () {\r\n                blocker.style.display = 'block';\r\n            });\r\n        }\r\n        //添加准星\r\n        {\r\n            let aimX = document.createElement(\"div\");\r\n            aimX.style.height = \"2px\";\r\n            aimX.style.width = \"20px\";\r\n            setAimStyle(aimX);\r\n            document.body.append(aimX);\r\n            let aimY = document.createElement(\"div\");\r\n            aimY.style.height = \"20px\";\r\n            aimY.style.width = \"2px\";\r\n            setAimStyle(aimY);\r\n            document.body.append(aimY);\r\n        }\r\n        //加按键事件\r\n        let onKeyDown = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    if (this.moveForward) {\r\n                        break;\r\n                    }\r\n                    if (!this.preRuning) {\r\n                        this.preRuning = performance.now();\r\n                    } else {\r\n                        this.isRunning = performance.now() - this.preRuning <= 200;\r\n                        this.preRuning = performance.now();\r\n                    }\r\n                    this.moveForward = true;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    if (this.moveLeft) {\r\n                        break;\r\n                    }\r\n                    this.moveLeft = true;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    if (this.moveBackward) {\r\n                        break;\r\n                    }\r\n                    this.moveBackward = true;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    if (this.moveRight) {\r\n                        break;\r\n                    }\r\n                    this.moveRight = true;\r\n                    break;\r\n\r\n                case 32: // space\r\n                    //7.74是60开平方\r\n                    if (this.canJump) this.velocity.y += Math.sqrt(2 * this.worldOption.g * 7.74 * this.personOption.jumpHeight);\r\n                    this.canJump = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        let onKeyUp = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    this.isRunning = false;\r\n                    this.moveForward = false;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    this.moveLeft = false;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    this.moveBackward = false;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    this.moveRight = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        document.addEventListener('keydown', onKeyDown, false);\r\n        document.addEventListener('keyup', onKeyUp, false);\r\n        //加水平方向碰撞检测  。0,1脚底；2,3腰；4,5头顶; 6,7腿中间(半砖)； 8,9头中间(半砖)\r\n        for (let i = 0; i < 10; i++) {\r\n            this.checkRay.X0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(-1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i <10; i++) {\r\n            this.checkRay.X1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 10; i++) {\r\n            this.checkRay.Z0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, -1), 0, 0));\r\n        }\r\n        for (let i = 0; i < 10; i++) {\r\n            this.checkRay.Z1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, 1), 0, 0));\r\n        }\r\n        //加垂直方向碰撞检测\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 1, 0), 0, 0));\r\n        }\r\n        //初始化点击功能\r\n        this.initMouseFunction();\r\n        //\r\n        this.initPreviewCube();\r\n    }\r\n\r\n    update(delta) {\r\n        // console.log(this.objects.length)\r\n        delta = delta || 0.016;\r\n        if (!this.controls.isLocked) {\r\n            this.moveForward = false;\r\n            this.moveBackward = false;\r\n            this.moveLeft = false;\r\n            this.moveRight = false;\r\n        }\r\n        //水平方向移动+碰撞检测\r\n        {\r\n            this.direction.z = Number(this.moveForward) - Number(this.moveBackward);\r\n            this.direction.x = Number(this.moveRight) - Number(this.moveLeft);\r\n            this.direction.normalize(); // this ensures consistent movements in all directions\r\n            let velocityXZMax = this.isRunning ? this.personOption.speedRun : this.personOption.speedWalk;\r\n\r\n            if (this.moveForward || this.moveBackward) {\r\n                let velocityZTmp = this.velocity.z + this.direction.z * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityZTmp) < velocityXZMax) {\r\n                    this.velocity.z = velocityZTmp;\r\n                } else {\r\n                    this.velocity.z = this.direction.z * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.z = Math.abs(this.velocity.z) > 1 ? this.velocity.z * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            if (this.moveLeft || this.moveRight) {\r\n                let velocityXTmp = this.velocity.x + this.direction.x * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityXTmp) < velocityXZMax) {\r\n                    this.velocity.x = velocityXTmp;\r\n                } else {\r\n                    this.velocity.x = this.direction.x * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.x = Math.abs(this.velocity.x) > 1 ? this.velocity.x * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            let positionBeforeX = this.controls.getObject().position.x;\r\n            let positionBeforeZ = this.controls.getObject().position.z;\r\n\r\n            this.controls.moveForward(this.velocity.z * delta);\r\n            this.controls.moveRight(this.velocity.x * delta);\r\n\r\n            {//z轴碰撞检测\r\n                let Z0Flat = undefined;//z负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 10; i++) {\r\n                        this.checkRay.Z0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z0[i].ray.origin.x = positionBeforeX;//修正为移动前的x轴位置，防止使用位移后的位置检测墙壁\r\n                    }\r\n                    let rayMove = this.personOption.thickness / 2;\r\n                    this.checkRay.Z0[0].ray.origin.x += rayMove;\r\n                    this.checkRay.Z0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[1].ray.origin.x -= rayMove;\r\n                    this.checkRay.Z0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z0[2].ray.origin.x += rayMove;\r\n                    this.checkRay.Z0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z0[3].ray.origin.x -= rayMove;\r\n                    this.checkRay.Z0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z0[4].ray.origin.x += rayMove;\r\n                    this.checkRay.Z0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[5].ray.origin.x -= rayMove;\r\n                    this.checkRay.Z0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z0[6].ray.origin.z += rayMove;\r\n                    this.checkRay.Z0[6].ray.origin.y -= (this.personOption.sightHeight-0.5);\r\n                    this.checkRay.Z0[7].ray.origin.z -= rayMove;\r\n                    this.checkRay.Z0[7].ray.origin.y -= (this.personOption.sightHeight-0.5);\r\n\r\n                    this.checkRay.Z0[8].ray.origin.z += rayMove;\r\n                    this.checkRay.Z0[8].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.5);\r\n                    this.checkRay.Z0[9].ray.origin.z -= rayMove;\r\n                    this.checkRay.Z0[9].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.5);\r\n\r\n\r\n                    for (let i = 0; i < 10; i++) {\r\n                        let intersections = this.checkRay.Z0[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let Z0NearFlatTmp = intersections[0].point.z;\r\n                            Z0Flat = Math.max(Z0Flat === undefined ? Z0NearFlatTmp : Z0Flat, Z0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let Z1Flat = undefined;//z正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 10; i++) {\r\n                        this.checkRay.Z1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z1[i].ray.origin.x = positionBeforeX;\r\n                    }\r\n                    let rayMove = this.personOption.thickness / 2;\r\n                    this.checkRay.Z1[0].ray.origin.x += rayMove;\r\n                    this.checkRay.Z1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[1].ray.origin.x -= rayMove;\r\n                    this.checkRay.Z1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z1[2].ray.origin.x += rayMove;\r\n                    this.checkRay.Z1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z1[3].ray.origin.x -= rayMove;\r\n                    this.checkRay.Z1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z1[4].ray.origin.x += rayMove;\r\n                    this.checkRay.Z1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[5].ray.origin.x -= rayMove;\r\n                    this.checkRay.Z1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z0[6].ray.origin.z += rayMove;\r\n                    this.checkRay.Z0[6].ray.origin.y -= (this.personOption.sightHeight-0.5);\r\n                    this.checkRay.Z0[7].ray.origin.z -= rayMove;\r\n                    this.checkRay.Z0[7].ray.origin.y -= (this.personOption.sightHeight-0.5);\r\n\r\n                    this.checkRay.Z0[8].ray.origin.z += rayMove;\r\n                    this.checkRay.Z0[8].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.5);\r\n                    this.checkRay.Z0[9].ray.origin.z -= rayMove;\r\n                    this.checkRay.Z0[9].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.5);\r\n\r\n                    for (let i = 0; i < 10; i++) {\r\n                        let intersections = this.checkRay.Z1[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let Z1NearFlatTmp = intersections[0].point.z;\r\n                            Z1Flat = Math.min(Z1Flat === undefined ? Z1NearFlatTmp : Z1Flat, Z1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextZ = this.controls.getObject().position.z;\r\n                nextZ = Math.max(Z0Flat === undefined ? nextZ : (Z0Flat + this.personOption.thickness / 2 + 0.001), nextZ);\r\n                nextZ = Math.min(Z1Flat === undefined ? nextZ : (Z1Flat - this.personOption.thickness / 2 - 0.001), nextZ);\r\n                this.controls.getObject().position.z = nextZ\r\n            }\r\n\r\n            {//x轴碰撞检测\r\n                let X0Flat = undefined;//x负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 10; i++) {\r\n                        this.checkRay.X0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X0[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMove = this.personOption.thickness / 2;\r\n                    this.checkRay.X0[0].ray.origin.z += rayMove;\r\n                    this.checkRay.X0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X0[1].ray.origin.z -= rayMove;\r\n                    this.checkRay.X0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X0[2].ray.origin.z += rayMove;\r\n                    this.checkRay.X0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X0[3].ray.origin.z -= rayMove;\r\n                    this.checkRay.X0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X0[4].ray.origin.z += rayMove;\r\n                    this.checkRay.X0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    this.checkRay.X0[5].ray.origin.z -= rayMove;\r\n                    this.checkRay.X0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n\r\n                    this.checkRay.X0[6].ray.origin.z += rayMove;\r\n                    this.checkRay.X0[6].ray.origin.y -= (this.personOption.sightHeight-0.5);\r\n                    this.checkRay.X0[7].ray.origin.z -= rayMove;\r\n                    this.checkRay.X0[7].ray.origin.y -= (this.personOption.sightHeight-0.5);\r\n\r\n                    this.checkRay.X0[8].ray.origin.z += rayMove;\r\n                    this.checkRay.X0[8].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.5);\r\n                    this.checkRay.X0[9].ray.origin.z -= rayMove;\r\n                    this.checkRay.X0[9].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.5);\r\n\r\n\r\n                    for (let i = 0; i < 10; i++) {\r\n                        let intersections = this.checkRay.X0[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let X0NearFlatTmp = intersections[0].point.x;\r\n                            X0Flat = Math.max(X0Flat === undefined ? X0NearFlatTmp : X0Flat, X0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let X1Flat = undefined;//x正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 10; i++) {\r\n                        this.checkRay.X1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X1[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMove = this.personOption.thickness / 2;\r\n                    this.checkRay.X1[0].ray.origin.z += rayMove;\r\n                    this.checkRay.X1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[1].ray.origin.z -= rayMove;\r\n                    this.checkRay.X1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X1[2].ray.origin.z += rayMove;\r\n                    this.checkRay.X1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X1[3].ray.origin.z -= rayMove;\r\n                    this.checkRay.X1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X1[4].ray.origin.z += rayMove;\r\n                    this.checkRay.X1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[5].ray.origin.z -= rayMove;\r\n                    this.checkRay.X1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X0[6].ray.origin.z += rayMove;\r\n                    this.checkRay.X0[6].ray.origin.y -= (this.personOption.sightHeight-0.5);\r\n                    this.checkRay.X0[7].ray.origin.z -= rayMove;\r\n                    this.checkRay.X0[7].ray.origin.y -= (this.personOption.sightHeight-0.5);\r\n\r\n                    this.checkRay.X0[8].ray.origin.z += rayMove;\r\n                    this.checkRay.X0[8].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.5);\r\n                    this.checkRay.X0[9].ray.origin.z -= rayMove;\r\n                    this.checkRay.X0[9].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.5);\r\n\r\n                    for (let i = 0; i < 10; i++) {\r\n                        let intersections = this.checkRay.X1[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let X1NearFlatTmp = intersections[0].point.x;\r\n                            X1Flat = Math.min(X1Flat === undefined ? X1NearFlatTmp : X1Flat, X1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextX = this.controls.getObject().position.x;\r\n                nextX = Math.max(X0Flat === undefined ? nextX : (X0Flat + this.personOption.thickness / 2 + 0.001), nextX);\r\n                nextX = Math.min(X1Flat === undefined ? nextX : (X1Flat - this.personOption.thickness / 2 - 0.001), nextX);\r\n                this.controls.getObject().position.x = nextX\r\n                // console.log(Z0Flat,Z1Flat,X0Flat,X1Flat)\r\n            }\r\n            // console.log(this.controls.getObject().position.x,this.controls.getObject().position.y,this.controls.getObject().position.z)\r\n        }\r\n        //垂直方向移动+碰撞检测\r\n        {\r\n            let bottomFlatY = undefined;\r\n            //坠落四角检测\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2;\r\n                this.checkRay.Y0[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y0[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y0[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let bottomFlatYTmp = intersections[0].point.y;\r\n                        bottomFlatY = Math.max(bottomFlatY === undefined ? bottomFlatYTmp : bottomFlatY, bottomFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //头顶四角检测\r\n            let topFlatY = undefined;\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2 - 0.01;\r\n                this.checkRay.Y1[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y1[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y1[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let topFlatYTmp = intersections[0].point.y;\r\n                        topFlatY = Math.min(topFlatY === undefined ? topFlatYTmp : topFlatY, topFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //无碰撞时下次垂直位置(相机位置)\r\n            let nextY = this.controls.getObject().position.y + (this.velocity.y * delta);\r\n            if (topFlatY !== undefined) {\r\n                if (nextY > topFlatY - (this.personOption.height - this.personOption.sightHeight)) {\r\n                    nextY = topFlatY - (this.personOption.height - this.personOption.sightHeight)\r\n                    this.velocity.y = 0;\r\n                }\r\n            }\r\n            if (bottomFlatY !== undefined) {\r\n                //下方检测到平台时，脚部不能低于最低平台\r\n                nextY = Math.max(bottomFlatY + this.personOption.sightHeight, nextY);\r\n                if (nextY === bottomFlatY + this.personOption.sightHeight) {\r\n                    this.velocity.y = 0;\r\n                    this.canJump = true;\r\n                } else {\r\n                    this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n                }\r\n            } else {\r\n                //下方未检测到平台时\r\n                this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n            }\r\n            this.controls.getObject().position.y = nextY;\r\n        }\r\n        //掉落位置重置\r\n        if (this.controls.getObject().position.y < -500) {\r\n            this.velocity.y = 0;\r\n            this.controls.getObject().position.y = 500;\r\n            this.controls.getObject().position.x = 0;\r\n            this.controls.getObject().position.z = 0;\r\n        }\r\n        this.updatePreviewCube();\r\n    }\r\n\r\n    initMouseFunction() {\r\n        //点击功能\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(this.objects, this.camera);//this.scene.children\r\n            if (clickedObjects.length > 0) {\r\n                console.log(\"点击对象【\" + clickedObjects[0].object.name + \"】\", clickedObjects[0]);\r\n                if (\r\n                    clickedObjects[0]\r\n                    && clickedObjects[0].distance <= 10\r\n                    && clickedObjects[0].face && clickedObjects[0].face.normal\r\n                    && clickedObjects[0].object && clickedObjects[0].object.position\r\n                ) {\r\n                    let normal = clickedObjects[0].face.normal;\r\n                    let rotate = clickedObjects[0].object.rotation;\r\n                    let position = clickedObjects[0].object.position;\r\n                    let point = clickedObjects[0].point;\r\n\r\n                    let targetIsHalfCube = DefaultCube[clickedObjects[0].object.userData.cubeTypeKey].cubeAttributes.isHalfCube;\r\n                    // this.objects.findIndex(e => e.userData)\r\n                    // console.log(normal.x, normal.y, normal.z, position.x, position.y, position.z)\r\n\r\n                    let newPositionVector = new THREE.Vector3(normal.x, normal.y, normal.z);\r\n                    newPositionVector = newPositionVector.applyAxisAngle(new THREE.Vector3(0, 0, 1), rotate.z);\r\n                    newPositionVector = newPositionVector.applyAxisAngle(new THREE.Vector3(0, 1, 0), rotate.y);\r\n                    newPositionVector = newPositionVector.applyAxisAngle(new THREE.Vector3(1, 0, 0), rotate.x);\r\n                    newPositionVector.round();\r\n\r\n                    let yMove = newPositionVector.y;\r\n                    {\r\n                        let newIsHalfCube = DefaultCube[Object.keys(DefaultCube)[this.currentCubeTypeIndex]].cubeAttributes && DefaultCube[Object.keys(DefaultCube)[this.currentCubeTypeIndex]].cubeAttributes.isHalfCube;\r\n                        if (targetIsHalfCube) {\r\n                            if (newIsHalfCube) {\r\n                                if (newPositionVector.y !== 0) {\r\n                                    yMove = newPositionVector.y / 2\r\n                                }\r\n                            } else {\r\n                                if (newPositionVector.y !== 0) {\r\n                                    if (position.y > 0 ? position.y % 1 === 0.25 : position.y % 1 === -0.75) {\r\n                                        yMove = newPositionVector.y * (newPositionVector.y > 0 ? 3 : 5) / 4  //上半砖\r\n                                    } else {\r\n                                        yMove = newPositionVector.y * (newPositionVector.y > 0 ? 5 : 3) / 4  //下半砖\r\n                                    }\r\n                                } else {\r\n                                    if (position.y > 0 ? position.y % 1 === 0.25 : position.y % 1 === -0.75) {\r\n                                        yMove = -1 / 4  //上半砖\r\n                                    } else {\r\n                                        yMove = 1 / 4  //下半砖\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (newIsHalfCube) {\r\n                                if (newPositionVector.y !== 0) {\r\n                                    yMove = newPositionVector.y * 3 / 4;\r\n                                } else {\r\n                                    yMove = (point.y > position.y ? 1 : -1) / 4;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    let newPosition = {\r\n                        x: position.x + newPositionVector.x,\r\n                        y: position.y + yMove,\r\n                        z: position.z + newPositionVector.z,\r\n                    };\r\n                    if (event.button === 2) {//添加方块 右键\r\n                        //TODO 添加方块代码独立，方块不能添加到人物所站的地方\r\n                        let newDirectionRotate = {\r\n                            x: 0,\r\n                            y: 0,\r\n                            z: 0,\r\n                        };\r\n                        {//放置 转向\r\n                            let newDirection;\r\n                            let worldDirection = this.camera.getWorldDirection(new Vector3(1, 0, 0));\r\n                            if (Math.abs(worldDirection.x) >= Math.abs(worldDirection.z)) {\r\n                                newDirection = new Vector3(-worldDirection.x, 0, 0)\r\n                            } else {\r\n                                newDirection = new Vector3(0, 0, -worldDirection.z)\r\n                            }\r\n                            newDirection.normalize().round();\r\n                            if (Math.abs(worldDirection.y) >= 0.5) {\r\n                                newDirection.y = worldDirection.y > 0 ? 1 : -1\r\n                            }\r\n                            //水平旋转\r\n                            if (newDirection.x === 1) {\r\n                                newDirectionRotate.y = 0;\r\n                            } else if (newDirection.x === -1) {\r\n                                newDirectionRotate.y = 180;\r\n                            } else if (newDirection.z === 1) {\r\n                                newDirectionRotate.y = -90;\r\n                            } else if (newDirection.z === -1) {\r\n                                newDirectionRotate.y = 90;\r\n                            }\r\n                            //垂直旋转\r\n                            if (newDirection.y !== 0) {\r\n                                newDirectionRotate.z = newDirection.y > 0 ? -90 : 90;\r\n                            }\r\n                            newDirectionRotate.z += 90;//放置时方块顶部面冲玩家\r\n                        }\r\n                        let cubeFactory = new CubeFactory(DefaultCube[Object.keys(DefaultCube)[this.currentCubeTypeIndex]]);\r\n                        let cube = cubeFactory.buildCube(newPosition.x, newPosition.y, newPosition.z, DefaultCube[Object.keys(DefaultCube)[this.currentCubeTypeIndex]], 0, newDirectionRotate.y, newDirectionRotate.z);\r\n                        this.scene.add(cube);\r\n                        this.objects.push(cube)\r\n                    } else if (event.button === 0) {//删除方块 左键\r\n                        //TODO 改为长按同一方块时才删除\r\n                        // console.log(clickedObjects[0].object, this.scene.getObjectByName(clickedObjects[0].object.name));\r\n                        let index = this.objects.findIndex(e => e.id === clickedObjects[0].object.id);\r\n                        if (index >= 0) {\r\n                            this.objects.splice(index, 1);\r\n                        }\r\n                        this.scene.remove(this.scene.getObjectById(clickedObjects[0].object.id));\r\n                    }\r\n                }\r\n            }\r\n        }, false);\r\n        //滑轮功能\r\n        {\r\n            if (document.addEventListener) {//firefox\r\n                document.addEventListener('DOMMouseScroll', (e) => {\r\n                    e = e || window.event;\r\n                    if (e.wheelDelta) { //第一步：先判断浏览器IE，谷歌滑轮事件\r\n                        this.changeCurrentCubeTypeIndex(e.wheelDelta < 0);\r\n                    } else if (e.detail) { //Firefox滑轮事件\r\n                        this.changeCurrentCubeTypeIndex(e.detail < 0);\r\n                    }\r\n                }, false);\r\n            }\r\n            //滚动滑轮触发scrollFunc方法 //ie 谷歌\r\n            window.onmousewheel = (e) => {\r\n                console.log('滑轮', this.currentCubeTypeIndex);\r\n                e = e || window.event;\r\n                if (e.wheelDelta) { //第一步：先判断浏览器IE，谷歌滑轮事件\r\n                    this.changeCurrentCubeTypeIndex(e.wheelDelta < 0);\r\n                } else if (e.detail) { //Firefox滑轮事件\r\n                    this.changeCurrentCubeTypeIndex(e.detail < 0);\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    changeCurrentCubeTypeIndex(isNext) {\r\n        if (isNext) {\r\n            this.currentCubeTypeIndex++;\r\n            if (this.currentCubeTypeIndex === Object.keys(DefaultCube).length) {\r\n                this.currentCubeTypeIndex = 0;\r\n            }\r\n        } else {\r\n            if (this.currentCubeTypeIndex === 0) {\r\n                this.currentCubeTypeIndex = Object.keys(DefaultCube).length;\r\n            }\r\n            this.currentCubeTypeIndex--;\r\n        }\r\n    }\r\n\r\n    getCurrentCubeTypeIndex(plusValue) {\r\n        let result = this.currentCubeTypeIndex + (plusValue || 0) % Object.keys(DefaultCube).length;\r\n        if (result >= 0) {\r\n            return result;\r\n        } else {\r\n            return Object.keys(DefaultCube).length - 1 + result\r\n        }\r\n    }\r\n\r\n    initPreviewCube() {\r\n        this.previewCube = new CubeFactory(DefaultCube[Object.keys(DefaultCube)[this.currentCubeTypeIndex]]).buildCube();\r\n        this.scene.add(this.previewCube);\r\n    }\r\n\r\n    updatePreviewCube() {\r\n        //形状刷新\r\n        {\r\n            if (!this.previewCube.geometryMap) {\r\n                this.previewCube.geometryMap = {};\r\n            }\r\n\r\n            if (this.previewCubeType !== Object.keys(DefaultCube)[this.currentCubeTypeIndex]) {\r\n                this.previewCubeType = Object.keys(DefaultCube)[this.currentCubeTypeIndex];\r\n                if (this.previewCube.geometryMap[Object.keys(DefaultCube)[this.currentCubeTypeIndex]]) {\r\n                    this.previewCube.geometry = this.previewCube.geometryMap[Object.keys(DefaultCube)[this.currentCubeTypeIndex]]\r\n                } else {\r\n                    let previewGeometry = new CubeFactory(DefaultCube[Object.keys(DefaultCube)[this.getCurrentCubeTypeIndex()]])._geometry.clone();\r\n                    previewGeometry.scale(0.01, 0.01, 0.01);\r\n                    this.previewCube.geometry = previewGeometry;\r\n                    this.previewCube.geometryMap[Object.keys(DefaultCube)[this.currentCubeTypeIndex]] = previewGeometry;\r\n                }\r\n            }\r\n        }\r\n        //材质刷新\r\n        this.previewCube.material = new CubeFactory(DefaultCube[Object.keys(DefaultCube)[this.getCurrentCubeTypeIndex()]])._materials;\r\n        //位置刷新\r\n        this.previewCube.position.copy(this.camera.position);\r\n        //旋转刷新\r\n        {\r\n            {\r\n                if (!this.previewCubeRotation) {\r\n                    this.previewCubeRotation = {\r\n                        y: 0,\r\n                    }\r\n                } else {\r\n                    this.previewCubeRotation.y += Math.PI / 180;\r\n                }\r\n            }\r\n            this.previewCube.rotation.copy(this.camera.rotation);\r\n            this.previewCube.position.add(\r\n                new Vector3(0, -0.065, -0.2)\r\n                    .applyAxisAngle(new Vector3(0, 0, 1), this.camera.rotation.z)\r\n                    .applyAxisAngle(new Vector3(0, 1, 0), this.camera.rotation.y)\r\n                    .applyAxisAngle(new Vector3(1, 0, 0), this.camera.rotation.x)\r\n            );\r\n            this.previewCube.rotateY(Math.PI / 4 + this.previewCubeRotation.y)\r\n        }\r\n    }\r\n}\r\n\r\nfunction setAimStyle(aimEl) {\r\n    aimEl.style.position = \"fixed\";\r\n    aimEl.style.left = \"50%\";\r\n    aimEl.style.top = \"50%\";\r\n    aimEl.style.transform = \"translate(-50%,-50%)\";\r\n    aimEl.style.zIndex = \"1\";\r\n    aimEl.style.fontSize = \"100%\";\r\n    aimEl.style.fontWeight = \"bold\";\r\n    aimEl.style.textAlign = \"center\";\r\n    aimEl.style.verticalAlign = \"middle\";\r\n    aimEl.style.lineHeight = \"10px\";\r\n    aimEl.style.fontFamily = \"\\\"Times New Roman\\\",serif\";\r\n    aimEl.style.backgroundColor = \"#E0E0E0\";\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let aim = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    aim.x = 0;\r\n    aim.y = 0;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(aim, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}\r\n\r\n\r\n\r\n\r\n","import * as THREE from 'three'\r\nimport {WEBGL} from \"three/examples/jsm/WebGL.js\";\r\n// import TWEEN from \"@tweenjs/tween.js\";//动作库\r\nimport CubeFactory from \"./utils/objects/cube/CubeFactory.js\";\r\nimport StatsWindow from \"./utils/stats/StatsWindow.js\";\r\nimport {initAmbientLight, getAmbientLightIntensity, lightHighIntensity, lightLowIntensity, lightCurrentIntensity, lightValueBecomeHigher, initDirectionalLight, getDirectionalLightIntensity, initDirectionalLight1} from \"./utils/basic/Light\";\r\nimport {initBGMPlayer} from \"./utils/sound/Bgm\";\r\nimport {initScene} from \"./utils/basic/Scene\";\r\nimport {initCamera} from \"./utils/basic/Camera\";\r\nimport {initRenderer} from \"./utils/basic/Renderer\";\r\nimport {initControls} from \"./utils/controls/ControlBuilder\";\r\nimport DefaultCube from \"./utils/objects/cube/DefaultCube\";\r\nimport GlobalSetting from \"./utils/setting/GlobalSetting\";\r\n\r\nif (!WEBGL.isWebGLAvailable()) {\r\n    document.body.appendChild(WEBGL.getWebGLErrorMessage());\r\n}\r\n//------------------------------------初始化基本对象-结束------------------------------------------------\r\nlet canvasEL = document.getElementById(\"canvas-frame\");\r\n// 舞台*\r\nlet scene = initScene();\r\n// 光源*\r\nlet lightAmbient = initAmbientLight();\r\nscene.add(lightAmbient);\r\nlet lightDirectional;\r\nif (GlobalSetting.enableShadow) {\r\n    lightDirectional = initDirectionalLight();\r\n    scene.add(lightDirectional);\r\n}\r\n\r\n// 相机*\r\nlet camera = initCamera();\r\ncamera.aspect = canvasEL.offsetWidth / canvasEL.offsetHeight;\r\ncamera.updateProjectionMatrix();\r\nscene.add(camera);\r\n// 渲染器*\r\nlet renderer = initRenderer();\r\nrenderer.setSize(canvasEL.offsetWidth, canvasEL.offsetHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\ndocument.getElementById('canvas-frame').appendChild(renderer.domElement);\r\n// 收集所欲加入到场景的方块对象\r\nlet objects = [];\r\n// 相机控制器\r\nlet controls = initControls(\"MCFirstPersonControl\", scene, camera, renderer, objects);\r\n//------------------------------------初始化基本对象-结束------------------------------------------------\r\n//-----------以下为物体添加代码---------------------------------------------------------------\r\n// import * as AddXYZLing from './utils/objects/AddXYZLine';\r\n\r\n// AddXYZLing.buildXYZLine(scene);\r\n\r\nlet lightOption = {\r\n    current: lightCurrentIntensity,\r\n    low: lightLowIntensity,\r\n    high: lightHighIntensity,\r\n    becomeHigher: lightValueBecomeHigher\r\n};\r\n\r\nfunction changeLight() {\r\n    lightAmbient.intensity = getAmbientLightIntensity(lightOption.current, lightOption.high, lightOption.low);\r\n    if (GlobalSetting.enableShadow) {\r\n        lightDirectional.intensity = getDirectionalLightIntensity(lightOption.current, lightOption.high, lightOption.low);\r\n    }\r\n    if (lightOption.becomeHigher) {\r\n        let tmp = lightOption.current >= lightOption.low - (lightOption.high - lightOption.low);\r\n        if (tmp) {\r\n            lightOption.current -= 0.002;\r\n        } else {\r\n            lightOption.becomeHigher = false;\r\n        }\r\n    } else {\r\n        if (lightOption.current <= lightOption.high + (lightOption.high - lightOption.low)) {\r\n            lightOption.current += 0.002;\r\n        } else {\r\n            if (lightOption.current > 1.5) {\r\n                lightOption.becomeHigher = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n(function addGrassCubes() {\r\n    let cubeFactory = new CubeFactory(DefaultCube.grass);\r\n    {\r\n        let testBlock = [];\r\n        let width = 10;\r\n        //底板\r\n        for (let x = -width; x < width; x++) {\r\n            for (let z = -width; z < width; z++) {\r\n                testBlock.push([x, -1, z]);\r\n            }\r\n        }\r\n        //阶梯\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                for (let y = 0; y < 5; y++) {\r\n                    if (y >= x) {\r\n                        testBlock.push([x - 7, y - x, z - 7])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //土堆\r\n        {\r\n            let mountainHeight = 4;\r\n            for (let y = 0; y < mountainHeight; y++) {\r\n                for (let x = y; x < 2 * mountainHeight - y; x++) {\r\n                    for (let z = y; z < 2 * mountainHeight - y; z++) {\r\n                        testBlock.push([x - 5, y, z + 1])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //碰撞检测用\r\n        {\r\n            for (let x = 0; x < 5; x++) {\r\n                for (let z = 0; z < 5; z++) {\r\n                    if (x !== 2 || z !== 2) {\r\n                        testBlock.push([x, 0, z - 5]);\r\n                    }\r\n                }\r\n            }\r\n            testBlock.push([0, 1, -5]);\r\n            testBlock.push([3, 3, -5]);\r\n            testBlock.push([2, 3, -5]);\r\n            testBlock.push([3, 3, -4]);\r\n            testBlock.push([2, 3, -4]);\r\n            testBlock.push([3, 3, -6]);\r\n            testBlock.push([2, 3, -6]);\r\n            testBlock.push([3, 3, -7]);\r\n            testBlock.push([2, 3, -7]);\r\n            testBlock.push([3, 2, -8]);\r\n            testBlock.push([2, 2, -8]);\r\n            testBlock.push([5, 2, -4]);\r\n            testBlock.push([4, 2, -4]);\r\n            testBlock.push([0, 1, -5]);\r\n        }\r\n\r\n        let zValue = -10;\r\n        let xValue = 8;\r\n        let yValue = 1;\r\n        for (let cubeType of Object.values(DefaultCube)) {\r\n            let idHalfCube = cubeType.cubeAttributes && cubeType.cubeAttributes.isHalfCube;\r\n            testBlock.push([xValue, idHalfCube ? yValue - 1 / 4 : yValue, zValue++, cubeType]);\r\n            if (zValue === 10) {\r\n                yValue++;\r\n                zValue = -10;\r\n            }\r\n        }\r\n\r\n        testBlock.push([0, 15, 0, DefaultCube.grass]);\r\n\r\n\r\n        for (let cubeInfo of testBlock) {\r\n            let cube = cubeFactory.buildCube(...cubeInfo);\r\n\r\n            scene.add(cube);\r\n            objects.push(cube);\r\n        }\r\n    }\r\n})();\r\n\r\nlet prevTime = performance.now();\r\n\r\n(function animate() {\r\n    requestAnimationFrame(animate);\r\n    let time = performance.now();\r\n    let delta = (time - prevTime) / 1000;\r\n    prevTime = time;\r\n    // TWEEN.update(delta);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n    new StatsWindow(\"canvas-frame\").stats.update(delta);\r\n    changeLight();\r\n})();\r\n\r\nwindow.onresize = () => {\r\n    //更新相机视角比例\r\n    camera.aspect = canvasEL.offsetWidth / canvasEL.offsetHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(canvasEL.offsetWidth, canvasEL.offsetHeight);\r\n};\r\n\r\nwindow.onload = () => {\r\n    initBGMPlayer();\r\n};\r\n","import * as THREE from 'three';\r\nexport function initScene() {\r\n    let scene = new THREE.Scene();\r\n    let backgroundColor= 0x87CEEB;\r\n    scene.name = 'SCENE';\r\n    scene.fog = new THREE.FogExp2(backgroundColor, 0.005);//雾效果\r\n    //增加天空盒\r\n    (function skyBox(backgroundType) {\r\n        backgroundType = backgroundType || 1;\r\n        let textureCube = new THREE.CubeTextureLoader().load([\r\n            './assets/img/1.png',\r\n            './assets/img/2.png',\r\n            './assets/img/3.png',\r\n            './assets/img/4.png',\r\n            './assets/img/5.png',\r\n            './assets/img/6.png'\r\n        ]);\r\n        if (backgroundType === 1) {//使用场景背景添加\r\n            scene.background = new THREE.Color(backgroundColor);\r\n        } else if (backgroundType === 2) {\r\n            scene.background = textureCube\r\n        } else {//使用盒子添加\r\n            //着色器\r\n            let cubeShader = THREE.ShaderLib[\"cube\"];\r\n            cubeShader.uniforms[\"tCube\"].value = textureCube;\r\n            let material = new THREE.ShaderMaterial({\r\n                fragmentShader: cubeShader.fragmentShader,  //定义自己的片元着色器\r\n                vertexShader: cubeShader.vertexShader,  //定义自己的顶点着色器\r\n                uniforms: cubeShader.uniforms,  //给着色器传入uniform变量的值\r\n                depthWrite: false,  //决定这个材质是否影响WebGL的深度缓存\r\n                side: THREE.BackSide,  //侧面：反面\r\n            });\r\n            //创建方盒子\r\n            let cubeWithPic = new THREE.Mesh(new THREE.CubeGeometry(1000000, 1000000, 1000000), material);\r\n            scene.add(cubeWithPic);\r\n        }\r\n    })(1);\r\n    return scene;\r\n}","import * as THREE from \"three\";\r\n\r\nexport function initCamera() {\r\n    let camera = new THREE.PerspectiveCamera();\r\n    camera.name = \"CAMERA\";\r\n    camera.fov = 45; //fov表示摄像机视锥体垂直视野角度，最小值为0，最大值为180，默认值为50，实际项目中一般都定义45，因为45最接近人正常睁眼角度\r\n    // camera.aspect = width / height; //aspect表示摄像机视锥体长宽比，默认长宽比为1，即表示看到的是正方形，实际项目中使用的是屏幕的宽高比\r\n    camera.near = 0.1; //near表示摄像机视锥体近端面，这个值默认为0.1，实际项目中都会设置为1\r\n    camera.far = 1000; //far表示摄像机视锥体远端面，默认为2000，这个值可以是无限的，说的简单点就是我们视觉所能看到的最远距离\r\n    camera.position.x = 0;\r\n    camera.position.y = 10;\r\n    camera.position.z = 0;\r\n    return camera;\r\n}","import * as THREE from \"three\";\r\nimport GlobalSetting from \"../setting/GlobalSetting\";\r\n\r\nexport function initRenderer() {\r\n    let renderer = new THREE.WebGLRenderer();\r\n    renderer.name = 'RENDERER';\r\n    // renderer.antialias = true;//是否开启反锯齿\r\n    renderer.shadowMap.enabled =  GlobalSetting.enableShadow;\r\n    // renderer.shadowMap.type = THREE.PCFSoftShadowMap;//更柔和的影子，需要的性能更高\r\n    // renderer.setSize(width, height);\r\n    renderer.setClearColor(0xFFFFFF, 1.0);//背景颜色\r\n    return renderer\r\n}","import ShowOrbitControl from \"./ShowOrbitControl\";\r\nimport MCFirstPersonControl from \"./MCFirstPersonControl\";\r\n\r\nexport function initControls(controlsType,scene,camera,renderer,objects) {\r\n    let controls;\r\n    switch (controlsType) {\r\n        case \"ShowOrbitControl\":\r\n            let showOrbitControl = new ShowOrbitControl(camera, renderer.domElement);\r\n            showOrbitControl.initClickFunction(scene.children);\r\n            controls = showOrbitControl.controls;\r\n            break;\r\n        case \"MCFirstPersonControl\":\r\n            let mcFirstPersonControl = new MCFirstPersonControl(camera, renderer.domElement, objects, scene);\r\n            controls = mcFirstPersonControl;\r\n            break;\r\n    }\r\n    return controls;\r\n}","\r\nexport  function initBGMPlayer() {\r\n    let audioBGM;\r\n    let currentIndex = 0;\r\n    let arr = [//把需要播放的歌曲从后往前排，这里已添加两首音乐，可继续添加多个音乐\r\n        \"./assets/sound/calm1.ogg\",\r\n        \"./assets/sound/calm2.ogg\",\r\n        \"./assets/sound/calm3.ogg\",\r\n        \"./assets/sound/hal1.ogg\",\r\n        \"./assets/sound/hal2.ogg\",\r\n        \"./assets/sound/hal3.ogg\",\r\n        \"./assets/sound/hal4.ogg\",\r\n    ];\r\n    audioBGM = new Audio();\r\n    audioBGM.preload = \"true\";\r\n    audioBGM.controls = true;\r\n    audioBGM.autoplay = true;\r\n    // audioBGM.muted = true;\r\n    audioBGM.hidden = true;\r\n    audioBGM.style.display = \"none\";\r\n    audioBGM.style.position = \"fixed\";\r\n    audioBGM.style.top = \"0\";\r\n    audioBGM.style.right = \"0\";\r\n    audioBGM.style.zIndex = \"101\";\r\n    audioBGM.loop = false;//禁止循环，否则无法触发ended事件\r\n    audioBGM.src = arr[currentIndex];         //每次读数组最后一个元素\r\n    audioBGM.addEventListener('ended', playEndedHandler, false);\r\n    document.addEventListener('click', playHandler, false);\r\n    // audioBGM.play();\r\n    document.body.appendChild(audioBGM);\r\n\r\n    function playEndedHandler() {\r\n        currentIndex++;\r\n        if (currentIndex >= arr.length) {\r\n            currentIndex = 0;\r\n        }\r\n        audioBGM.src = arr[currentIndex];\r\n        audioBGM.play();\r\n        // myAudio.removeEventListener('ended', playEndedHandler, false);\r\n    }\r\n\r\n    function playHandler() {\r\n        audioBGM.play();\r\n        document.removeEventListener('click', playHandler, false);\r\n    }\r\n    return audioBGM;\r\n}"],"sourceRoot":""}