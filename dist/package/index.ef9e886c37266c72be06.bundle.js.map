{"version":3,"sources":["webpack:///./src/utils/objects/CubeFactory.js","webpack:///./src/utils/stats/StatsWindow.js","webpack:///./src/utils/controls/MCFirstPersonControl.js","webpack:///./src/utils/objects/AddXYZLine.js","webpack:///./src/index.js"],"names":["cubeType","customCubeImages","this","_images","_materials","_cubeSize","DefaultCubeInfo","GrassDirt","images","material","Cloud","transparent","opacity","length","textureLoader","i","texture","load","generateMipmaps","magFilter","minFilter","extraOptions","push","map","fog","x","y","z","cube","position","name","initImages","initMaterials","buildCube","canvasElId","_instance","stats","domElement","style","left","top","document","getElementById","appendChild","camera","objects","checkRay","lowX0Z0","undefined","lowX0Z1","lowX1Z0","lowX1Z1","highX0Z0","highX0Z1","highX1Z0","highX1Z1","Y0","Y1","moveForward","moveBackward","moveLeft","moveRight","preRuning","isRunning","canJump","velocity","direction","worldOption","g","personOption","height","sightHeight","jumpHeight","speedWalk","speedRun","accelerateRateStart","accelerateRateStop","init","controls","PointerLockControls","blocker","createElement","zIndex","width","body","append","addEventListener","lock","display","aimX","setAimStyle","aimY","event","keyCode","performance","now","Math","sqrt","delta","isLocked","Number","normalize","velocityXZMax","velocityZTmp","abs","velocityXTmp","bottomFlatY","ray","origin","copy","getObject","intersections","intersectObjects","bottomFlatYTmp","point","max","topFlatY","topFlatYTmp","min","nextY","window","clickedObjects","raycaster","aim","setFromCamera","obj","object","console","log","aimEl","transform","fontSize","fontWeight","textAlign","verticalAlign","lineHeight","fontFamily","backgroundColor","buildLine","x1","y1","z1","x2","y2","z2","color","startPoint","endPoint","geometry","vertices","isWebGLAvailable","getWebGLErrorMessage","lightAmbient","renderer","canvasEL","offsetWidth","offsetHeight","sceneOption","scene","backgroundType","textureCube","background","cubeShader","uniforms","value","fragmentShader","vertexShader","depthWrite","side","cubeWithPic","add","lightCurrentIntensity","lightValueChangeDirection","lightHighIntensity","lightLowIntensity","getAmbientLightIntensity","antialias","shadowMap","enabled","type","setSize","setClearColor","mcFirstPersonControl","initClickFunction","children","lines","cubeFactory","mountain","mountainHeight","cubePosition","create","prevTime","animate","requestAnimationFrame","time","update","render","intensity","onresize","aspect","updateProjectionMatrix"],"mappings":"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","file":"package/index.ef9e886c37266c72be06.bundle.js","sourcesContent":["import * as THREE from 'three';\r\n\r\nexport default class CubeFactory {\r\n    constructor(cubeType, customCubeImages) {\r\n        this.cubeType = cubeType;\r\n        this.customCubeImages = customCubeImages;\r\n        this._images = [];//实际使用的贴图\r\n        this._materials = [];\r\n        this._cubeSize = 1;//方块边长，默认1\r\n        CubeFactory.customCubeImages = [];//自定义贴图，仅在cubeType为“custom”时生效\r\n        //预设方块信息\r\n        CubeFactory.DefaultCubeInfo = {\r\n            GrassDirt: {\r\n                images: [\r\n                    '../assets/img/blocks/grass_side.png',\r\n                    '../assets/img/blocks/grass_side.png',\r\n                    '../assets/img/blocks/grass_top_green.png',\r\n                    '../assets/img/blocks/dirt.png',\r\n                    '../assets/img/blocks/grass_side.png',\r\n                    '../assets/img/blocks/grass_side.png',\r\n                ],\r\n                material: {}\r\n            },\r\n            Cloud: {\r\n                images: [\r\n                    '../assets/img/blocks/grass_side.png',\r\n                    '../assets/img/blocks/grass_side.png',\r\n                    '../assets/img/blocks/grass_top_green.png',\r\n                    '../assets/img/blocks/dirt.png',\r\n                    '../assets/img/blocks/grass_side.png',\r\n                    '../assets/img/blocks/grass_side.png',\r\n                ],\r\n                material: {\r\n                    transparent: true,//透明\r\n                    opacity: 0.2,//透明度\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    //初始化images\r\n    initImages() {\r\n        if (this._images && this._images.length !== 0) {\r\n            return;\r\n        }\r\n        if (this.cubeType === \"Custom\") {\r\n            this._images = this.customCubeImages;\r\n        } else if (CubeFactory.DefaultCubeInfo[this.cubeType]) {\r\n            this._images = CubeFactory.DefaultCubeInfo[this.cubeType].images;\r\n        } else {\r\n            throw \"unknown cubeType\";\r\n        }\r\n    };\r\n\r\n    //初始化材质\r\n    initMaterials() {\r\n        if (this._materials && this._materials.length !== 0) {\r\n            return;\r\n        }\r\n        let textureLoader = new THREE.TextureLoader();\r\n        for (let i = 0; i < 6; ++i) {\r\n            let texture = textureLoader.load(this._images[i]);\r\n            texture.generateMipmaps = false;\r\n            texture.magFilter = THREE.NearestFilter;\r\n            texture.minFilter = THREE.NearestFilter;\r\n            let extraOptions = {};\r\n            if (CubeFactory.DefaultCubeInfo[this.cubeType]) {\r\n                extraOptions = CubeFactory.DefaultCubeInfo[this.cubeType].material;\r\n            }\r\n            this._materials.push(\r\n                new THREE.MeshLambertMaterial({\r\n                    map: texture,\r\n                    fog: true,//当前材质是否受到全局雾化效果器影响\r\n                    ...extraOptions\r\n                }));\r\n        }\r\n    };\r\n\r\n    //构造方块\r\n    buildCube(x, y, z) {\r\n        x = x || 0;\r\n        y = y || 0;\r\n        z = z || 0;\r\n        let cube = new THREE.Mesh(new THREE.CubeGeometry(this._cubeSize, this._cubeSize, this._cubeSize), this._materials);\r\n        // cube.receiveShadow = cube.castShadow = true;\r\n        cube.position.x = x + this._cubeSize / 2;\r\n        cube.position.y = y + this._cubeSize / 2;\r\n        cube.position.z = z + this._cubeSize / 2;\r\n        cube.name = \"GrassCube(\" + x + \",\" + y + \",\" + z + \")\";\r\n        return cube;\r\n    }\r\n\r\n    create(x, y, z) {\r\n        this.initImages();\r\n        this.initMaterials();\r\n        return this.buildCube(x, y, z);\r\n    }\r\n}","// 查看信息小控件\r\nimport Stats from \"stats-js\";\r\n\r\nexport default class StatsWindow {\r\n    constructor(canvasElId) {\r\n        StatsWindow._instance;\r\n        this.stats;\r\n        if (StatsWindow._instance) {\r\n            return StatsWindow._instance;\r\n        }\r\n        this.stats = new Stats();\r\n        this.stats.domElement.style.position = 'absolute';\r\n        this.stats.domElement.style.left = '0px';\r\n        this.stats.domElement.style.top = '0px';\r\n        document.getElementById(canvasElId).appendChild(this.stats.domElement);\r\n        StatsWindow._instance = this;\r\n        return this;\r\n    }\r\n}\r\n\r\n","import {PointerLockControls} from 'three/examples/jsm/controls/PointerLockControls'\r\nimport * as THREE from 'three';\r\n\r\nexport default class MCFirstPersonControl {\r\n\r\n    constructor(camera, domElement, objects) {\r\n        // MCFirstPersonControl._instance;\r\n        // this.controls;\r\n        this.camera = camera;\r\n        if (MCFirstPersonControl._instance) {\r\n            return MCFirstPersonControl._instance;\r\n        }\r\n        this.checkRay = {//0为负，1为正\r\n            lowX0Z0: undefined,\r\n            lowX0Z1: undefined,\r\n            lowX1Z0: undefined,\r\n            lowX1Z1: undefined,\r\n            highX0Z0: undefined,\r\n            highX0Z1: undefined,\r\n            highX1Z0: undefined,\r\n            highX1Z1: undefined,\r\n\r\n            Y0: [],\r\n            Y1: [],\r\n        };\r\n        this.moveForward = false;\r\n        this.moveBackward = false;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.preRuning = undefined;\r\n        this.isRunning = false;\r\n        this.canJump = false;\r\n        this.objects = [];\r\n        // this.prevTime = performance.now();\r\n        this.velocity = new THREE.Vector3();\r\n        this.direction = new THREE.Vector3();\r\n        this.worldOption = {\r\n            g: 9.0\r\n        };\r\n        this.personOption = {\r\n            height: 1.8,//人物总高度\r\n            sightHeight: 1.5,//眼部高度\r\n            jumpHeight: 1.4,    //最大跳跃高度，实际为到此高度\r\n            speedWalk: 5.7,     //最大行走速度\r\n            speedRun: 10,       //最大奔跑速度，连按w两次\r\n            accelerateRateStart: 0.3,//加速时加速比率。正数向前；负数反向；0不会加速；绝对值大于等于1可立即到最大速度\r\n            accelerateRateStop: 0.9//停止时减速比率。范围[0-1]。0时不会减速，1时立即停止\r\n        };\r\n        this.init(camera, domElement, objects);\r\n        MCFirstPersonControl._instance = this;\r\n        return MCFirstPersonControl._instance;\r\n    }\r\n\r\n    init(camera, domElement, objects) {\r\n        this.objects = objects;\r\n        this.controls = new PointerLockControls(camera, domElement);\r\n        //增加遮罩层\r\n        {\r\n            let blocker = document.createElement(\"div\");\r\n            blocker.style.position = \"absolute\";\r\n            blocker.style.zIndex = \"1000\";\r\n            blocker.style.width = \"100%\";\r\n            blocker.style.height = \"100%\";\r\n            blocker.style.top = \"0\";\r\n            blocker.style.left = \"0\";\r\n            // blocker.style.backgroundColor = \"rgba(0, 0, 0, 0.4)\";\r\n            document.body.append(blocker);\r\n            blocker.addEventListener('click', () => {\r\n                this.controls.lock();\r\n            }, false);\r\n            this.controls.addEventListener('lock', function () {\r\n                blocker.style.display = 'none';\r\n            });\r\n            this.controls.addEventListener('unlock', function () {\r\n                blocker.style.display = 'block';\r\n            });\r\n        }\r\n        //添加准星\r\n        {\r\n            let aimX = document.createElement(\"div\");\r\n            aimX.style.height = \"2px\";\r\n            aimX.style.width = \"20px\";\r\n            setAimStyle(aimX);\r\n            document.body.append(aimX);\r\n            let aimY = document.createElement(\"div\");\r\n            aimY.style.height = \"20px\";\r\n            aimY.style.width = \"2px\";\r\n            setAimStyle(aimY);\r\n            document.body.append(aimY);\r\n        }\r\n        //加按键事件\r\n        let onKeyDown = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    if (this.moveForward) {\r\n                        break;\r\n                    }\r\n                    if (!this.preRuning) {\r\n                        this.preRuning = performance.now();\r\n                    } else {\r\n                        this.isRunning = performance.now() - this.preRuning <= 200;\r\n                        this.preRuning = performance.now();\r\n                    }\r\n                    this.moveForward = true;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    if (this.moveLeft) {\r\n                        break;\r\n                    }\r\n                    this.moveLeft = true;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    if (this.moveBackward) {\r\n                        break;\r\n                    }\r\n                    this.moveBackward = true;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    if (this.moveRight) {\r\n                        break;\r\n                    }\r\n                    this.moveRight = true;\r\n                    break;\r\n\r\n                case 32: // space\r\n                    //7.74是60开平方\r\n                    if (this.canJump) this.velocity.y += Math.sqrt(2 * this.worldOption.g * 7.74 * this.personOption.jumpHeight);\r\n                    this.canJump = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        let onKeyUp = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    this.isRunning = false;\r\n                    this.moveForward = false;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    this.moveLeft = false;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    this.moveBackward = false;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    this.moveRight = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        document.addEventListener('keydown', onKeyDown, false);\r\n        document.addEventListener('keyup', onKeyUp, false);\r\n        //加垂直方向碰撞检测\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 1, 0), 0, 0));\r\n        }\r\n    }\r\n\r\n    update(delta) {\r\n        delta = delta || 0.016;\r\n        if (!this.controls.isLocked) {\r\n            this.moveForward = false;\r\n            this.moveBackward = false;\r\n            this.moveLeft = false;\r\n            this.moveRight = false;\r\n        }\r\n        //水平方向移动\r\n        {\r\n            this.direction.z = Number(this.moveForward) - Number(this.moveBackward);\r\n            this.direction.x = Number(this.moveRight) - Number(this.moveLeft);\r\n            this.direction.normalize(); // this ensures consistent movements in all directions\r\n\r\n            let velocityXZMax = this.isRunning ? this.personOption.speedRun : this.personOption.speedWalk;\r\n            if (this.moveForward || this.moveBackward) {\r\n                let velocityZTmp = this.velocity.z + this.direction.z * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityZTmp) < velocityXZMax) {\r\n                    this.velocity.z = velocityZTmp;\r\n                } else {\r\n                    this.velocity.z = this.direction.z * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.z = Math.abs(this.velocity.z) > 1 ? this.velocity.z * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n            if (this.moveLeft || this.moveRight) {\r\n                let velocityXTmp = this.velocity.x + this.direction.x * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityXTmp) < velocityXZMax) {\r\n                    this.velocity.x = velocityXTmp;\r\n                } else {\r\n                    this.velocity.x = this.direction.x * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.x = Math.abs(this.velocity.x) > 1 ? this.velocity.x * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n            this.controls.moveRight(this.velocity.x * delta);\r\n            this.controls.moveForward(this.velocity.z * delta);\r\n        }\r\n        //垂直方向移动+碰撞检测\r\n        {\r\n            let bottomFlatY = undefined;\r\n            //坠落四角检测\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                this.checkRay.Y0[0].ray.origin.x += 0.4;\r\n                this.checkRay.Y0[0].ray.origin.z -= 0.4;\r\n                this.checkRay.Y0[1].ray.origin.x += 0.4;\r\n                this.checkRay.Y0[1].ray.origin.z += 0.4;\r\n                this.checkRay.Y0[2].ray.origin.x -= 0.4;\r\n                this.checkRay.Y0[2].ray.origin.z += 0.4;\r\n                this.checkRay.Y0[3].ray.origin.x -= 0.4;\r\n                this.checkRay.Y0[3].ray.origin.z -= 0.4;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y0[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let bottomFlatYTmp = intersections[0].point.y;\r\n                        bottomFlatY = Math.max(bottomFlatY === undefined ? bottomFlatYTmp : bottomFlatY, bottomFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //头顶四角检测\r\n            let topFlatY = undefined;\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                this.checkRay.Y1[0].ray.origin.x += 0.4;\r\n                this.checkRay.Y1[0].ray.origin.z -= 0.4;\r\n                this.checkRay.Y1[1].ray.origin.x += 0.4;\r\n                this.checkRay.Y1[1].ray.origin.z += 0.4;\r\n                this.checkRay.Y1[2].ray.origin.x -= 0.4;\r\n                this.checkRay.Y1[2].ray.origin.z += 0.4;\r\n                this.checkRay.Y1[3].ray.origin.x -= 0.4;\r\n                this.checkRay.Y1[3].ray.origin.z -= 0.4;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y1[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let topFlatYTmp = intersections[0].point.y;\r\n                        topFlatY = Math.min(topFlatY === undefined ? topFlatYTmp : topFlatY, topFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //无碰撞时下次垂直位置(相机位置)\r\n            let needStopY = false;\r\n            let nextY = this.controls.getObject().position.y + (this.velocity.y * delta);\r\n            if (topFlatY !== undefined) {\r\n                if (nextY > topFlatY - (this.personOption.height - this.personOption.sightHeight)) {\r\n                    nextY = topFlatY - (this.personOption.height - this.personOption.sightHeight)\r\n                    this.velocity.y = 0;\r\n                }\r\n            }\r\n            if (bottomFlatY !== undefined) {\r\n                //下方检测到平台时，脚部不能低于最低平台\r\n                this.controls.getObject().position.y = Math.max(bottomFlatY + this.personOption.sightHeight, nextY);\r\n                if (nextY > bottomFlatY + this.personOption.sightHeight) {\r\n                    this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n                } else {\r\n                    this.velocity.y = 0;\r\n                    this.canJump = true;\r\n                }\r\n            } else {\r\n                //下方未检测到平台时\r\n                this.controls.getObject().position.y = nextY;\r\n                this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n            }\r\n        }\r\n        if (this.controls.getObject().position.y < -2000) {\r\n            this.controls.getObject().position.y = 2000;\r\n            this.controls.getObject().position.x = 0;\r\n            this.controls.getObject().position.z = 0;\r\n        }\r\n    }\r\n\r\n    initClickFunction(objects) {\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(event, objects, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                let obj = clickedObjects[0].object;\r\n                console.log(\"点击的对象：\" + obj.name);\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\nfunction setAimStyle(aimEl) {\r\n    aimEl.style.position = \"absolute\";\r\n    aimEl.style.left = \"50%\";\r\n    aimEl.style.top = \"50%\";\r\n    aimEl.style.transform = \"translate(-50%,-50%)\";\r\n    aimEl.style.zIndex = \"1\";\r\n    aimEl.style.fontSize = \"100%\";\r\n    aimEl.style.fontWeight = \"bold\";\r\n    aimEl.style.textAlign = \"center\";\r\n    aimEl.style.verticalAlign = \"middle\";\r\n    aimEl.style.lineHeight = \"10px\";\r\n    aimEl.style.fontFamily = \"\\\"Times New Roman\\\",serif\";\r\n    aimEl.style.backgroundColor = \"#E0E0E0\";\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(event, objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let aim = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    aim.x = 0;\r\n    aim.y = 0;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(aim, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}","import * as THREE from \"three\";\r\n\r\nfunction buildLine(x1, y1, z1, x2, y2, z2, color) {\r\n    x1 = x1 || 0;\r\n    y1 = y1 || 0;\r\n    z1 = z1 || 0;\r\n    x2 = x2 || 0;\r\n    y2 = y2 || 0;\r\n    z2 = z2 || 0;\r\n    color = color || 0xff0000;\r\n    let startPoint = new THREE.Vector3(x1, y1, z1);\r\n    let endPoint = new THREE.Vector3(x2, y2, z2);\r\n    let geometry = new THREE.Geometry();\r\n    geometry.vertices.push(startPoint);\r\n    geometry.vertices.push(endPoint);\r\n    let material = new THREE.MeshBasicMaterial({color: color});\r\n    return new THREE.LineSegments(geometry, material);\r\n}\r\n\r\nexport function buildXYZLine(scene) {\r\n    //坐标线\r\n    let lines = [];\r\n    lines.push(buildLine(0, 0, 0, 10, 0, 0, 0xff0000));//中心坐标线，X轴，红\r\n    lines.push(buildLine(0, 0, 0, 0, 10, 0, 0x00ff00));//中心坐标线，Y轴，绿\r\n    lines.push(buildLine(0, 0, 0, 0, 0, 10, 0x0000ff));//中心坐标线，Z轴，蓝\r\n    if(scene){\r\n        scene.add(...lines)\r\n    }\r\n    return lines;\r\n}\r\n","import * as THREE from 'three';\r\nimport {WEBGL} from \"three/examples/jsm/WebGL.js\";\r\n// import TWEEN from \"@tweenjs/tween.js\";//动作库\r\nimport CubeFactory from \"./utils/objects/CubeFactory.js\";\r\nimport StatsWindow from \"./utils/stats/StatsWindow.js\";\r\nimport ShowOrbitControl from \"./utils/controls/ShowOrbitControl.js\";\r\nimport MCFirstPersonControl from \"./utils/controls/MCFirstPersonControl.js\";\r\n\r\nlet enableShadow = false;\r\n\r\nif (WEBGL.isWebGLAvailable() === false) {\r\n    document.body.appendChild(WEBGL.getWebGLErrorMessage());\r\n}\r\n\r\nlet canvasEL = document.getElementById(\"canvas-frame\");\r\nlet width = canvasEL.offsetWidth;\r\nlet height = canvasEL.offsetHeight;\r\n\r\n// 舞台*\r\nlet sceneOption = {\r\n    backgroundColor: 0x87CEEB\r\n};\r\nlet scene = (function initScene() {\r\n    let scene = new THREE.Scene();\r\n    scene.name = 'SCENE';\r\n    scene.fog = new THREE.FogExp2(sceneOption.backgroundColor, 0.001);//雾效果\r\n    //增加天空盒\r\n    (function skyBox(backgroundType) {\r\n        backgroundType = backgroundType || 1;\r\n        let textureCube = new THREE.CubeTextureLoader().load([\r\n            './assets/img/1.png',\r\n            './assets/img/2.png',\r\n            './assets/img/3.png',\r\n            './assets/img/4.png',\r\n            './assets/img/5.png',\r\n            './assets/img/6.png'\r\n        ]);\r\n        if (backgroundType === 1) {//使用场景背景添加\r\n            scene.background = new THREE.Color(sceneOption.backgroundColor);\r\n        } else if (backgroundType === 2) {\r\n            scene.background = textureCube\r\n        } else {//使用盒子添加\r\n            //着色器\r\n            let cubeShader = THREE.ShaderLib[\"cube\"];\r\n            cubeShader.uniforms[\"tCube\"].value = textureCube;\r\n            let material = new THREE.ShaderMaterial({\r\n                fragmentShader: cubeShader.fragmentShader,  //定义自己的片元着色器\r\n                vertexShader: cubeShader.vertexShader,  //定义自己的顶点着色器\r\n                uniforms: cubeShader.uniforms,  //给着色器传入uniform变量的值\r\n                depthWrite: false,  //决定这个材质是否影响WebGL的深度缓存\r\n                side: THREE.BackSide,  //侧面：反面\r\n            });\r\n            //创建方盒子\r\n            let cubeWithPic = new THREE.Mesh(new THREE.CubeGeometry(1000000, 1000000, 1000000), material);\r\n            scene.add(cubeWithPic);\r\n        }\r\n    })(1);\r\n    return scene;\r\n})();\r\n\r\nlet lightCurrentIntensity = 1;\r\nlet lightValueChangeDirection = true;\r\nlet lightHighIntensity = 1;\r\nlet lightLowIntensity = 0.4;\r\n\r\nfunction getAmbientLightIntensity() {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity);\r\n}\r\n\r\n// 光源*\r\nlet lightAmbient;\r\n(function initDirectionalLight() {\r\n    lightAmbient = new THREE.AmbientLight(0xffffff, getAmbientLightIntensity());//平行光。制造明暗面，并不使方块变色严重\r\n    scene.add(lightAmbient);\r\n})();\r\n\r\n// 相机*\r\nlet camera;\r\n(function initCamera() {\r\n    camera = new THREE.PerspectiveCamera(45, width / height, 0.01, 100000);//最远1e10\r\n    camera.name = \"CAMERA\";\r\n    camera.position.x = 0;\r\n    camera.position.y = 10;\r\n    camera.position.z = 0;\r\n})();\r\n\r\n// 渲染器*\r\nlet renderer;\r\n(function initRenderer() {\r\n    renderer = new THREE.WebGLRenderer({\r\n        antialias: true//是否开启反锯齿\r\n    });\r\n    renderer.name = 'RENDERER';\r\n    renderer.shadowMap.enabled = enableShadow;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;//更柔和的影子，需要的性能更高\r\n    renderer.setSize(width, height);\r\n    document.getElementById('canvas-frame').appendChild(renderer.domElement);\r\n    renderer.setClearColor(0xFFFFFF, 1.0);//背景颜色\r\n})();\r\n\r\n// 相机控制器\r\nlet controls;\r\nlet controlsType = \"MCFirstPersonControl\";\r\nlet objects = [];\r\n(function initControls() {\r\n    switch (controlsType) {\r\n        case \"ShowOrbitControl\":\r\n            let showOrbitControl = new ShowOrbitControl(camera, renderer.domElement);\r\n            showOrbitControl.initClickFunction(scene.children);\r\n            controls = showOrbitControl.controls;\r\n            break;\r\n        case \"MCFirstPersonControl\":\r\n            let mcFirstPersonControl = new MCFirstPersonControl(camera, renderer.domElement, objects);\r\n            mcFirstPersonControl.initClickFunction(scene.children);\r\n            controls = mcFirstPersonControl;\r\n            break;\r\n    }\r\n})();\r\n\r\n\r\n//-----------以下为物体添加代码---------------------------------------------------------------\r\nimport * as AddXYZLing from './utils/objects/AddXYZLine';\r\n\r\nAddXYZLing.buildXYZLine(scene);\r\n\r\nfunction changeLight() {\r\n    lightAmbient.intensity = getAmbientLightIntensity();\r\n    // lightDirectional.intensity = getDirectionalLightIntensity();\r\n    if (lightValueChangeDirection) {\r\n        if (lightCurrentIntensity >= lightLowIntensity - (lightHighIntensity - lightLowIntensity)) {\r\n            lightCurrentIntensity -= 0.002;\r\n        } else {\r\n            lightValueChangeDirection = false;\r\n        }\r\n    } else {\r\n        if (lightCurrentIntensity <= lightHighIntensity + (lightHighIntensity - lightLowIntensity)) {\r\n            lightCurrentIntensity += 0.002;\r\n        } else {\r\n            if (lightCurrentIntensity > 1.5) {\r\n                lightValueChangeDirection = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n(function addGrassCubes() {\r\n    let cubeFactory = new CubeFactory(\"GrassDirt\");\r\n    {\r\n        let mountain = [];\r\n        //底板\r\n        for (let x = -10; x < 10; x++) {\r\n            for (let z = -10; z < 10; z++) {\r\n                mountain.push([x, -1, z]);\r\n            }\r\n        }\r\n        //阶梯\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                for (let y = 0; y < 5; y++) {\r\n                    if (y >= x) {\r\n                        mountain.push([x - 7, y - x, z - 5])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //土堆\r\n        let mountainHeight = 5;\r\n        for (let y = 0; y < mountainHeight; y++) {\r\n            for (let x = y; x < 2 * mountainHeight - y; x++) {\r\n                for (let z = y; z < 2 * mountainHeight - y; z++) {\r\n                    mountain.push([x - 10, y, z + 4])\r\n                }\r\n            }\r\n        }\r\n        //碰撞检测用\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                if (x !== 2 || z !== 2) {\r\n                    mountain.push([x, 0, z]);\r\n                }\r\n            }\r\n        }\r\n        mountain.push([0, 1, 0]);\r\n        mountain.push([3, 3, 0]);\r\n        mountain.push([2, 3, 0]);\r\n        mountain.push([3, 3, 1]);\r\n        mountain.push([2, 3, 1]);\r\n        mountain.push([3, 3, -1]);\r\n        mountain.push([2, 3, -1]);\r\n        mountain.push([3, 3, -2]);\r\n        mountain.push([2, 3, -2]);\r\n        mountain.push([3, 2, -3]);\r\n        mountain.push([2, 2, -3]);\r\n        mountain.push([5, 2, 1]);\r\n        mountain.push([4, 2, 1]);\r\n        mountain.push([0, 1, 0]);\r\n\r\n        for (let cubePosition of mountain) {\r\n            let cube = cubeFactory.create(cubePosition[0], cubePosition[1], cubePosition[2]);\r\n            scene.add(cube);\r\n            objects.push(cube);\r\n        }\r\n    }\r\n})();\r\n\r\nlet prevTime = performance.now();\r\n(function animate() {\r\n    requestAnimationFrame(animate);\r\n    let time = performance.now();\r\n    let delta = (time - prevTime) / 1000;\r\n    prevTime = time;\r\n    // TWEEN.update(delta);\r\n    controls.update(delta);\r\n    renderer.render(scene, camera);\r\n    new StatsWindow(\"canvas-frame\").stats.update(delta);\r\n    changeLight();\r\n})();\r\n\r\n//使渲染器与相机随窗口大小改变适应。自适应窗口大小\r\nwindow.onresize = function () {\r\n    width = canvasEL.offsetWidth;\r\n    height = canvasEL.offsetHeight;\r\n    //更新相机视角比例\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(width, height);\r\n};"],"sourceRoot":""}