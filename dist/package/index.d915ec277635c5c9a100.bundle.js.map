{"version":3,"sources":["webpack:///./src/utils/setting/GlobalSetting.js","webpack:///./src/utils/objects/cube/CubeFactory.js","webpack:///./src/utils/stats/StatsWindow.js","webpack:///./src/utils/basic/Light.js","webpack:///./src/utils/controls/ShowOrbitControl.js","webpack:///./src/utils/objects/cube/DefaultCube.js","webpack:///./src/utils/controls/MCFirstPersonControl.js","webpack:///./src/index.js","webpack:///./src/utils/basic/Scene.js","webpack:///./src/utils/basic/Camera.js","webpack:///./src/utils/basic/Renderer.js","webpack:///./src/utils/controls/ControlBuilder.js","webpack:///./src/utils/sound/Bgm.js"],"names":["enableShadow","defaultCube","_instanceObj","key","this","cubeOptions","_materials","_materialsMap","_geometry","undefined","_cubeSize","initMaterials","initGeometry","length","textureLoader","textureList","imageUrl","images","texture","load","generateMipmaps","minFilter","magFilter","push","materialList","textureIndex","map","fog","materialParameters","materialParametersForOneList","imageSet","x","y","z","rotateX","rotateY","rotateZ","cube","receiveShadow","castShadow","GlobalSetting","position","Math","PI","name","canvasElId","_instance","stats","domElement","style","left","top","document","getElementById","appendChild","getAmbientLightIntensity","lightCurrentIntensity","lightHighIntensity","lightLowIntensity","min","max","getDirectionalLightIntensity","camera","controls","OrbitControls","dampingFactor","enablePan","objects","window","addEventListener","event","clickedObjects","raycaster","mouse","clientX","innerWidth","clientY","innerHeight","setFromCamera","intersectObjects","getClickedObject","obj","object","console","log","grass","color","cobblestone","cobblestone_mossy","stone","stone_slab","planks_birch","log_acacia","leaves_acacia","transparent","leaves_acacia_opaque","log_birch","leaves_birch","leaves_birch_opaque","log_jungle","leaves_jungle","leaves_jungle_opaque","log_oak","leaves_oak","leaves_oak_opaque","log_spruce","leaves_spruce","leaves_spruce_opaque","scene","currentCubeTypeIndex","checkRay","X0","X1","Z0","Z1","Y0","Y1","moveForward","moveBackward","moveLeft","moveRight","preRuning","isRunning","canJump","velocity","direction","worldOption","g","personOption","height","sightHeight","jumpHeight","speedWalk","speedRun","accelerateRateStart","accelerateRateStop","thickness","init","PointerLockControls","blocker","createElement","zIndex","width","id","body","append","lock","display","aimX","setAimStyle","aimY","keyCode","performance","now","sqrt","i","initMouseFunction","delta","isLocked","Number","normalize","velocityXZMax","velocityZTmp","abs","velocityXTmp","positionBeforeX","getObject","positionBeforeZ","Z0Flat","ray","origin","copy","rayMoveX","intersections","Z0NearFlatTmp","point","Z1Flat","Z1NearFlatTmp","nextZ","X0Flat","X0NearFlatTmp","X1Flat","X1NearFlatTmp","nextX","bottomFlatY","rayMove","bottomFlatYTmp","topFlatY","topFlatYTmp","nextY","aim","children","distance","face","normal","rotate","rotation","newPositionVector","applyAxisAngle","newPosition","button","cubeFactory","DefaultCube","buildCube","Object","keys","add","getObjectByName","index","findIndex","e","splice","remove","getObjectById","wheelDelta","changeCurrentCubeTypeIndex","detail","onmousewheel","isNext","aimEl","transform","fontSize","fontWeight","textAlign","verticalAlign","lineHeight","fontFamily","backgroundColor","isWebGLAvailable","getWebGLErrorMessage","lightDirectional","canvasEL","backgroundType","textureCube","background","cubeShader","uniforms","value","material","fragmentShader","vertexShader","depthWrite","side","cubeWithPic","initScene","lightAmbient","light","setHex","intensity","initAmbientLight","shadow","radius","initDirectionalLight","fov","near","far","initCamera","aspect","offsetWidth","offsetHeight","updateProjectionMatrix","renderer","antialias","shadowMap","enabled","setClearColor","initRenderer","setSize","setPixelRatio","devicePixelRatio","controlsType","showOrbitControl","initClickFunction","initControls","lightOption","current","low","high","becomeHigher","testBlock","mountainHeight","zValue","cubeType","values","cubeInfo","prevTime","animate","requestAnimationFrame","time","update","render","changeLight","onresize","onload","audioBGM","currentIndex","arr","Audio","preload","autoplay","hidden","right","loop","src","play","playHandler","removeEventListener","initBGMPlayer"],"mappings":"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","file":"package/index.d915ec277635c5c9a100.bundle.js","sourcesContent":["export default {\r\n    enableShadow:false\r\n}","import * as THREE from 'three';\r\nimport GlobalSetting from \"../../setting/GlobalSetting\";\r\n\r\nexport default class CubeFactory {\r\n    constructor(defaultCube) {\r\n        if (CubeFactory._instanceObj && CubeFactory._instanceObj[defaultCube.key]) {\r\n            return CubeFactory._instanceObj[defaultCube.key];\r\n        }\r\n        this.cubeOptions = defaultCube;\r\n        this._materials = [];\r\n        this._materialsMap = [];\r\n        this._geometry = undefined;\r\n        this._cubeSize = 1;//方块边长，默认1\r\n        this.initMaterials();\r\n        this.initGeometry();\r\n        CubeFactory._instanceObj = {\r\n            [defaultCube.key]: this\r\n        }\r\n    }\r\n\r\n    //初始化形状\r\n    initGeometry() {\r\n        if (this._geometry) {\r\n            return;\r\n        }\r\n        this._geometry = new THREE.CubeGeometry(this._cubeSize, this._cubeSize, this._cubeSize)\r\n    }\r\n\r\n    //初始化材质\r\n    initMaterials() {\r\n        if (!this.cubeOptions.key) {\r\n            throw '\"key\" in cubeType is undefined'\r\n        }\r\n        if (this._materialsMap) {\r\n            this._materials = this._materialsMap[this.cubeOptions.key];\r\n        }\r\n        if (this._materials && this._materials.length !== 0) {\r\n            return;\r\n        }\r\n        this._materials = [];\r\n        let textureLoader = new THREE.TextureLoader();\r\n        let textureList = [];\r\n        for (let imageUrl of this.cubeOptions.images) {\r\n            let texture = textureLoader.load(imageUrl);\r\n            texture.generateMipmaps = true;//生成纹理，用于相关滤镜，根据远近自动调整贴图质量\r\n            texture.minFilter = THREE.NearestMipMapNearestFilter;//minFilter属性：指定纹理如何缩小。默认值：THREE.LinearMipMapLinearFilter。\r\n            texture.magFilter = THREE.NearestFilter;//magFilter属性：指定纹理如何放大。THREE.NearestFilter 贴图像素化\r\n            textureList.push(texture);\r\n        }\r\n        let materialList = [];\r\n        for (let textureIndex in textureList) {\r\n            let texture = textureList[textureIndex];\r\n            materialList.push(\r\n                new THREE.MeshLambertMaterial({\r\n                    // color:0x4F9C1A,\r\n                    // side: THREE.DoubleSide,\r\n                    map: texture,\r\n                    // vertexColors: THREE.VertexColors,\r\n                    fog: true,//当前材质是否受到全局雾化效果器影响\r\n                    ...(this.cubeOptions.materialParameters ? this.cubeOptions.materialParameters : {}),\r\n                    ...(this.cubeOptions.materialParametersForOneList && this.cubeOptions.materialParametersForOneList[textureIndex] ? this.cubeOptions.materialParametersForOneList[textureIndex] : {}),\r\n                })\r\n            );\r\n        }\r\n        for (let key of this.cubeOptions.imageSet) {\r\n            this._materials.push(materialList[key]);\r\n        }\r\n        this._materialsMap[this.cubeOptions.key] = this._materials;\r\n    };\r\n\r\n\r\n    //构造方块\r\n    buildCube(x, y, z, defaultCube, rotateX, rotateY, rotateZ) {\r\n        if (defaultCube) {\r\n            this.cubeOptions = defaultCube;\r\n            this.initMaterials();\r\n        }\r\n        x = x || 0;\r\n        y = y || 0;\r\n        z = z || 0;\r\n        let cube = new THREE.Mesh(\r\n            this._geometry,\r\n            this._materials\r\n            // new THREE.MeshLambertMaterial({color: 0x00cc00})\r\n        );\r\n        cube.receiveShadow = cube.castShadow = GlobalSetting.enableShadow;\r\n        cube.position.x = x + this._cubeSize / 2;\r\n        cube.position.y = y + this._cubeSize / 2;\r\n        cube.position.z = z + this._cubeSize / 2;\r\n        if(rotateX) {cube.rotateX(rotateX*Math.PI/180);}\r\n        if(rotateY) {cube.rotateY(rotateY*Math.PI/180);}\r\n        if(rotateZ) {cube.rotateZ(rotateZ*Math.PI/180);}\r\n        cube.name = this.cubeOptions.key + \"(\" + x + \",\" + y + \",\" + z + \")\";\r\n        return cube;\r\n    }\r\n}","// 查看信息小控件\r\nimport Stats from \"stats-js\";\r\nexport default class StatsWindow {\r\n    constructor(canvasElId) {\r\n        if (StatsWindow._instance) {\r\n            return StatsWindow._instance;\r\n        }\r\n        let stats;\r\n        stats = new Stats();\r\n        stats.domElement.style.position = 'absolute';\r\n        stats.domElement.style.left = '0px';\r\n        stats.domElement.style.top = '0px';\r\n        document.getElementById(canvasElId).appendChild(stats.domElement);\r\n        StatsWindow._instance = this;\r\n        this.stats=stats;\r\n        return this;\r\n    }\r\n}\r\n\r\n","import * as THREE from \"three\";\r\nimport GlobalSetting from \"../setting/GlobalSetting\";\r\n\r\nexport const lightHighIntensity = 1;\r\nexport const lightLowIntensity = 0.4;\r\nexport const lightCurrentIntensity = 1;\r\nexport const lightValueBecomeHigher = true;\r\n\r\nexport function initAmbientLight() {\r\n    let light = new THREE.AmbientLight();//环境光\r\n    light.castShadow = false;\r\n    light.color = new THREE.Color().setHex(0xffffff);\r\n    light.intensity = getAmbientLightIntensity();\r\n    return light;\r\n}\r\n\r\nexport function getAmbientLightIntensity(lightCurrentIntensity, lightHighIntensity, lightLowIntensity) {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity);\r\n}\r\n\r\nexport function initDirectionalLight() {\r\n    let light = new THREE.DirectionalLight();//环境光\r\n    light.castShadow = GlobalSetting.enableShadow;\r\n    light.color = new THREE.Color().setHex(0xffffff);\r\n    light.intensity = getDirectionalLightIntensity();\r\n    light.shadow.radius = 512;\r\n    light.position.x = 10;\r\n    light.position.y = -10;\r\n    light.position.z = 10;\r\n    return light;\r\n}\r\n\r\nexport function getDirectionalLightIntensity(lightCurrentIntensity, lightHighIntensity, lightLowIntensity) {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity) / 4;\r\n}\r\n","import {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\nimport * as THREE from 'three';\r\nexport default class ShowOrbitControl {\r\n\r\n    constructor(camera, domElement) {\r\n        // ShowOrbitControl._instance;\r\n        // this.controls;\r\n        this.camera = camera;\r\n        if (ShowOrbitControl._instance) {\r\n            return ShowOrbitControl._instance;\r\n        }\r\n        this.controls = new OrbitControls(camera, domElement);\r\n        //动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n        this.controls.dampingFactor = 1;\r\n        //是否允许平移\r\n        this.controls.enablePan = false;\r\n        ShowOrbitControl._instance = this;\r\n        return ShowOrbitControl._instance;\r\n    }\r\n\r\n    initClickFunction(objects, camera) {\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(event, objects, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                let obj = clickedObjects[0].object;\r\n                console.log(\"点击的对象：\" + obj.name);\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(event, objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let mouse = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(mouse, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}\r\n\r\n\r\n","//预设方块信息\r\nimport * as THREE from 'three'\r\nexport default {\r\n    grass: {\r\n        key: 'grass',\r\n        images: [\r\n            './assets/img/blocks/grass_side.png',\r\n            './assets/img/blocks/grass_top.png',\r\n            './assets/img/blocks/dirt.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 2, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList: [\r\n            {},\r\n            {color: 0xB1FB6C},\r\n        ]\r\n    },\r\n    // Cloud: {\r\n    //     key: 'Cloud',\r\n    //     images: [\r\n    //         './assets/img/blocks/grass_side.png',\r\n    //         './assets/img/blocks/grass_top_green.png',\r\n    //         './assets/img/blocks/dirt.png',\r\n    //     ],\r\n    //     imageSet: [0, 0, 1, 2, 0, 0],\r\n    //     materialParameters: {\r\n    //         transparent: true,//透明\r\n    //         opacity: 0.2,//透明度\r\n    //     }\r\n    // },\r\n    cobblestone: {\r\n        key: 'Cobblestone',\r\n        images: [\r\n            './assets/img/blocks/cobblestone.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    cobblestone_mossy: {\r\n        key: 'cobblestone_mossy',\r\n        images: [\r\n            './assets/img/blocks/cobblestone_mossy.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    stone: {\r\n        key: 'Stone',\r\n        images: [\r\n            './assets/img/blocks/stone.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    stone_slab: {\r\n        key: 'stone_slab',\r\n        images: [\r\n            './assets/img/blocks/stone_slab_side.png',\r\n            './assets/img/blocks/stone_slab_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    planks_birch: {\r\n        key: 'planks_birch',\r\n        images: [\r\n            './assets/img/blocks/planks_birch.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    // reeds: {\r\n    //     key: 'reeds',\r\n    //     images: [\r\n    //         './assets/img/blocks/reeds.png',\r\n    //     ],\r\n    //     imageSet: [0, 0, 0, 0, 0, 0],\r\n    //     materialParameters: {\r\n    //         transparent: true,\r\n    //         side: THREE.DoubleSide,\r\n    //     },\r\n    //     materialParametersForOneList:[]\r\n    // },\r\n\r\n    log_acacia: {\r\n        key: 'log_acacia',\r\n        images: [\r\n            './assets/img/blocks/log_acacia.png',\r\n            './assets/img/blocks/log_acacia_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_acacia: {\r\n        key: 'leaves_acacia',\r\n        images: [\r\n            './assets/img/blocks/leaves_acacia.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_acacia_opaque: {\r\n        key: 'leaves_acacia_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_acacia_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n\r\n    log_birch: {\r\n        key: 'log_birch',\r\n        images: [\r\n            './assets/img/blocks/log_birch.png',\r\n            './assets/img/blocks/log_birch_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_birch: {\r\n        key: 'leaves_birch',\r\n        images: [\r\n            './assets/img/blocks/leaves_birch.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_birch_opaque: {\r\n        key: 'leaves_birch_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_birch_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n\r\n    log_jungle: {\r\n        key: 'log_jungle',\r\n        images: [\r\n            './assets/img/blocks/log_jungle.png',\r\n            './assets/img/blocks/log_jungle_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_jungle: {\r\n        key: 'leaves_jungle',\r\n        images: [\r\n            './assets/img/blocks/leaves_jungle.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_jungle_opaque: {\r\n        key: 'leaves_jungle_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_jungle_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n\r\n    log_oak: {\r\n        key: 'log_oak',\r\n        images: [\r\n            './assets/img/blocks/log_oak.png',\r\n            './assets/img/blocks/log_oak_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_oak: {\r\n        key: 'leaves_oak',\r\n        images: [\r\n            './assets/img/blocks/leaves_oak.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_oak_opaque: {\r\n        key: 'leaves_oak_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_oak_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n\r\n    log_spruce: {\r\n        key: 'log_spruce',\r\n        images: [\r\n            './assets/img/blocks/log_spruce.png',\r\n            './assets/img/blocks/log_spruce_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {},\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_spruce: {\r\n        key: 'leaves_spruce',\r\n        images: [\r\n            './assets/img/blocks/leaves_spruce.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n            transparent: true,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n    leaves_spruce_opaque: {\r\n        key: 'leaves_spruce_opaque',\r\n        images: [\r\n            './assets/img/blocks/leaves_spruce_opaque.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {\r\n            color: 0x89B95C,\r\n        },\r\n        materialParametersForOneList:[]\r\n    },\r\n}","import {PointerLockControls} from 'three/examples/jsm/controls/PointerLockControls'\r\nimport CubeFactory from \"../objects/cube/CubeFactory\";\r\nimport * as THREE from 'three';\r\nimport DefaultCube from '../objects/cube/DefaultCube'\r\n\r\nexport default class MCFirstPersonControl {\r\n\r\n    constructor(camera, domElement, objects, scene) {\r\n        if (MCFirstPersonControl._instance) {\r\n            return MCFirstPersonControl._instance;\r\n        }\r\n        // MCFirstPersonControl._instance;\r\n        // this.controls;\r\n        // this.removeBlockTimer;//移除方块计时\r\n        this.camera = camera;\r\n        this.objects = objects;\r\n        this.scene = scene;\r\n        this.currentCubeTypeIndex = 0;\r\n\r\n        this.checkRay = {//0为负，1为正\r\n            X0: [],\r\n            X1: [],\r\n            Z0: [],\r\n            Z1: [],\r\n\r\n            Y0: [],\r\n            Y1: [],\r\n        };\r\n        this.moveForward = false;\r\n        this.moveBackward = false;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.preRuning = undefined;\r\n        this.isRunning = false;\r\n        this.canJump = false;\r\n        // this.prevTime = performance.now();\r\n        this.velocity = new THREE.Vector3();\r\n        this.direction = new THREE.Vector3();\r\n        this.worldOption = {\r\n            g: 9.0\r\n        };\r\n        this.personOption = {\r\n            height: 1.8,//人物总高度。现有配置不能让人物高于2\r\n            sightHeight: 1.5,//眼部高度。现有配置不能让人物高于2\r\n            jumpHeight: 1.4,    //最大跳跃高度，实际为到此高度\r\n            speedWalk: 5.7,     //最大行走速度\r\n            speedRun: 10,       //最大奔跑速度，连按w两次\r\n            accelerateRateStart: 0.3,//加速时加速比率。正数向前；负数反向；0不会加速；绝对值大于等于1可立即到最大速度\r\n            accelerateRateStop: 0.8,//停止时减速比率。范围[0-1]。0时立即停止，1时不会减速\r\n            thickness: 0.6,//人物的边长\r\n        };\r\n        this.init(camera, domElement);\r\n        MCFirstPersonControl._instance = this;\r\n        return MCFirstPersonControl._instance;\r\n    }\r\n\r\n    init(camera, domElement) {\r\n        this.controls = new PointerLockControls(camera, domElement);\r\n        //增加遮罩层\r\n        {\r\n            let blocker = document.createElement(\"div\");\r\n            blocker.style.position = \"absolute\";\r\n            blocker.style.zIndex = \"100\";\r\n            blocker.style.width = \"100%\";\r\n            blocker.style.height = \"100%\";\r\n            blocker.style.top = \"0\";\r\n            blocker.style.left = \"0\";\r\n            blocker.id = \"blocker\";\r\n            // blocker.style.backgroundColor = \"rgba(0, 0, 0, 0.4)\";\r\n            document.body.append(blocker);\r\n            blocker.addEventListener('click', () => {\r\n                this.controls.lock();\r\n            }, false);\r\n            this.controls.addEventListener('lock', function () {\r\n                blocker.style.display = 'none';\r\n            });\r\n            this.controls.addEventListener('unlock', function () {\r\n                blocker.style.display = 'block';\r\n            });\r\n        }\r\n        //添加准星\r\n        {\r\n            let aimX = document.createElement(\"div\");\r\n            aimX.style.height = \"2px\";\r\n            aimX.style.width = \"20px\";\r\n            setAimStyle(aimX);\r\n            document.body.append(aimX);\r\n            let aimY = document.createElement(\"div\");\r\n            aimY.style.height = \"20px\";\r\n            aimY.style.width = \"2px\";\r\n            setAimStyle(aimY);\r\n            document.body.append(aimY);\r\n        }\r\n        //加按键事件\r\n        let onKeyDown = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    if (this.moveForward) {\r\n                        break;\r\n                    }\r\n                    if (!this.preRuning) {\r\n                        this.preRuning = performance.now();\r\n                    } else {\r\n                        this.isRunning = performance.now() - this.preRuning <= 200;\r\n                        this.preRuning = performance.now();\r\n                    }\r\n                    this.moveForward = true;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    if (this.moveLeft) {\r\n                        break;\r\n                    }\r\n                    this.moveLeft = true;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    if (this.moveBackward) {\r\n                        break;\r\n                    }\r\n                    this.moveBackward = true;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    if (this.moveRight) {\r\n                        break;\r\n                    }\r\n                    this.moveRight = true;\r\n                    break;\r\n\r\n                case 32: // space\r\n                    //7.74是60开平方\r\n                    if (this.canJump) this.velocity.y += Math.sqrt(2 * this.worldOption.g * 7.74 * this.personOption.jumpHeight);\r\n                    this.canJump = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        let onKeyUp = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    this.isRunning = false;\r\n                    this.moveForward = false;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    this.moveLeft = false;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    this.moveBackward = false;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    this.moveRight = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        document.addEventListener('keydown', onKeyDown, false);\r\n        document.addEventListener('keyup', onKeyUp, false);\r\n        //加水平方向碰撞检测  。0,1脚底；2,3中间；4,5头顶\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.X0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(-1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.X1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.Z0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, -1), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.Z1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, 1), 0, 0));\r\n        }\r\n        //加垂直方向碰撞检测\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 1, 0), 0, 0));\r\n        }\r\n        //初始化点击功能\r\n        this.initMouseFunction();\r\n    }\r\n\r\n    update(delta) {\r\n        console.log(this.objects.length)\r\n        delta = delta || 0.016;\r\n        if (!this.controls.isLocked) {\r\n            this.moveForward = false;\r\n            this.moveBackward = false;\r\n            this.moveLeft = false;\r\n            this.moveRight = false;\r\n        }\r\n        //水平方向移动\r\n        {\r\n            this.direction.z = Number(this.moveForward) - Number(this.moveBackward);\r\n            this.direction.x = Number(this.moveRight) - Number(this.moveLeft);\r\n            this.direction.normalize(); // this ensures consistent movements in all directions\r\n            let velocityXZMax = this.isRunning ? this.personOption.speedRun : this.personOption.speedWalk;\r\n\r\n            if (this.moveForward || this.moveBackward) {\r\n                let velocityZTmp = this.velocity.z + this.direction.z * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityZTmp) < velocityXZMax) {\r\n                    this.velocity.z = velocityZTmp;\r\n                } else {\r\n                    this.velocity.z = this.direction.z * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.z = Math.abs(this.velocity.z) > 1 ? this.velocity.z * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            if (this.moveLeft || this.moveRight) {\r\n                let velocityXTmp = this.velocity.x + this.direction.x * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityXTmp) < velocityXZMax) {\r\n                    this.velocity.x = velocityXTmp;\r\n                } else {\r\n                    this.velocity.x = this.direction.x * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.x = Math.abs(this.velocity.x) > 1 ? this.velocity.x * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            let positionBeforeX = this.controls.getObject().position.x;\r\n            let positionBeforeZ = this.controls.getObject().position.z;\r\n\r\n            this.controls.moveForward(this.velocity.z * delta);\r\n            this.controls.moveRight(this.velocity.x * delta);\r\n\r\n            {//z轴碰撞检测\r\n                let Z0Flat = undefined;//z负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.Z0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z0[i].ray.origin.x = positionBeforeX;//修正为移动前的x轴位置，防止使用位移后的位置检测墙壁\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.Z0[0].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[1].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z0[2].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z0[3].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z0[4].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[5].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.Z0[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let Z0NearFlatTmp = intersections[0].point.z;\r\n                            Z0Flat = Math.max(Z0Flat === undefined ? Z0NearFlatTmp : Z0Flat, Z0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let Z1Flat = undefined;//z正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.Z1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z1[i].ray.origin.x = positionBeforeX;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.Z1[0].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[1].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z1[2].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z1[3].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z1[4].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[5].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.Z1[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let Z1NearFlatTmp = intersections[0].point.z;\r\n                            Z1Flat = Math.min(Z1Flat === undefined ? Z1NearFlatTmp : Z1Flat, Z1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextZ = this.controls.getObject().position.z;\r\n                nextZ = Math.max(Z0Flat === undefined ? nextZ : (Z0Flat + this.personOption.thickness / 2 + 0.001), nextZ);\r\n                nextZ = Math.min(Z1Flat === undefined ? nextZ : (Z1Flat - this.personOption.thickness / 2 - 0.001), nextZ);\r\n                this.controls.getObject().position.z = nextZ\r\n            }\r\n\r\n            {//x轴碰撞检测\r\n                let X0Flat = undefined;//x负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.X0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X0[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.X0[0].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X0[1].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X0[2].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X0[3].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X0[4].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    this.checkRay.X0[5].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.X0[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let X0NearFlatTmp = intersections[0].point.x;\r\n                            X0Flat = Math.max(X0Flat === undefined ? X0NearFlatTmp : X0Flat, X0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let X1Flat = undefined;//x正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.X1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X1[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.X1[0].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[1].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X1[2].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X1[3].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X1[4].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[5].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.X1[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let X1NearFlatTmp = intersections[0].point.x;\r\n                            X1Flat = Math.min(X1Flat === undefined ? X1NearFlatTmp : X1Flat, X1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextX = this.controls.getObject().position.x;\r\n                nextX = Math.max(X0Flat === undefined ? nextX : (X0Flat + this.personOption.thickness / 2 + 0.001), nextX);\r\n                nextX = Math.min(X1Flat === undefined ? nextX : (X1Flat - this.personOption.thickness / 2 - 0.001), nextX);\r\n                this.controls.getObject().position.x = nextX\r\n                // console.log(Z0Flat,Z1Flat,X0Flat,X1Flat)\r\n            }\r\n            // console.log(this.controls.getObject().position.x,this.controls.getObject().position.y,this.controls.getObject().position.z)\r\n        }\r\n        //垂直方向移动+碰撞检测\r\n        {\r\n            let bottomFlatY = undefined;\r\n            //坠落四角检测\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2;\r\n                this.checkRay.Y0[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y0[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y0[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let bottomFlatYTmp = intersections[0].point.y;\r\n                        bottomFlatY = Math.max(bottomFlatY === undefined ? bottomFlatYTmp : bottomFlatY, bottomFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //头顶四角检测\r\n            let topFlatY = undefined;\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2 - 0.01;\r\n                this.checkRay.Y1[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y1[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y1[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let topFlatYTmp = intersections[0].point.y;\r\n                        topFlatY = Math.min(topFlatY === undefined ? topFlatYTmp : topFlatY, topFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //无碰撞时下次垂直位置(相机位置)\r\n            let nextY = this.controls.getObject().position.y + (this.velocity.y * delta);\r\n            if (topFlatY !== undefined) {\r\n                if (nextY > topFlatY - (this.personOption.height - this.personOption.sightHeight)) {\r\n                    nextY = topFlatY - (this.personOption.height - this.personOption.sightHeight)\r\n                    this.velocity.y = 0;\r\n                }\r\n            }\r\n            if (bottomFlatY !== undefined) {\r\n                //下方检测到平台时，脚部不能低于最低平台\r\n                nextY = Math.max(bottomFlatY + this.personOption.sightHeight, nextY);\r\n                if (nextY === bottomFlatY + this.personOption.sightHeight) {\r\n                    this.velocity.y = 0;\r\n                    this.canJump = true;\r\n                } else {\r\n                    this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n                }\r\n            } else {\r\n                //下方未检测到平台时\r\n                this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n            }\r\n            this.controls.getObject().position.y = nextY;\r\n        }\r\n        if (this.controls.getObject().position.y < -500) {\r\n            this.velocity.y = 0;\r\n            this.controls.getObject().position.y = 500;\r\n            this.controls.getObject().position.x = 0;\r\n            this.controls.getObject().position.z = 0;\r\n        }\r\n    }\r\n\r\n    initMouseFunction() {\r\n        //点击功能\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(this.scene.children, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                console.log(\"点击对象【\" + clickedObjects[0].object.name + \"】\", clickedObjects[0]);\r\n                if (\r\n                    clickedObjects[0]\r\n                    && clickedObjects[0].distance <= 10\r\n                    && clickedObjects[0].face && clickedObjects[0].face.normal\r\n                    && clickedObjects[0].object && clickedObjects[0].object.position\r\n                ) {\r\n                    let normal = clickedObjects[0].face.normal;\r\n                    let position = clickedObjects[0].object.position;\r\n                    let rotate = clickedObjects[0].object.rotation;\r\n                    // console.log(normal.x, normal.y, normal.z, position.x, position.y, position.z)\r\n\r\n                    let newPositionVector=new THREE.Vector3(normal.x,normal.y,normal.z);\r\n                    newPositionVector=newPositionVector.applyAxisAngle(new THREE.Vector3(1,0,0),rotate.x);\r\n                    newPositionVector=newPositionVector.applyAxisAngle(new THREE.Vector3(0,1,0),rotate.y);\r\n                    newPositionVector=newPositionVector.applyAxisAngle(new THREE.Vector3(0,0,1),rotate.z);\r\n                    let newPosition = {\r\n                        x: newPositionVector.x + position.x - 0.5,\r\n                        y: newPositionVector.y + position.y - 0.5,\r\n                        z: newPositionVector.z + position.z - 0.5,\r\n                    };\r\n                    if (event.button === 2) {//添加方块 右键\r\n                        //TODO 添加方块代码独立，方块不能添加到人物所站的地方\r\n                        let cubeFactory = new CubeFactory(DefaultCube.grass);\r\n                        console.log('放置??', this.currentCubeTypeIndex);\r\n                        let cube = cubeFactory.buildCube(newPosition.x, newPosition.y, newPosition.z, DefaultCube[Object.keys(DefaultCube)[this.currentCubeTypeIndex]]);\r\n                        this.scene.add(cube);\r\n                        this.objects.push(cube)\r\n                    } else if (event.button === 0) {//删除方块 左键\r\n                        //TODO 改为长按同一方块时才删除\r\n                        console.log(clickedObjects[0].object, this.scene.getObjectByName(clickedObjects[0].object.name));\r\n                        let index = this.objects.findIndex(e => e.id === clickedObjects[0].object.id);\r\n                        if (index >= 0) {\r\n                            this.objects.splice(index, 1);\r\n                        }\r\n                        this.scene.remove(this.scene.getObjectById(clickedObjects[0].object.id));\r\n                    }\r\n                }\r\n            }\r\n        }, false);\r\n        //滑轮功能\r\n        {\r\n            if (document.addEventListener) {//firefox\r\n                document.addEventListener('DOMMouseScroll', (e) => {\r\n                    e = e || window.event;\r\n                    if (e.wheelDelta) { //第一步：先判断浏览器IE，谷歌滑轮事件\r\n                        this.changeCurrentCubeTypeIndex(e.wheelDelta < 0);\r\n                    } else if (e.detail) { //Firefox滑轮事件\r\n                        this.changeCurrentCubeTypeIndex(e.detail < 0);\r\n                    }\r\n                }, false);\r\n            }\r\n            //滚动滑轮触发scrollFunc方法 //ie 谷歌\r\n            window.onmousewheel = (e) => {\r\n                console.log('滑轮', this.currentCubeTypeIndex)\r\n                e = e || window.event;\r\n                if (e.wheelDelta) { //第一步：先判断浏览器IE，谷歌滑轮事件\r\n                    this.changeCurrentCubeTypeIndex(e.wheelDelta < 0);\r\n                } else if (e.detail) { //Firefox滑轮事件\r\n                    this.changeCurrentCubeTypeIndex(e.detail < 0);\r\n                }\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    changeCurrentCubeTypeIndex(isNext) {\r\n        if (isNext) {\r\n            this.currentCubeTypeIndex++;\r\n            if (this.currentCubeTypeIndex === Object.keys(DefaultCube).length) {\r\n                this.currentCubeTypeIndex = 0;\r\n            }\r\n        } else {\r\n            if (this.currentCubeTypeIndex === 0) {\r\n                this.currentCubeTypeIndex = Object.keys(DefaultCube).length;\r\n            }\r\n            this.currentCubeTypeIndex--;\r\n        }\r\n    }\r\n}\r\n\r\nfunction setAimStyle(aimEl) {\r\n    aimEl.style.position = \"fixed\";\r\n    aimEl.style.left = \"50%\";\r\n    aimEl.style.top = \"50%\";\r\n    aimEl.style.transform = \"translate(-50%,-50%)\";\r\n    aimEl.style.zIndex = \"1\";\r\n    aimEl.style.fontSize = \"100%\";\r\n    aimEl.style.fontWeight = \"bold\";\r\n    aimEl.style.textAlign = \"center\";\r\n    aimEl.style.verticalAlign = \"middle\";\r\n    aimEl.style.lineHeight = \"10px\";\r\n    aimEl.style.fontFamily = \"\\\"Times New Roman\\\",serif\";\r\n    aimEl.style.backgroundColor = \"#E0E0E0\";\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let aim = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    aim.x = 0;\r\n    aim.y = 0;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(aim, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}\r\n\r\n\r\n\r\n\r\n","import * as THREE from 'three'\r\nimport {WEBGL} from \"three/examples/jsm/WebGL.js\";\r\n// import TWEEN from \"@tweenjs/tween.js\";//动作库\r\nimport CubeFactory from \"./utils/objects/cube/CubeFactory.js\";\r\nimport StatsWindow from \"./utils/stats/StatsWindow.js\";\r\nimport {initAmbientLight, getAmbientLightIntensity, lightHighIntensity, lightLowIntensity, lightCurrentIntensity, lightValueBecomeHigher, initDirectionalLight, getDirectionalLightIntensity, initDirectionalLight1} from \"./utils/basic/Light\";\r\nimport {initBGMPlayer} from \"./utils/sound/Bgm\";\r\nimport {initScene} from \"./utils/basic/Scene\";\r\nimport {initCamera} from \"./utils/basic/Camera\";\r\nimport {initRenderer} from \"./utils/basic/Renderer\";\r\nimport {initControls} from \"./utils/controls/ControlBuilder\";\r\nimport DefaultCube from \"./utils/objects/cube/DefaultCube\";\r\nimport GlobalSetting from \"./utils/setting/GlobalSetting\";\r\n\r\nif (!WEBGL.isWebGLAvailable()) {\r\n    document.body.appendChild(WEBGL.getWebGLErrorMessage());\r\n}\r\n//------------------------------------初始化基本对象-结束------------------------------------------------\r\nlet canvasEL = document.getElementById(\"canvas-frame\");\r\n// 舞台*\r\nlet scene = initScene();\r\n// 光源*\r\nlet lightAmbient = initAmbientLight();\r\nscene.add(lightAmbient);\r\nlet lightDirectional;\r\nif (GlobalSetting.enableShadow) {\r\n    lightDirectional = initDirectionalLight();\r\n    scene.add(lightDirectional);\r\n}\r\n\r\n// 相机*\r\nlet camera = initCamera();\r\ncamera.aspect = canvasEL.offsetWidth / canvasEL.offsetHeight;\r\ncamera.updateProjectionMatrix();\r\nscene.add(camera);\r\n// 渲染器*\r\nlet renderer = initRenderer();\r\nrenderer.setSize(canvasEL.offsetWidth, canvasEL.offsetHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\ndocument.getElementById('canvas-frame').appendChild(renderer.domElement);\r\n// 收集所欲加入到场景的方块对象\r\nlet objects = [];\r\n// 相机控制器\r\nlet controls = initControls(\"MCFirstPersonControl\", scene, camera, renderer, objects);\r\n//------------------------------------初始化基本对象-结束------------------------------------------------\r\n//-----------以下为物体添加代码---------------------------------------------------------------\r\n// import * as AddXYZLing from './utils/objects/AddXYZLine';\r\n\r\n// AddXYZLing.buildXYZLine(scene);\r\n\r\nlet lightOption = {\r\n    current: lightCurrentIntensity,\r\n    low: lightLowIntensity,\r\n    high: lightHighIntensity,\r\n    becomeHigher: lightValueBecomeHigher\r\n};\r\n\r\nfunction changeLight() {\r\n    lightAmbient.intensity = getAmbientLightIntensity(lightOption.current, lightOption.high, lightOption.low);\r\n    if (GlobalSetting.enableShadow) {\r\n        lightDirectional.intensity = getDirectionalLightIntensity(lightOption.current, lightOption.high, lightOption.low);\r\n    }\r\n    if (lightOption.becomeHigher) {\r\n        let tmp = lightOption.current >= lightOption.low - (lightOption.high - lightOption.low);\r\n        if (tmp) {\r\n            lightOption.current -= 0.002;\r\n        } else {\r\n            lightOption.becomeHigher = false;\r\n        }\r\n    } else {\r\n        if (lightOption.current <= lightOption.high + (lightOption.high - lightOption.low)) {\r\n            lightOption.current += 0.002;\r\n        } else {\r\n            if (lightOption.current > 1.5) {\r\n                lightOption.becomeHigher = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n(function addGrassCubes() {\r\n    let cubeFactory = new CubeFactory(DefaultCube.grass);\r\n    {\r\n        let testBlock = [];\r\n        let width = 10;\r\n        //底板\r\n        for (let x = -width; x < width; x++) {\r\n            for (let z = -width; z < width; z++) {\r\n                testBlock.push([x, -1, z]);\r\n            }\r\n        }\r\n        //阶梯\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                for (let y = 0; y < 5; y++) {\r\n                    if (y >= x) {\r\n                        testBlock.push([x - 7, y - x, z - 7])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //土堆\r\n        {\r\n            let mountainHeight = 4;\r\n            for (let y = 0; y < mountainHeight; y++) {\r\n                for (let x = y; x < 2 * mountainHeight - y; x++) {\r\n                    for (let z = y; z < 2 * mountainHeight - y; z++) {\r\n                        testBlock.push([x - 5, y, z + 1])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //碰撞检测用\r\n        {\r\n            for (let x = 0; x < 5; x++) {\r\n                for (let z = 0; z < 5; z++) {\r\n                    if (x !== 2 || z !== 2) {\r\n                        testBlock.push([x, 0, z - 5]);\r\n                    }\r\n                }\r\n            }\r\n            testBlock.push([0, 1, -5]);\r\n            testBlock.push([3, 3, -5]);\r\n            testBlock.push([2, 3, -5]);\r\n            testBlock.push([3, 3, -4]);\r\n            testBlock.push([2, 3, -4]);\r\n            testBlock.push([3, 3, -6]);\r\n            testBlock.push([2, 3, -6]);\r\n            testBlock.push([3, 3, -7]);\r\n            testBlock.push([2, 3, -7]);\r\n            testBlock.push([3, 2, -8]);\r\n            testBlock.push([2, 2, -8]);\r\n            testBlock.push([5, 2, -4]);\r\n            testBlock.push([4, 2, -4]);\r\n            testBlock.push([0, 1, -5]);\r\n        }\r\n\r\n        let zValue = -10;\r\n        for (let cubeType of Object.values(DefaultCube)) {\r\n            testBlock.push([8, 1, zValue++, cubeType, 90]);\r\n        }\r\n\r\n        testBlock.push([0, 10, 0, DefaultCube.grass]);\r\n        // //填满\r\n        // for (let x = -10; x < 10; x++) {\r\n        //     for (let z = -10; z < 10; z++) {\r\n        //         for (let y = 1; y <5; y++) {\r\n        //                 testBlock.push([x, y, z])\r\n        //         }\r\n        //     }\r\n        // }\r\n        // for (let num = 0; num < 100; num++) {\r\n        //     let x = Math.round(-Math.random() * 80) + 40;\r\n        //     let z = Math.round(-Math.random() * 80) + 40;\r\n        //     let y = Math.round(Math.random() * 80) + 2;\r\n        //     let xNumMax = Math.round(Math.random() * 8);\r\n        //     let zNumMax = Math.round(Math.random() * 8);\r\n        //     let yNumMax = Math.round(Math.random() * 8);\r\n        //     for (let yNum = 0; yNum < yNumMax; yNum++) {\r\n        //         for (let xNum = 0; xNum < xNumMax - yNum; xNum++) {\r\n        //             for (let zNum = 0; zNum < zNumMax - yNum; zNum++) {\r\n        //                     testBlock.push([x + xNum- yNum, y + yNum, z + zNum- yNum]);\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n        for (let cubeInfo of testBlock) {\r\n            let cube = cubeFactory.buildCube(...cubeInfo);\r\n            scene.add(cube);\r\n            objects.push(cube);\r\n        }\r\n    }\r\n})();\r\n\r\nlet prevTime = performance.now();\r\n\r\n(function animate() {\r\n    requestAnimationFrame(animate);\r\n    let time = performance.now();\r\n    let delta = (time - prevTime) / 1000;\r\n    prevTime = time;\r\n    // TWEEN.update(delta);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n    new StatsWindow(\"canvas-frame\").stats.update(delta);\r\n    changeLight();\r\n})();\r\n\r\nwindow.onresize = () => {\r\n    //更新相机视角比例\r\n    camera.aspect = canvasEL.offsetWidth / canvasEL.offsetHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(canvasEL.offsetWidth, canvasEL.offsetHeight);\r\n};\r\n\r\nwindow.onload = () => {\r\n    initBGMPlayer();\r\n};\r\n","import * as THREE from 'three';\r\nexport function initScene() {\r\n    let scene = new THREE.Scene();\r\n    let backgroundColor= 0x87CEEB;\r\n    scene.name = 'SCENE';\r\n    scene.fog = new THREE.FogExp2(backgroundColor, 0.005);//雾效果\r\n    //增加天空盒\r\n    (function skyBox(backgroundType) {\r\n        backgroundType = backgroundType || 1;\r\n        let textureCube = new THREE.CubeTextureLoader().load([\r\n            './assets/img/1.png',\r\n            './assets/img/2.png',\r\n            './assets/img/3.png',\r\n            './assets/img/4.png',\r\n            './assets/img/5.png',\r\n            './assets/img/6.png'\r\n        ]);\r\n        if (backgroundType === 1) {//使用场景背景添加\r\n            scene.background = new THREE.Color(backgroundColor);\r\n        } else if (backgroundType === 2) {\r\n            scene.background = textureCube\r\n        } else {//使用盒子添加\r\n            //着色器\r\n            let cubeShader = THREE.ShaderLib[\"cube\"];\r\n            cubeShader.uniforms[\"tCube\"].value = textureCube;\r\n            let material = new THREE.ShaderMaterial({\r\n                fragmentShader: cubeShader.fragmentShader,  //定义自己的片元着色器\r\n                vertexShader: cubeShader.vertexShader,  //定义自己的顶点着色器\r\n                uniforms: cubeShader.uniforms,  //给着色器传入uniform变量的值\r\n                depthWrite: false,  //决定这个材质是否影响WebGL的深度缓存\r\n                side: THREE.BackSide,  //侧面：反面\r\n            });\r\n            //创建方盒子\r\n            let cubeWithPic = new THREE.Mesh(new THREE.CubeGeometry(1000000, 1000000, 1000000), material);\r\n            scene.add(cubeWithPic);\r\n        }\r\n    })(1);\r\n    return scene;\r\n}","import * as THREE from \"three\";\r\n\r\nexport function initCamera() {\r\n    let camera = new THREE.PerspectiveCamera();\r\n    camera.name = \"CAMERA\";\r\n    camera.fov = 45; //fov表示摄像机视锥体垂直视野角度，最小值为0，最大值为180，默认值为50，实际项目中一般都定义45，因为45最接近人正常睁眼角度\r\n    // camera.aspect = width / height; //aspect表示摄像机视锥体长宽比，默认长宽比为1，即表示看到的是正方形，实际项目中使用的是屏幕的宽高比\r\n    camera.near = 0.1; //near表示摄像机视锥体近端面，这个值默认为0.1，实际项目中都会设置为1\r\n    camera.far = 1000; //far表示摄像机视锥体远端面，默认为2000，这个值可以是无限的，说的简单点就是我们视觉所能看到的最远距离\r\n    camera.position.x = 0;\r\n    camera.position.y = 10;\r\n    camera.position.z = 0;\r\n    return camera;\r\n}","import * as THREE from \"three\";\r\nimport GlobalSetting from \"../setting/GlobalSetting\";\r\n\r\nexport function initRenderer() {\r\n    let renderer = new THREE.WebGLRenderer();\r\n    renderer.name = 'RENDERER';\r\n    renderer.antialias = true;//是否开启反锯齿\r\n    renderer.shadowMap.enabled =  GlobalSetting.enableShadow;\r\n    // renderer.shadowMap.type = THREE.PCFSoftShadowMap;//更柔和的影子，需要的性能更高\r\n    // renderer.setSize(width, height);\r\n    renderer.setClearColor(0xFFFFFF, 1.0);//背景颜色\r\n    return renderer\r\n}","import ShowOrbitControl from \"./ShowOrbitControl\";\r\nimport MCFirstPersonControl from \"./MCFirstPersonControl\";\r\n\r\nexport function initControls(controlsType,scene,camera,renderer,objects) {\r\n    let controls;\r\n    switch (controlsType) {\r\n        case \"ShowOrbitControl\":\r\n            let showOrbitControl = new ShowOrbitControl(camera, renderer.domElement);\r\n            showOrbitControl.initClickFunction(scene.children);\r\n            controls = showOrbitControl.controls;\r\n            break;\r\n        case \"MCFirstPersonControl\":\r\n            let mcFirstPersonControl = new MCFirstPersonControl(camera, renderer.domElement, objects, scene);\r\n            controls = mcFirstPersonControl;\r\n            break;\r\n    }\r\n    return controls;\r\n}","\r\nexport  function initBGMPlayer() {\r\n    let audioBGM;\r\n    let currentIndex = 0;\r\n    let arr = [//把需要播放的歌曲从后往前排，这里已添加两首音乐，可继续添加多个音乐\r\n        \"./assets/sound/calm1.ogg\",\r\n        \"./assets/sound/calm2.ogg\",\r\n        \"./assets/sound/calm3.ogg\",\r\n        \"./assets/sound/hal1.ogg\",\r\n        \"./assets/sound/hal2.ogg\",\r\n        \"./assets/sound/hal3.ogg\",\r\n        \"./assets/sound/hal4.ogg\",\r\n    ];\r\n    audioBGM = new Audio();\r\n    audioBGM.preload = \"true\";\r\n    audioBGM.controls = true;\r\n    audioBGM.autoplay = true;\r\n    // audioBGM.muted = true;\r\n    audioBGM.hidden = true;\r\n    audioBGM.style.display = \"none\";\r\n    audioBGM.style.position = \"fixed\";\r\n    audioBGM.style.top = \"0\";\r\n    audioBGM.style.right = \"0\";\r\n    audioBGM.style.zIndex = \"101\";\r\n    audioBGM.loop = false;//禁止循环，否则无法触发ended事件\r\n    audioBGM.src = arr[currentIndex];         //每次读数组最后一个元素\r\n    audioBGM.addEventListener('ended', playEndedHandler, false);\r\n    document.addEventListener('click', playHandler, false);\r\n    // audioBGM.play();\r\n    document.body.appendChild(audioBGM);\r\n\r\n    function playEndedHandler() {\r\n        currentIndex++;\r\n        if (currentIndex >= arr.length) {\r\n            currentIndex = 0;\r\n        }\r\n        audioBGM.src = arr[currentIndex];\r\n        audioBGM.play();\r\n        // myAudio.removeEventListener('ended', playEndedHandler, false);\r\n    }\r\n\r\n    function playHandler() {\r\n        audioBGM.play();\r\n        document.removeEventListener('click', playHandler, false);\r\n    }\r\n    return audioBGM;\r\n}"],"sourceRoot":""}