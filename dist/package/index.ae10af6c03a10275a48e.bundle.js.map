{"version":3,"sources":["webpack:///./src/utils/objects/CubeFactory.js","webpack:///./src/utils/stats/StatsWindow.js","webpack:///./src/utils/controls/ShowOrbitControl.js","webpack:///./src/utils/controls/MCFirstPersonControl.js","webpack:///./src/index.js"],"names":["THREE","TextureLoader","NearestFilter","Mesh","MeshLambertMaterial","CubeGeometry","CubeFactory","cubeType","DefaultCubeInfo","GrassDirt","images","imageSet","material","Cloud","transparent","opacity","Object","keys","indexOf","this","_materials","_geometry","undefined","_cubeSize","length","textureLoader","extraOptions","textureList","imageUrl","texture","load","generateMipmaps","minFilter","magFilter","push","materialList","map","fog","key","x","y","z","cube","position","name","initMaterials","initGeometry","buildCube","canvasElId","_instance","stats","domElement","style","left","top","document","getElementById","appendChild","Vector3","Raycaster","Vector2","camera","objects","scene","checkRay","X0","X1","Z0","Z1","Y0","Y1","moveForward","moveBackward","moveLeft","moveRight","preRuning","isRunning","canJump","velocity","direction","worldOption","g","personOption","height","sightHeight","jumpHeight","speedWalk","speedRun","accelerateRateStart","accelerateRateStop","thickness","init","controls","PointerLockControls","blocker","createElement","zIndex","width","id","body","append","addEventListener","lock","display","aimX","setAimStyle","aimY","event","keyCode","performance","now","Math","sqrt","i","initClickFunction","delta","console","log","isLocked","Number","normalize","velocityXZMax","velocityZTmp","abs","velocityXTmp","positionBeforeX","getObject","positionBeforeZ","Z0Flat","ray","origin","copy","rayMoveX","intersections","intersectObjects","Z0NearFlatTmp","point","max","Z1Flat","Z1NearFlatTmp","min","nextZ","X0Flat","X0NearFlatTmp","X1Flat","X1NearFlatTmp","nextX","bottomFlatY","rayMove","bottomFlatYTmp","topFlatY","topFlatYTmp","nextY","window","button","clickedObjects","raycaster","aim","setFromCamera","children","object","distance","face","normal","newPosition","create","add","getObjectByName","index","findIndex","e","splice","remove","getObjectById","aimEl","transform","fontSize","fontWeight","textAlign","verticalAlign","lineHeight","fontFamily","backgroundColor","Scene","FogExp2","CubeTextureLoader","Color","ShaderLib","ShaderMaterial","BackSide","AmbientLight","PerspectiveCamera","WebGLRenderer","PCFSoftShadowMap","isWebGLAvailable","getWebGLErrorMessage","lightAmbient","renderer","canvasEL","offsetWidth","offsetHeight","sceneOption","backgroundType","textureCube","background","cubeShader","uniforms","value","fragmentShader","vertexShader","depthWrite","side","cubeWithPic","lightCurrentIntensity","lightValueChangeDirection","lightHighIntensity","lightLowIntensity","getAmbientLightIntensity","antialias","shadowMap","enabled","type","setSize","setClearColor","mcFirstPersonControl","cubeFactory","testBlock","mountainHeight","cubePosition","audioBGM","prevTime","animate","requestAnimationFrame","time","update","render","intensity","onresize","aspect","updateProjectionMatrix","onload","currentIndex","arr","Audio","preload","autoplay","hidden","right","loop","src","play","playHandler","removeEventListener","playBGM"],"mappings":"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","file":"package/index.ae10af6c03a10275a48e.bundle.js","sourcesContent":["import {TextureLoader, NearestFilter, Mesh, MeshLambertMaterial, CubeGeometry} from \"three\";\r\n\r\nconst THREE = {TextureLoader, NearestFilter, Mesh, MeshLambertMaterial, CubeGeometry};\r\nexport default class CubeFactory {\r\n    constructor(cubeType) {\r\n        //预设方块信息\r\n        CubeFactory.DefaultCubeInfo = {\r\n            GrassDirt: {\r\n                images: [\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_top_green.png',\r\n                    './assets/img/blocks/dirt.png',\r\n                ],\r\n                imageSet: [0, 0, 1, 2, 0, 0],\r\n                material: {}\r\n            },\r\n            Cloud: {\r\n                images: [\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_top_green.png',\r\n                    './assets/img/blocks/dirt.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                ],\r\n                imageSet: [0, 0, 1, 2, 0, 0],\r\n                material: {\r\n                    transparent: true,//透明\r\n                    opacity: 0.2,//透明度\r\n                }\r\n            }\r\n        };\r\n        if(Object.keys(CubeFactory.DefaultCubeInfo).indexOf(cubeType)===-1){\r\n            throw \"unknown cubeType\"\r\n        }\r\n        this.cubeType = cubeType;\r\n        this._materials = [];\r\n        this._geometry = undefined;\r\n        this._cubeSize = 1;//方块边长，默认1\r\n    }\r\n\r\n    //初始化材质\r\n    initMaterials() {\r\n        if (this._materials && this._materials.length !== 0) {\r\n            return;\r\n        }\r\n        let textureLoader = new THREE.TextureLoader();\r\n        let extraOptions = {};\r\n        if (CubeFactory.DefaultCubeInfo[this.cubeType]) {\r\n            extraOptions = CubeFactory.DefaultCubeInfo[this.cubeType].material;\r\n        }\r\n        let textureList = [];\r\n        for (let imageUrl of CubeFactory.DefaultCubeInfo[this.cubeType].images) {\r\n            let texture = textureLoader.load(imageUrl);\r\n            texture.generateMipmaps = false;\r\n            texture.minFilter = THREE.NearestFilter; //minFilter属性：指定纹理如何缩小。默认值：THREE.LinearMipMapLinearFilter。 THREE.NearestFilter 贴图像素化\r\n            texture.magFilter = THREE.NearestFilter;\r\n            textureList.push(texture);\r\n        }\r\n        let materialList = [];\r\n        for (let texture of textureList) {\r\n            materialList.push(\r\n                new THREE.MeshLambertMaterial({\r\n                    map: texture,\r\n                    fog: true,//当前材质是否受到全局雾化效果器影响\r\n                    ...extraOptions\r\n                })\r\n            );\r\n        }\r\n        for (let key of CubeFactory.DefaultCubeInfo[this.cubeType].imageSet) {\r\n            this._materials.push(materialList[key]);\r\n        }\r\n    };\r\n\r\n\r\n    initGeometry() {\r\n        if (this._geometry) {\r\n            return;\r\n        }\r\n        this._geometry = new THREE.CubeGeometry(this._cubeSize, this._cubeSize, this._cubeSize)\r\n    }\r\n\r\n    //构造方块\r\n    buildCube(x, y, z) {\r\n        x = x || 0;\r\n        y = y || 0;\r\n        z = z || 0;\r\n        let cube = new THREE.Mesh(\r\n            this._geometry,\r\n            this._materials\r\n            // new THREE.MeshLambertMaterial({color: 0x00cc00})\r\n        );\r\n        // cube.receiveShadow = cube.castShadow = true;\r\n        cube.position.x = x + this._cubeSize / 2;\r\n        cube.position.y = y + this._cubeSize / 2;\r\n        cube.position.z = z + this._cubeSize / 2;\r\n        cube.name = \"GrassCube(\" + x + \",\" + y + \",\" + z + \")\";\r\n        return cube;\r\n    }\r\n\r\n    create(x, y, z) {\r\n        this.initMaterials();\r\n        this.initGeometry();\r\n        return this.buildCube(x, y, z);\r\n    }\r\n}","// 查看信息小控件\r\nimport Stats from \"stats-js\";\r\n\r\nexport default class StatsWindow {\r\n    constructor(canvasElId) {\r\n        StatsWindow._instance;\r\n        this.stats;\r\n        if (StatsWindow._instance) {\r\n            return StatsWindow._instance;\r\n        }\r\n        this.stats = new Stats();\r\n        this.stats.domElement.style.position = 'absolute';\r\n        this.stats.domElement.style.left = '0px';\r\n        this.stats.domElement.style.top = '0px';\r\n        document.getElementById(canvasElId).appendChild(this.stats.domElement);\r\n        StatsWindow._instance = this;\r\n        return this;\r\n    }\r\n}\r\n\r\n","import {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\nimport {Raycaster, Vector2} from 'three';\r\n\r\nconst THREE = {Raycaster, Vector2};\r\nexport default class ShowOrbitControl {\r\n\r\n    constructor(camera, domElement) {\r\n        // ShowOrbitControl._instance;\r\n        // this.controls;\r\n        this.camera = camera;\r\n        if (ShowOrbitControl._instance) {\r\n            return ShowOrbitControl._instance;\r\n        }\r\n        this.controls = new OrbitControls(camera, domElement);\r\n        //动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n        this.controls.dampingFactor = 1;\r\n        //是否允许平移\r\n        this.controls.enablePan = false;\r\n        ShowOrbitControl._instance = this;\r\n        return ShowOrbitControl._instance;\r\n    }\r\n\r\n    initClickFunction(objects, camera) {\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(event, objects, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                let obj = clickedObjects[0].object;\r\n                console.log(\"点击的对象：\" + obj.name);\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(event, objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let mouse = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(mouse, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}\r\n\r\n\r\n","import {PointerLockControls} from 'three/examples/jsm/controls/PointerLockControls'\r\nimport {Vector3, Raycaster, Vector2} from 'three';\r\nimport CubeFactory from \"../objects/CubeFactory\";\r\n\r\nconst THREE = {Vector3, Raycaster, Vector2};\r\nexport default class MCFirstPersonControl {\r\n\r\n    constructor(camera, domElement, objects, scene) {\r\n        // MCFirstPersonControl._instance;\r\n        // this.controls;\r\n        // this.removeBlockTimer;//移除方块计时\r\n        this.camera = camera;\r\n        this.objects = objects;\r\n        this.scene = scene;\r\n        if (MCFirstPersonControl._instance) {\r\n            return MCFirstPersonControl._instance;\r\n        }\r\n        this.checkRay = {//0为负，1为正\r\n            X0: [],\r\n            X1: [],\r\n            Z0: [],\r\n            Z1: [],\r\n\r\n            Y0: [],\r\n            Y1: [],\r\n        };\r\n        this.moveForward = false;\r\n        this.moveBackward = false;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.preRuning = undefined;\r\n        this.isRunning = false;\r\n        this.canJump = false;\r\n        // this.prevTime = performance.now();\r\n        this.velocity = new THREE.Vector3();\r\n        this.direction = new THREE.Vector3();\r\n        this.worldOption = {\r\n            g: 9.0\r\n        };\r\n        this.personOption = {\r\n            height: 1.8,//人物总高度。现有配置不能让人物高于2\r\n            sightHeight: 1.5,//眼部高度。现有配置不能让人物高于2\r\n            jumpHeight: 1.4,    //最大跳跃高度，实际为到此高度\r\n            speedWalk: 5.7,     //最大行走速度\r\n            speedRun: 10,       //最大奔跑速度，连按w两次\r\n            accelerateRateStart: 0.3,//加速时加速比率。正数向前；负数反向；0不会加速；绝对值大于等于1可立即到最大速度\r\n            accelerateRateStop: 0.8,//停止时减速比率。范围[0-1]。0时立即停止，1时不会减速\r\n            thickness: 0.6,//人物的边长\r\n        };\r\n        this.init(camera, domElement);\r\n        MCFirstPersonControl._instance = this;\r\n        return MCFirstPersonControl._instance;\r\n    }\r\n\r\n    init(camera, domElement) {\r\n        this.controls = new PointerLockControls(camera, domElement);\r\n        //增加遮罩层\r\n        {\r\n            let blocker = document.createElement(\"div\");\r\n            blocker.style.position = \"absolute\";\r\n            blocker.style.zIndex = \"100\";\r\n            blocker.style.width = \"100%\";\r\n            blocker.style.height = \"100%\";\r\n            blocker.style.top = \"0\";\r\n            blocker.style.left = \"0\";\r\n            blocker.id = \"blocker\";\r\n            // blocker.style.backgroundColor = \"rgba(0, 0, 0, 0.4)\";\r\n            document.body.append(blocker);\r\n            blocker.addEventListener('click', () => {\r\n                this.controls.lock();\r\n            }, false);\r\n            this.controls.addEventListener('lock', function () {\r\n                blocker.style.display = 'none';\r\n            });\r\n            this.controls.addEventListener('unlock', function () {\r\n                blocker.style.display = 'block';\r\n            });\r\n        }\r\n        //添加准星\r\n        {\r\n            let aimX = document.createElement(\"div\");\r\n            aimX.style.height = \"2px\";\r\n            aimX.style.width = \"20px\";\r\n            setAimStyle(aimX);\r\n            document.body.append(aimX);\r\n            let aimY = document.createElement(\"div\");\r\n            aimY.style.height = \"20px\";\r\n            aimY.style.width = \"2px\";\r\n            setAimStyle(aimY);\r\n            document.body.append(aimY);\r\n        }\r\n        //加按键事件\r\n        let onKeyDown = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    if (this.moveForward) {\r\n                        break;\r\n                    }\r\n                    if (!this.preRuning) {\r\n                        this.preRuning = performance.now();\r\n                    } else {\r\n                        this.isRunning = performance.now() - this.preRuning <= 200;\r\n                        this.preRuning = performance.now();\r\n                    }\r\n                    this.moveForward = true;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    if (this.moveLeft) {\r\n                        break;\r\n                    }\r\n                    this.moveLeft = true;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    if (this.moveBackward) {\r\n                        break;\r\n                    }\r\n                    this.moveBackward = true;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    if (this.moveRight) {\r\n                        break;\r\n                    }\r\n                    this.moveRight = true;\r\n                    break;\r\n\r\n                case 32: // space\r\n                    //7.74是60开平方\r\n                    if (this.canJump) this.velocity.y += Math.sqrt(2 * this.worldOption.g * 7.74 * this.personOption.jumpHeight);\r\n                    this.canJump = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        let onKeyUp = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    this.isRunning = false;\r\n                    this.moveForward = false;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    this.moveLeft = false;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    this.moveBackward = false;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    this.moveRight = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        document.addEventListener('keydown', onKeyDown, false);\r\n        document.addEventListener('keyup', onKeyUp, false);\r\n        //加水平方向碰撞检测  。0,1脚底；2,3中间；4,5头顶\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.X0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(-1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.X1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.Z0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, -1), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.Z1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, 1), 0, 0));\r\n        }\r\n        //加垂直方向碰撞检测\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 1, 0), 0, 0));\r\n        }\r\n        //初始化点击功能\r\n        this.initClickFunction();\r\n    }\r\n\r\n    update(delta) {\r\n        console.log(this.objects.length)\r\n        delta = delta || 0.016;\r\n        if (!this.controls.isLocked) {\r\n            this.moveForward = false;\r\n            this.moveBackward = false;\r\n            this.moveLeft = false;\r\n            this.moveRight = false;\r\n        }\r\n        //水平方向移动\r\n        {\r\n            this.direction.z = Number(this.moveForward) - Number(this.moveBackward);\r\n            this.direction.x = Number(this.moveRight) - Number(this.moveLeft);\r\n            this.direction.normalize(); // this ensures consistent movements in all directions\r\n            let velocityXZMax = this.isRunning ? this.personOption.speedRun : this.personOption.speedWalk;\r\n\r\n            if (this.moveForward || this.moveBackward) {\r\n                let velocityZTmp = this.velocity.z + this.direction.z * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityZTmp) < velocityXZMax) {\r\n                    this.velocity.z = velocityZTmp;\r\n                } else {\r\n                    this.velocity.z = this.direction.z * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.z = Math.abs(this.velocity.z) > 1 ? this.velocity.z * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            if (this.moveLeft || this.moveRight) {\r\n                let velocityXTmp = this.velocity.x + this.direction.x * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityXTmp) < velocityXZMax) {\r\n                    this.velocity.x = velocityXTmp;\r\n                } else {\r\n                    this.velocity.x = this.direction.x * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.x = Math.abs(this.velocity.x) > 1 ? this.velocity.x * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            let positionBeforeX = this.controls.getObject().position.x;\r\n            let positionBeforeZ = this.controls.getObject().position.z;\r\n\r\n            this.controls.moveForward(this.velocity.z * delta);\r\n            this.controls.moveRight(this.velocity.x * delta);\r\n\r\n            {//z轴碰撞检测\r\n                let Z0Flat = undefined;//z负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.Z0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z0[i].ray.origin.x = positionBeforeX;//修正为移动前的x轴位置，防止使用位移后的位置检测墙壁\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.Z0[0].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[1].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z0[2].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z0[3].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z0[4].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[5].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.Z0[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let Z0NearFlatTmp = intersections[0].point.z;\r\n                            Z0Flat = Math.max(Z0Flat === undefined ? Z0NearFlatTmp : Z0Flat, Z0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let Z1Flat = undefined;//z正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.Z1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z1[i].ray.origin.x = positionBeforeX;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.Z1[0].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[1].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z1[2].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z1[3].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z1[4].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[5].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.Z1[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let Z1NearFlatTmp = intersections[0].point.z;\r\n                            Z1Flat = Math.min(Z1Flat === undefined ? Z1NearFlatTmp : Z1Flat, Z1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextZ = this.controls.getObject().position.z;\r\n                nextZ = Math.max(Z0Flat === undefined ? nextZ : (Z0Flat + this.personOption.thickness / 2 + 0.001), nextZ);\r\n                nextZ = Math.min(Z1Flat === undefined ? nextZ : (Z1Flat - this.personOption.thickness / 2 - 0.001), nextZ);\r\n                this.controls.getObject().position.z = nextZ\r\n            }\r\n\r\n            {//x轴碰撞检测\r\n                let X0Flat = undefined;//x负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.X0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X0[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.X0[0].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X0[1].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X0[2].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X0[3].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X0[4].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    this.checkRay.X0[5].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.X0[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let X0NearFlatTmp = intersections[0].point.x;\r\n                            X0Flat = Math.max(X0Flat === undefined ? X0NearFlatTmp : X0Flat, X0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let X1Flat = undefined;//x正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.X1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X1[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.X1[0].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[1].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X1[2].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X1[3].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X1[4].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[5].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.X1[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let X1NearFlatTmp = intersections[0].point.x;\r\n                            X1Flat = Math.min(X1Flat === undefined ? X1NearFlatTmp : X1Flat, X1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextX = this.controls.getObject().position.x;\r\n                nextX = Math.max(X0Flat === undefined ? nextX : (X0Flat + this.personOption.thickness / 2 + 0.001), nextX);\r\n                nextX = Math.min(X1Flat === undefined ? nextX : (X1Flat - this.personOption.thickness / 2 - 0.001), nextX);\r\n                this.controls.getObject().position.x = nextX\r\n                // console.log(Z0Flat,Z1Flat,X0Flat,X1Flat)\r\n            }\r\n            // console.log(this.controls.getObject().position.x,this.controls.getObject().position.y,this.controls.getObject().position.z)\r\n        }\r\n        //垂直方向移动+碰撞检测\r\n        {\r\n            let bottomFlatY = undefined;\r\n            //坠落四角检测\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2;\r\n                this.checkRay.Y0[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y0[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y0[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let bottomFlatYTmp = intersections[0].point.y;\r\n                        bottomFlatY = Math.max(bottomFlatY === undefined ? bottomFlatYTmp : bottomFlatY, bottomFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //头顶四角检测\r\n            let topFlatY = undefined;\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2 - 0.01;\r\n                this.checkRay.Y1[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y1[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y1[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let topFlatYTmp = intersections[0].point.y;\r\n                        topFlatY = Math.min(topFlatY === undefined ? topFlatYTmp : topFlatY, topFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //无碰撞时下次垂直位置(相机位置)\r\n            let nextY = this.controls.getObject().position.y + (this.velocity.y * delta);\r\n            if (topFlatY !== undefined) {\r\n                if (nextY > topFlatY - (this.personOption.height - this.personOption.sightHeight)) {\r\n                    nextY = topFlatY - (this.personOption.height - this.personOption.sightHeight)\r\n                    this.velocity.y = 0;\r\n                }\r\n            }\r\n            if (bottomFlatY !== undefined) {\r\n                //下方检测到平台时，脚部不能低于最低平台\r\n                nextY = Math.max(bottomFlatY + this.personOption.sightHeight, nextY);\r\n                if (nextY === bottomFlatY + this.personOption.sightHeight) {\r\n                    this.velocity.y = 0;\r\n                    this.canJump = true;\r\n                } else {\r\n                    this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n                }\r\n            } else {\r\n                //下方未检测到平台时\r\n                this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n            }\r\n            this.controls.getObject().position.y = nextY;\r\n        }\r\n        if (this.controls.getObject().position.y < -500) {\r\n            this.velocity.y = 0;\r\n            this.controls.getObject().position.y = 500;\r\n            this.controls.getObject().position.x = 0;\r\n            this.controls.getObject().position.z = 0;\r\n        }\r\n    }\r\n\r\n    initClickFunction() {\r\n        window.addEventListener('mouseup', (event) => {\r\n            if (event.button === 1) {\r\n\r\n            }\r\n        });\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(this.scene.children, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                console.log(\"点击对象【\" + clickedObjects[0].object.name + \"】\", clickedObjects[0]);\r\n                if (\r\n                    clickedObjects[0]\r\n                    && clickedObjects[0].distance <= 10\r\n                    && clickedObjects[0].face && clickedObjects[0].face.normal\r\n                    && clickedObjects[0].object && clickedObjects[0].object.position\r\n                ) {\r\n                    let normal = clickedObjects[0].face.normal;\r\n                    let position = clickedObjects[0].object.position;\r\n                    // console.log(normal.x, normal.y, normal.z, position.x, position.y, position.z)\r\n                    let newPosition = {\r\n                        x: normal.x + position.x - 0.5,\r\n                        y: normal.y + position.y - 0.5,\r\n                        z: normal.z + position.z - 0.5,\r\n                    };\r\n                    // console.log(\"newPosition\", newPosition, normal.x + position.x, normal.y + position.y, normal.z + position.z)\r\n                    if (event.button === 2) {//添加方块 右键\r\n                        //TODO 添加方块代码独立，方块不能添加到人物所站的地方\r\n                        let cubeFactory = new CubeFactory(\"GrassDirt\");\r\n                        let cube = cubeFactory.create(newPosition.x, newPosition.y, newPosition.z);\r\n                        this.scene.add(cube);\r\n                        this.objects.push(cube)\r\n                    } else if (event.button === 0) {//删除方块 左键\r\n                        //TODO 改为长按同一方块时才删除\r\n                        console.log(clickedObjects[0].object, this.scene.getObjectByName(clickedObjects[0].object.name));\r\n                        let index = this.objects.findIndex(e => e.id === clickedObjects[0].object.id);\r\n                        if (index >= 0) {\r\n                            this.objects.splice(index, 1);\r\n                        }\r\n                        this.scene.remove(this.scene.getObjectById(clickedObjects[0].object.id));\r\n                    }\r\n                }\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\nfunction setAimStyle(aimEl) {\r\n    aimEl.style.position = \"fixed\";\r\n    aimEl.style.left = \"50%\";\r\n    aimEl.style.top = \"50%\";\r\n    aimEl.style.transform = \"translate(-50%,-50%)\";\r\n    aimEl.style.zIndex = \"1\";\r\n    aimEl.style.fontSize = \"100%\";\r\n    aimEl.style.fontWeight = \"bold\";\r\n    aimEl.style.textAlign = \"center\";\r\n    aimEl.style.verticalAlign = \"middle\";\r\n    aimEl.style.lineHeight = \"10px\";\r\n    aimEl.style.fontFamily = \"\\\"Times New Roman\\\",serif\";\r\n    aimEl.style.backgroundColor = \"#E0E0E0\";\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let aim = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    aim.x = 0;\r\n    aim.y = 0;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(aim, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}","import {Scene,FogExp2,CubeTextureLoader,Color,ShaderLib,ShaderMaterial,BackSide,CubeGeometry,AmbientLight,PerspectiveCamera,WebGLRenderer,PCFSoftShadowMap} from 'three';\r\nimport {WEBGL} from \"three/examples/jsm/WebGL.js\";\r\n// import TWEEN from \"@tweenjs/tween.js\";//动作库\r\nimport CubeFactory from \"./utils/objects/CubeFactory.js\";\r\nimport StatsWindow from \"./utils/stats/StatsWindow.js\";\r\nimport ShowOrbitControl from \"./utils/controls/ShowOrbitControl.js\";\r\nimport MCFirstPersonControl from \"./utils/controls/MCFirstPersonControl.js\";\r\n\r\nconst THREE={Scene,FogExp2,CubeTextureLoader,Color,ShaderLib,ShaderMaterial,BackSide,CubeGeometry,AmbientLight,PerspectiveCamera,WebGLRenderer,PCFSoftShadowMap};\r\n\r\nlet enableShadow = false;\r\n\r\nif (WEBGL.isWebGLAvailable() === false) {\r\n    document.body.appendChild(WEBGL.getWebGLErrorMessage());\r\n}\r\n\r\nlet canvasEL = document.getElementById(\"canvas-frame\");\r\nlet width = canvasEL.offsetWidth;\r\nlet height = canvasEL.offsetHeight;\r\n\r\n// 舞台*\r\nlet sceneOption = {\r\n    backgroundColor: 0x87CEEB\r\n};\r\nlet scene = (function initScene() {\r\n    let scene = new THREE.Scene();\r\n    scene.name = 'SCENE';\r\n    scene.fog = new THREE.FogExp2(sceneOption.backgroundColor, 0.005);//雾效果\r\n    //增加天空盒\r\n    (function skyBox(backgroundType) {\r\n        backgroundType = backgroundType || 1;\r\n        let textureCube = new THREE.CubeTextureLoader().load([\r\n            './assets/img/1.png',\r\n            './assets/img/2.png',\r\n            './assets/img/3.png',\r\n            './assets/img/4.png',\r\n            './assets/img/5.png',\r\n            './assets/img/6.png'\r\n        ]);\r\n        if (backgroundType === 1) {//使用场景背景添加\r\n            scene.background = new THREE.Color(sceneOption.backgroundColor);\r\n        } else if (backgroundType === 2) {\r\n            scene.background = textureCube\r\n        } else {//使用盒子添加\r\n            //着色器\r\n            let cubeShader = THREE.ShaderLib[\"cube\"];\r\n            cubeShader.uniforms[\"tCube\"].value = textureCube;\r\n            let material = new THREE.ShaderMaterial({\r\n                fragmentShader: cubeShader.fragmentShader,  //定义自己的片元着色器\r\n                vertexShader: cubeShader.vertexShader,  //定义自己的顶点着色器\r\n                uniforms: cubeShader.uniforms,  //给着色器传入uniform变量的值\r\n                depthWrite: false,  //决定这个材质是否影响WebGL的深度缓存\r\n                side: THREE.BackSide,  //侧面：反面\r\n            });\r\n            //创建方盒子\r\n            let cubeWithPic = new THREE.Mesh(new THREE.CubeGeometry(1000000, 1000000, 1000000), material);\r\n            scene.add(cubeWithPic);\r\n        }\r\n    })(1);\r\n    return scene;\r\n})();\r\n\r\nlet lightCurrentIntensity = 1;\r\nlet lightValueChangeDirection = true;\r\nlet lightHighIntensity = 1;\r\nlet lightLowIntensity = 0.4;\r\n\r\nfunction getAmbientLightIntensity() {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity);\r\n}\r\n\r\n// 光源*\r\nlet lightAmbient;\r\n(function initDirectionalLight() {\r\n    lightAmbient = new THREE.AmbientLight(0xffffff, getAmbientLightIntensity());//平行光。制造明暗面，并不使方块变色严重\r\n    scene.add(lightAmbient);\r\n})();\r\n\r\n// 相机*\r\nlet camera;\r\n(function initCamera() {\r\n    camera = new THREE.PerspectiveCamera(45, width / height, 0.01, 1000);//最远1e10\r\n    camera.name = \"CAMERA\";\r\n    camera.position.x = 0;\r\n    camera.position.y = 10;\r\n    camera.position.z = 0;\r\n})();\r\n\r\n// 渲染器*\r\nlet renderer;\r\n(function initRenderer() {\r\n    renderer = new THREE.WebGLRenderer({\r\n        antialias: true//是否开启反锯齿\r\n    });\r\n    renderer.name = 'RENDERER';\r\n    renderer.shadowMap.enabled = enableShadow;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;//更柔和的影子，需要的性能更高\r\n    renderer.setSize(width, height);\r\n    document.getElementById('canvas-frame').appendChild(renderer.domElement);\r\n    renderer.setClearColor(0xFFFFFF, 1.0);//背景颜色\r\n})();\r\n\r\n// 相机控制器\r\nlet controls;\r\nlet controlsType = \"MCFirstPersonControl\";\r\nlet objects = [];\r\n(function initControls() {\r\n    switch (controlsType) {\r\n        case \"ShowOrbitControl\":\r\n            let showOrbitControl = new ShowOrbitControl(camera, renderer.domElement);\r\n            showOrbitControl.initClickFunction(scene.children);\r\n            controls = showOrbitControl.controls;\r\n            break;\r\n        case \"MCFirstPersonControl\":\r\n            let mcFirstPersonControl = new MCFirstPersonControl(camera, renderer.domElement, objects, scene);\r\n            controls = mcFirstPersonControl;\r\n            break;\r\n    }\r\n})();\r\n\r\n\r\n//-----------以下为物体添加代码---------------------------------------------------------------\r\n// import * as AddXYZLing from './utils/objects/AddXYZLine';\r\n// AddXYZLing.buildXYZLine(scene);\r\n\r\nfunction changeLight() {\r\n    lightAmbient.intensity = getAmbientLightIntensity();\r\n    // lightDirectional.intensity = getDirectionalLightIntensity();\r\n    if (lightValueChangeDirection) {\r\n        if (lightCurrentIntensity >= lightLowIntensity - (lightHighIntensity - lightLowIntensity)) {\r\n            lightCurrentIntensity -= 0.002;\r\n        } else {\r\n            lightValueChangeDirection = false;\r\n        }\r\n    } else {\r\n        if (lightCurrentIntensity <= lightHighIntensity + (lightHighIntensity - lightLowIntensity)) {\r\n            lightCurrentIntensity += 0.002;\r\n        } else {\r\n            if (lightCurrentIntensity > 1.5) {\r\n                lightValueChangeDirection = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n(function addGrassCubes() {\r\n    let cubeFactory = new CubeFactory(\"GrassDirt\");\r\n    {\r\n        let testBlock = [];\r\n        let width = 10;\r\n        //底板\r\n        for (let x = -width; x < width; x++) {\r\n            for (let z = -width; z < width; z++) {\r\n                testBlock.push([x, -1, z]);\r\n            }\r\n        }\r\n        //阶梯\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                for (let y = 0; y < 5; y++) {\r\n                    if (y >= x) {\r\n                        testBlock.push([x - 7, y - x, z - 7])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //土堆\r\n        let mountainHeight = 4;\r\n        for (let y = 0; y < mountainHeight; y++) {\r\n            for (let x = y; x < 2 * mountainHeight - y; x++) {\r\n                for (let z = y; z < 2 * mountainHeight - y; z++) {\r\n                    testBlock.push([x - 5, y, z + 1])\r\n                }\r\n            }\r\n        }\r\n        //碰撞检测用\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                if (x !== 2 || z !== 2) {\r\n                    testBlock.push([x, 0, z-5]);\r\n                }\r\n            }\r\n        }\r\n        testBlock.push([0, 1, -5]);\r\n        testBlock.push([3, 3, -5]);\r\n        testBlock.push([2, 3, -5]);\r\n        testBlock.push([3, 3, -4]);\r\n        testBlock.push([2, 3, -4]);\r\n        testBlock.push([3, 3, -6]);\r\n        testBlock.push([2, 3, -6]);\r\n        testBlock.push([3, 3, -7]);\r\n        testBlock.push([2, 3, -7]);\r\n        testBlock.push([3, 2, -8]);\r\n        testBlock.push([2, 2, -8]);\r\n        testBlock.push([5, 2, -4]);\r\n        testBlock.push([4, 2, -4]);\r\n        testBlock.push([0, 1, -5]);\r\n\r\n        for (let cubePosition of testBlock) {\r\n            let cube = cubeFactory.create(cubePosition[0], cubePosition[1], cubePosition[2]);\r\n            scene.add(cube);\r\n            objects.push(cube);\r\n        }\r\n    }\r\n})();\r\n\r\nlet prevTime = performance.now();\r\n(function animate() {\r\n    requestAnimationFrame(animate);\r\n    let time = performance.now();\r\n    let delta = (time - prevTime) / 1000;\r\n    prevTime = time;\r\n    // TWEEN.update(delta);\r\n    controls.update(delta);\r\n    renderer.render(scene, camera);\r\n    new StatsWindow(\"canvas-frame\").stats.update(delta);\r\n    changeLight();\r\n})();\r\n\r\n//使渲染器与相机随窗口大小改变适应。自适应窗口大小\r\nwindow.onresize = function () {\r\n    width = canvasEL.offsetWidth;\r\n    height = canvasEL.offsetHeight;\r\n    //更新相机视角比例\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(width, height);\r\n};\r\nwindow.onload = () => {\r\n    playBGM();\r\n};\r\nlet audioBGM;\r\n\r\nfunction playBGM() {\r\n    let currentIndex = 0;\r\n    let arr = [//把需要播放的歌曲从后往前排，这里已添加两首音乐，可继续添加多个音乐\r\n        \"./assets/sound/calm1.ogg\",\r\n        \"./assets/sound/calm2.ogg\",\r\n        \"./assets/sound/calm3.ogg\",\r\n        \"./assets/sound/hal1.ogg\",\r\n        \"./assets/sound/hal2.ogg\",\r\n        \"./assets/sound/hal3.ogg\",\r\n        \"./assets/sound/hal4.ogg\",\r\n    ];\r\n    audioBGM = new Audio();\r\n    audioBGM.preload = \"true\";\r\n    audioBGM.controls = true;\r\n    audioBGM.autoplay = true;\r\n    // audioBGM.muted = true;\r\n    audioBGM.hidden = true;\r\n    audioBGM.style.display = \"none\";\r\n    audioBGM.style.position = \"fixed\";\r\n    audioBGM.style.top = \"0\";\r\n    audioBGM.style.right = \"0\";\r\n    audioBGM.style.zIndex = \"101\";\r\n    audioBGM.loop = false;//禁止循环，否则无法触发ended事件\r\n    audioBGM.src = arr[currentIndex];         //每次读数组最后一个元素\r\n    audioBGM.addEventListener('ended', playEndedHandler, false);\r\n    document.addEventListener('click', playHandler, false);\r\n    // audioBGM.play();\r\n    document.body.appendChild(audioBGM);\r\n\r\n    function playEndedHandler() {\r\n        currentIndex++;\r\n        if (currentIndex >= arr.length) {\r\n            currentIndex = 0;\r\n        }\r\n        audioBGM.src = arr[currentIndex];\r\n        audioBGM.play();\r\n        // myAudio.removeEventListener('ended', playEndedHandler, false);\r\n    }\r\n\r\n    function playHandler() {\r\n        audioBGM.play();\r\n        document.removeEventListener('click', playHandler, false);\r\n    }\r\n}"],"sourceRoot":""}