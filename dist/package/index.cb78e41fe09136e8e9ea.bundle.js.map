{"version":3,"sources":["webpack:///./src/utils/objects/CubeFactory.js","webpack:///./src/utils/stats/StatsWindow.js","webpack:///./src/utils/controls/ShowOrbitControl.js","webpack:///./src/utils/controls/MCFirstPersonControl.js","webpack:///./src/index.js"],"names":["THREE","TextureLoader","NearestFilter","Mesh","MeshLambertMaterial","CubeGeometry","CubeFactory","cubeType","customCubeImages","this","_images","_materials","_cubeSize","DefaultCubeInfo","GrassDirt","images","material","Cloud","transparent","opacity","length","textureLoader","i","texture","load","generateMipmaps","magFilter","minFilter","extraOptions","push","map","fog","x","y","z","cube","position","name","initImages","initMaterials","buildCube","canvasElId","_instance","stats","domElement","style","left","top","document","getElementById","appendChild","Vector3","Raycaster","Vector2","camera","objects","scene","checkRay","X0","X1","Z0","Z1","Y0","Y1","moveForward","moveBackward","moveLeft","moveRight","preRuning","undefined","isRunning","canJump","velocity","direction","worldOption","g","personOption","height","sightHeight","jumpHeight","speedWalk","speedRun","accelerateRateStart","accelerateRateStop","thickness","init","controls","PointerLockControls","blocker","createElement","zIndex","width","id","body","append","addEventListener","lock","display","aimX","setAimStyle","aimY","event","keyCode","performance","now","Math","sqrt","initClickFunction","delta","isLocked","Number","normalize","velocityXZMax","velocityZTmp","abs","velocityXTmp","positionBeforeX","getObject","positionBeforeZ","Z0Flat","ray","origin","copy","rayMoveX","intersections","intersectObjects","children","Z0NearFlatTmp","point","max","Z1Flat","Z1NearFlatTmp","min","nextZ","X0Flat","X0NearFlatTmp","X1Flat","X1NearFlatTmp","nextX","bottomFlatY","rayMove","bottomFlatYTmp","topFlatY","topFlatYTmp","nextY","window","button","clickedObjects","raycaster","aim","setFromCamera","console","log","object","distance","face","normal","newPosition","create","add","getObjectByName","remove","getObjectById","aimEl","transform","fontSize","fontWeight","textAlign","verticalAlign","lineHeight","fontFamily","backgroundColor","Scene","FogExp2","CubeTextureLoader","Color","ShaderLib","ShaderMaterial","BackSide","AmbientLight","PerspectiveCamera","WebGLRenderer","PCFSoftShadowMap","isWebGLAvailable","getWebGLErrorMessage","lightAmbient","renderer","canvasEL","offsetWidth","offsetHeight","sceneOption","backgroundType","textureCube","background","cubeShader","uniforms","value","fragmentShader","vertexShader","depthWrite","side","cubeWithPic","lightCurrentIntensity","lightValueChangeDirection","lightHighIntensity","lightLowIntensity","getAmbientLightIntensity","antialias","shadowMap","enabled","type","setSize","setClearColor","mcFirstPersonControl","cubeFactory","testBlock","mountainHeight","cubePosition","audioBGM","prevTime","animate","requestAnimationFrame","time","update","render","intensity","onresize","aspect","updateProjectionMatrix","onload","currentIndex","arr","Audio","preload","autoplay","hidden","right","loop","src","play","playHandler","removeEventListener","playBGM"],"mappings":"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","file":"package/index.cb78e41fe09136e8e9ea.bundle.js","sourcesContent":["import {TextureLoader, NearestFilter,Mesh, MeshLambertMaterial, CubeGeometry} from \"three\";\r\n\r\nconst THREE = {TextureLoader, NearestFilter,Mesh, MeshLambertMaterial, CubeGeometry};\r\nexport default class CubeFactory {\r\n    constructor(cubeType, customCubeImages) {\r\n        this.cubeType = cubeType;\r\n        this.customCubeImages = customCubeImages;\r\n        this._images = [];//实际使用的贴图\r\n        this._materials = [];\r\n        this._cubeSize = 1;//方块边长，默认1\r\n        CubeFactory.customCubeImages = [];//自定义贴图，仅在cubeType为“custom”时生效\r\n        //预设方块信息\r\n        CubeFactory.DefaultCubeInfo = {\r\n            GrassDirt: {\r\n                images: [\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_top_green.png',\r\n                    './assets/img/blocks/dirt.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                ],\r\n                material: {}\r\n            },\r\n            Cloud: {\r\n                images: [\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_top_green.png',\r\n                    './assets/img/blocks/dirt.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                    './assets/img/blocks/grass_side.png',\r\n                ],\r\n                material: {\r\n                    transparent: true,//透明\r\n                    opacity: 0.2,//透明度\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    //初始化images\r\n    initImages() {\r\n        if (this._images && this._images.length !== 0) {\r\n            return;\r\n        }\r\n        if (this.cubeType === \"Custom\") {\r\n            this._images = this.customCubeImages;\r\n        } else if (CubeFactory.DefaultCubeInfo[this.cubeType]) {\r\n            this._images = CubeFactory.DefaultCubeInfo[this.cubeType].images;\r\n        } else {\r\n            throw \"unknown cubeType\";\r\n        }\r\n    };\r\n\r\n    //初始化材质\r\n    initMaterials() {\r\n        if (this._materials && this._materials.length !== 0) {\r\n            return;\r\n        }\r\n        let textureLoader = new THREE.TextureLoader();\r\n        for (let i = 0; i < 6; ++i) {\r\n            let texture = textureLoader.load(this._images[i]);\r\n            texture.generateMipmaps = false;\r\n            texture.magFilter = THREE.NearestFilter;//minFilter属性：指定纹理如何缩小。默认值：THREE.LinearMipMapLinearFilter。 THREE.NearestFilter 贴图像素化\r\n            texture.minFilter = THREE.NearestFilter;\r\n            let extraOptions = {};\r\n            if (CubeFactory.DefaultCubeInfo[this.cubeType]) {\r\n                extraOptions = CubeFactory.DefaultCubeInfo[this.cubeType].material;\r\n            }\r\n            this._materials.push(\r\n                new THREE.MeshLambertMaterial({\r\n                    map: texture,\r\n                    fog: true,//当前材质是否受到全局雾化效果器影响\r\n                    ...extraOptions\r\n                }));\r\n        }\r\n    };\r\n\r\n    //构造方块\r\n    buildCube(x, y, z) {\r\n        x = x || 0;\r\n        y = y || 0;\r\n        z = z || 0;\r\n        let cube = new THREE.Mesh(\r\n            new THREE.CubeGeometry(this._cubeSize, this._cubeSize, this._cubeSize),\r\n            this._materials\r\n            // new THREE.MeshLambertMaterial({color: 0x00cc00})\r\n        );\r\n        // cube.receiveShadow = cube.castShadow = true;\r\n        cube.position.x = x + this._cubeSize / 2;\r\n        cube.position.y = y + this._cubeSize / 2;\r\n        cube.position.z = z + this._cubeSize / 2;\r\n        cube.name = \"GrassCube(\" + x + \",\" + y + \",\" + z + \")\";\r\n        return cube;\r\n    }\r\n\r\n    create(x, y, z) {\r\n        this.initImages();\r\n        this.initMaterials();\r\n        return this.buildCube(x, y, z);\r\n    }\r\n}","// 查看信息小控件\r\nimport Stats from \"stats-js\";\r\n\r\nexport default class StatsWindow {\r\n    constructor(canvasElId) {\r\n        StatsWindow._instance;\r\n        this.stats;\r\n        if (StatsWindow._instance) {\r\n            return StatsWindow._instance;\r\n        }\r\n        this.stats = new Stats();\r\n        this.stats.domElement.style.position = 'absolute';\r\n        this.stats.domElement.style.left = '0px';\r\n        this.stats.domElement.style.top = '0px';\r\n        document.getElementById(canvasElId).appendChild(this.stats.domElement);\r\n        StatsWindow._instance = this;\r\n        return this;\r\n    }\r\n}\r\n\r\n","import {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\nimport {Raycaster, Vector2} from 'three';\r\n\r\nconst THREE = {Raycaster, Vector2};\r\nexport default class ShowOrbitControl {\r\n\r\n    constructor(camera, domElement) {\r\n        // ShowOrbitControl._instance;\r\n        // this.controls;\r\n        this.camera = camera;\r\n        if (ShowOrbitControl._instance) {\r\n            return ShowOrbitControl._instance;\r\n        }\r\n        this.controls = new OrbitControls(camera, domElement);\r\n        //动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n        this.controls.dampingFactor = 1;\r\n        //是否允许平移\r\n        this.controls.enablePan = false;\r\n        ShowOrbitControl._instance = this;\r\n        return ShowOrbitControl._instance;\r\n    }\r\n\r\n    initClickFunction(objects, camera) {\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(event, objects, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                let obj = clickedObjects[0].object;\r\n                console.log(\"点击的对象：\" + obj.name);\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(event, objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let mouse = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(mouse, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}\r\n\r\n\r\n","import {PointerLockControls} from 'three/examples/jsm/controls/PointerLockControls'\r\nimport {Vector3, Raycaster, Vector2} from 'three';\r\nimport CubeFactory from \"../objects/CubeFactory\";\r\n\r\nconst THREE = {Vector3, Raycaster, Vector2};\r\nexport default class MCFirstPersonControl {\r\n\r\n    constructor(camera, domElement, objects, scene) {\r\n        // MCFirstPersonControl._instance;\r\n        // this.controls;\r\n        // this.removeBlockTimer;//移除方块计时\r\n        this.camera = camera;\r\n        this.objects = objects;\r\n        this.scene = scene;\r\n        if (MCFirstPersonControl._instance) {\r\n            return MCFirstPersonControl._instance;\r\n        }\r\n        this.checkRay = {//0为负，1为正\r\n            X0: [],\r\n            X1: [],\r\n            Z0: [],\r\n            Z1: [],\r\n\r\n            Y0: [],\r\n            Y1: [],\r\n        };\r\n        this.moveForward = false;\r\n        this.moveBackward = false;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.preRuning = undefined;\r\n        this.isRunning = false;\r\n        this.canJump = false;\r\n        // this.prevTime = performance.now();\r\n        this.velocity = new THREE.Vector3();\r\n        this.direction = new THREE.Vector3();\r\n        this.worldOption = {\r\n            g: 9.0\r\n        };\r\n        this.personOption = {\r\n            height: 1.8,//人物总高度。现有配置不能让人物高于2\r\n            sightHeight: 1.5,//眼部高度。现有配置不能让人物高于2\r\n            jumpHeight: 1.4,    //最大跳跃高度，实际为到此高度\r\n            speedWalk: 5.7,     //最大行走速度\r\n            speedRun: 10,       //最大奔跑速度，连按w两次\r\n            accelerateRateStart: 0.3,//加速时加速比率。正数向前；负数反向；0不会加速；绝对值大于等于1可立即到最大速度\r\n            accelerateRateStop: 0.8,//停止时减速比率。范围[0-1]。0时立即停止，1时不会减速\r\n            thickness: 0.6,//人物的边长\r\n        };\r\n        this.init(camera, domElement);\r\n        MCFirstPersonControl._instance = this;\r\n        return MCFirstPersonControl._instance;\r\n    }\r\n\r\n    init(camera, domElement) {\r\n        this.controls = new PointerLockControls(camera, domElement);\r\n        //增加遮罩层\r\n        {\r\n            let blocker = document.createElement(\"div\");\r\n            blocker.style.position = \"absolute\";\r\n            blocker.style.zIndex = \"100\";\r\n            blocker.style.width = \"100%\";\r\n            blocker.style.height = \"100%\";\r\n            blocker.style.top = \"0\";\r\n            blocker.style.left = \"0\";\r\n            blocker.id = \"blocker\";\r\n            // blocker.style.backgroundColor = \"rgba(0, 0, 0, 0.4)\";\r\n            document.body.append(blocker);\r\n            blocker.addEventListener('click', () => {\r\n                this.controls.lock();\r\n            }, false);\r\n            this.controls.addEventListener('lock', function () {\r\n                blocker.style.display = 'none';\r\n            });\r\n            this.controls.addEventListener('unlock', function () {\r\n                blocker.style.display = 'block';\r\n            });\r\n        }\r\n        //添加准星\r\n        {\r\n            let aimX = document.createElement(\"div\");\r\n            aimX.style.height = \"2px\";\r\n            aimX.style.width = \"20px\";\r\n            setAimStyle(aimX);\r\n            document.body.append(aimX);\r\n            let aimY = document.createElement(\"div\");\r\n            aimY.style.height = \"20px\";\r\n            aimY.style.width = \"2px\";\r\n            setAimStyle(aimY);\r\n            document.body.append(aimY);\r\n        }\r\n        //加按键事件\r\n        let onKeyDown = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    if (this.moveForward) {\r\n                        break;\r\n                    }\r\n                    if (!this.preRuning) {\r\n                        this.preRuning = performance.now();\r\n                    } else {\r\n                        this.isRunning = performance.now() - this.preRuning <= 200;\r\n                        this.preRuning = performance.now();\r\n                    }\r\n                    this.moveForward = true;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    if (this.moveLeft) {\r\n                        break;\r\n                    }\r\n                    this.moveLeft = true;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    if (this.moveBackward) {\r\n                        break;\r\n                    }\r\n                    this.moveBackward = true;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    if (this.moveRight) {\r\n                        break;\r\n                    }\r\n                    this.moveRight = true;\r\n                    break;\r\n\r\n                case 32: // space\r\n                    //7.74是60开平方\r\n                    if (this.canJump) this.velocity.y += Math.sqrt(2 * this.worldOption.g * 7.74 * this.personOption.jumpHeight);\r\n                    this.canJump = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        let onKeyUp = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    this.isRunning = false;\r\n                    this.moveForward = false;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    this.moveLeft = false;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    this.moveBackward = false;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    this.moveRight = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        document.addEventListener('keydown', onKeyDown, false);\r\n        document.addEventListener('keyup', onKeyUp, false);\r\n        //加水平方向碰撞检测  。0,1脚底；2,3中间；4,5头顶\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.X0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(-1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.X1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.Z0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, -1), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.Z1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, 1), 0, 0));\r\n        }\r\n        //加垂直方向碰撞检测\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 1, 0), 0, 0));\r\n        }\r\n        //初始化点击功能\r\n        this.initClickFunction();\r\n    }\r\n\r\n    update(delta) {\r\n        delta = delta || 0.016;\r\n        if (!this.controls.isLocked) {\r\n            this.moveForward = false;\r\n            this.moveBackward = false;\r\n            this.moveLeft = false;\r\n            this.moveRight = false;\r\n        }\r\n        //水平方向移动\r\n        {\r\n            this.direction.z = Number(this.moveForward) - Number(this.moveBackward);\r\n            this.direction.x = Number(this.moveRight) - Number(this.moveLeft);\r\n            this.direction.normalize(); // this ensures consistent movements in all directions\r\n            let velocityXZMax = this.isRunning ? this.personOption.speedRun : this.personOption.speedWalk;\r\n\r\n            if (this.moveForward || this.moveBackward) {\r\n                let velocityZTmp = this.velocity.z + this.direction.z * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityZTmp) < velocityXZMax) {\r\n                    this.velocity.z = velocityZTmp;\r\n                } else {\r\n                    this.velocity.z = this.direction.z * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.z = Math.abs(this.velocity.z) > 1 ? this.velocity.z * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            if (this.moveLeft || this.moveRight) {\r\n                let velocityXTmp = this.velocity.x + this.direction.x * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityXTmp) < velocityXZMax) {\r\n                    this.velocity.x = velocityXTmp;\r\n                } else {\r\n                    this.velocity.x = this.direction.x * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.x = Math.abs(this.velocity.x) > 1 ? this.velocity.x * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            let positionBeforeX = this.controls.getObject().position.x;\r\n            let positionBeforeZ = this.controls.getObject().position.z;\r\n\r\n            this.controls.moveForward(this.velocity.z * delta);\r\n            this.controls.moveRight(this.velocity.x * delta);\r\n\r\n            {//z轴碰撞检测\r\n                let Z0Flat = undefined;//z负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.Z0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z0[i].ray.origin.x = positionBeforeX;//修正为移动前的x轴位置，防止使用位移后的位置检测墙壁\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.Z0[0].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[1].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z0[2].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z0[3].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z0[4].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[5].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.Z0[i].intersectObjects(this.scene.children);\r\n                        if (intersections.length > 0) {\r\n                            let Z0NearFlatTmp = intersections[0].point.z;\r\n                            Z0Flat = Math.max(Z0Flat === undefined ? Z0NearFlatTmp : Z0Flat, Z0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let Z1Flat = undefined;//z正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.Z1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z1[i].ray.origin.x = positionBeforeX;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.Z1[0].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[1].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z1[2].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z1[3].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z1[4].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[5].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.Z1[i].intersectObjects(this.scene.children);\r\n                        if (intersections.length > 0) {\r\n                            let Z1NearFlatTmp = intersections[0].point.z;\r\n                            Z1Flat = Math.min(Z1Flat === undefined ? Z1NearFlatTmp : Z1Flat, Z1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextZ = this.controls.getObject().position.z;\r\n                nextZ = Math.max(Z0Flat === undefined ? nextZ : (Z0Flat + this.personOption.thickness / 2 + 0.001), nextZ);\r\n                nextZ = Math.min(Z1Flat === undefined ? nextZ : (Z1Flat - this.personOption.thickness / 2 - 0.001), nextZ);\r\n                this.controls.getObject().position.z = nextZ\r\n            }\r\n\r\n            {//x轴碰撞检测\r\n                let X0Flat = undefined;//x负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.X0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X0[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.X0[0].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X0[1].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X0[2].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X0[3].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X0[4].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    this.checkRay.X0[5].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.X0[i].intersectObjects(this.scene.children);\r\n                        if (intersections.length > 0) {\r\n                            let X0NearFlatTmp = intersections[0].point.x;\r\n                            X0Flat = Math.max(X0Flat === undefined ? X0NearFlatTmp : X0Flat, X0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let X1Flat = undefined;//x正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.X1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X1[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.X1[0].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[1].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X1[2].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X1[3].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X1[4].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[5].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.X1[i].intersectObjects(this.scene.children);\r\n                        if (intersections.length > 0) {\r\n                            let X1NearFlatTmp = intersections[0].point.x;\r\n                            X1Flat = Math.min(X1Flat === undefined ? X1NearFlatTmp : X1Flat, X1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextX = this.controls.getObject().position.x;\r\n                nextX = Math.max(X0Flat === undefined ? nextX : (X0Flat + this.personOption.thickness / 2 + 0.001), nextX);\r\n                nextX = Math.min(X1Flat === undefined ? nextX : (X1Flat - this.personOption.thickness / 2 - 0.001), nextX);\r\n                this.controls.getObject().position.x = nextX\r\n                // console.log(Z0Flat,Z1Flat,X0Flat,X1Flat)\r\n            }\r\n            // console.log(this.controls.getObject().position.x,this.controls.getObject().position.y,this.controls.getObject().position.z)\r\n        }\r\n        //垂直方向移动+碰撞检测\r\n        {\r\n            let bottomFlatY = undefined;\r\n            //坠落四角检测\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2;\r\n                this.checkRay.Y0[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y0[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y0[i].intersectObjects(this.scene.children);\r\n                    if (intersections.length > 0) {\r\n                        let bottomFlatYTmp = intersections[0].point.y;\r\n                        bottomFlatY = Math.max(bottomFlatY === undefined ? bottomFlatYTmp : bottomFlatY, bottomFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //头顶四角检测\r\n            let topFlatY = undefined;\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2 - 0.01;\r\n                this.checkRay.Y1[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y1[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y1[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let topFlatYTmp = intersections[0].point.y;\r\n                        topFlatY = Math.min(topFlatY === undefined ? topFlatYTmp : topFlatY, topFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //无碰撞时下次垂直位置(相机位置)\r\n            let nextY = this.controls.getObject().position.y + (this.velocity.y * delta);\r\n            if (topFlatY !== undefined) {\r\n                if (nextY > topFlatY - (this.personOption.height - this.personOption.sightHeight)) {\r\n                    nextY = topFlatY - (this.personOption.height - this.personOption.sightHeight)\r\n                    this.velocity.y = 0;\r\n                }\r\n            }\r\n            if (bottomFlatY !== undefined) {\r\n                //下方检测到平台时，脚部不能低于最低平台\r\n                this.controls.getObject().position.y = Math.max(bottomFlatY + this.personOption.sightHeight, nextY);\r\n                if (nextY > bottomFlatY + this.personOption.sightHeight) {\r\n                    this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n                } else {\r\n                    this.velocity.y = 0;\r\n                    this.canJump = true;\r\n                }\r\n            } else {\r\n                //下方未检测到平台时\r\n                this.controls.getObject().position.y = nextY;\r\n                this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n            }\r\n        }\r\n        if (this.controls.getObject().position.y < -2000) {\r\n            this.controls.getObject().position.y = 2000;\r\n            this.controls.getObject().position.x = 0;\r\n            this.controls.getObject().position.z = 0;\r\n        }\r\n    }\r\n\r\n    initClickFunction() {\r\n        window.addEventListener('mouseup', (event) => {\r\n            if (event.button === 1) {\r\n\r\n            }\r\n        });\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(this.scene.children, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                console.log(\"点击对象【\" + clickedObjects[0].object.name + \"】\", clickedObjects[0]);\r\n                if (\r\n                    clickedObjects[0]\r\n                    && clickedObjects[0].distance <= 10\r\n                    && clickedObjects[0].face && clickedObjects[0].face.normal\r\n                    && clickedObjects[0].object && clickedObjects[0].object.position\r\n                ) {\r\n                    let normal = clickedObjects[0].face.normal;\r\n                    let position = clickedObjects[0].object.position;\r\n                    // console.log(normal.x, normal.y, normal.z, position.x, position.y, position.z)\r\n                    let newPosition = {\r\n                        x: normal.x + position.x - 0.5,\r\n                        y: normal.y + position.y - 0.5,\r\n                        z: normal.z + position.z - 0.5,\r\n                    };\r\n                    // console.log(\"newPosition\", newPosition, normal.x + position.x, normal.y + position.y, normal.z + position.z)\r\n                    if (event.button === 2) {//添加方块 右键\r\n                        //TODO 添加方块代码独立，方块不能添加到人物所站的地方\r\n                        let cubeFactory = new CubeFactory(\"GrassDirt\");\r\n                        let cube = cubeFactory.create(newPosition.x, newPosition.y, newPosition.z);\r\n                        this.scene.add(cube);\r\n                        this.objects.push(cube)\r\n                    } else if (event.button === 0) {//删除方块 左键\r\n                        //TODO 改为长按统一方块时才删除\r\n                        console.log(clickedObjects[0].object, this.scene.getObjectByName(clickedObjects[0].object.name))\r\n                        this.scene.remove(this.scene.getObjectById(clickedObjects[0].object.id));\r\n                    }\r\n                }\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\nfunction setAimStyle(aimEl) {\r\n    aimEl.style.position = \"fixed\";\r\n    aimEl.style.left = \"50%\";\r\n    aimEl.style.top = \"50%\";\r\n    aimEl.style.transform = \"translate(-50%,-50%)\";\r\n    aimEl.style.zIndex = \"1\";\r\n    aimEl.style.fontSize = \"100%\";\r\n    aimEl.style.fontWeight = \"bold\";\r\n    aimEl.style.textAlign = \"center\";\r\n    aimEl.style.verticalAlign = \"middle\";\r\n    aimEl.style.lineHeight = \"10px\";\r\n    aimEl.style.fontFamily = \"\\\"Times New Roman\\\",serif\";\r\n    aimEl.style.backgroundColor = \"#E0E0E0\";\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let aim = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    aim.x = 0;\r\n    aim.y = 0;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(aim, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}","import {Scene,FogExp2,CubeTextureLoader,Color,ShaderLib,ShaderMaterial,BackSide,CubeGeometry,AmbientLight,PerspectiveCamera,WebGLRenderer,PCFSoftShadowMap} from 'three';\r\nimport {WEBGL} from \"three/examples/jsm/WebGL.js\";\r\n// import TWEEN from \"@tweenjs/tween.js\";//动作库\r\nimport CubeFactory from \"./utils/objects/CubeFactory.js\";\r\nimport StatsWindow from \"./utils/stats/StatsWindow.js\";\r\nimport ShowOrbitControl from \"./utils/controls/ShowOrbitControl.js\";\r\nimport MCFirstPersonControl from \"./utils/controls/MCFirstPersonControl.js\";\r\n\r\nconst THREE={Scene,FogExp2,CubeTextureLoader,Color,ShaderLib,ShaderMaterial,BackSide,CubeGeometry,AmbientLight,PerspectiveCamera,WebGLRenderer,PCFSoftShadowMap};\r\n\r\nlet enableShadow = false;\r\n\r\nif (WEBGL.isWebGLAvailable() === false) {\r\n    document.body.appendChild(WEBGL.getWebGLErrorMessage());\r\n}\r\n\r\nlet canvasEL = document.getElementById(\"canvas-frame\");\r\nlet width = canvasEL.offsetWidth;\r\nlet height = canvasEL.offsetHeight;\r\n\r\n// 舞台*\r\nlet sceneOption = {\r\n    backgroundColor: 0x87CEEB\r\n};\r\nlet scene = (function initScene() {\r\n    let scene = new THREE.Scene();\r\n    scene.name = 'SCENE';\r\n    scene.fog = new THREE.FogExp2(sceneOption.backgroundColor, 0.001);//雾效果\r\n    //增加天空盒\r\n    (function skyBox(backgroundType) {\r\n        backgroundType = backgroundType || 1;\r\n        let textureCube = new THREE.CubeTextureLoader().load([\r\n            './assets/img/1.png',\r\n            './assets/img/2.png',\r\n            './assets/img/3.png',\r\n            './assets/img/4.png',\r\n            './assets/img/5.png',\r\n            './assets/img/6.png'\r\n        ]);\r\n        if (backgroundType === 1) {//使用场景背景添加\r\n            scene.background = new THREE.Color(sceneOption.backgroundColor);\r\n        } else if (backgroundType === 2) {\r\n            scene.background = textureCube\r\n        } else {//使用盒子添加\r\n            //着色器\r\n            let cubeShader = THREE.ShaderLib[\"cube\"];\r\n            cubeShader.uniforms[\"tCube\"].value = textureCube;\r\n            let material = new THREE.ShaderMaterial({\r\n                fragmentShader: cubeShader.fragmentShader,  //定义自己的片元着色器\r\n                vertexShader: cubeShader.vertexShader,  //定义自己的顶点着色器\r\n                uniforms: cubeShader.uniforms,  //给着色器传入uniform变量的值\r\n                depthWrite: false,  //决定这个材质是否影响WebGL的深度缓存\r\n                side: THREE.BackSide,  //侧面：反面\r\n            });\r\n            //创建方盒子\r\n            let cubeWithPic = new THREE.Mesh(new THREE.CubeGeometry(1000000, 1000000, 1000000), material);\r\n            scene.add(cubeWithPic);\r\n        }\r\n    })(1);\r\n    return scene;\r\n})();\r\n\r\nlet lightCurrentIntensity = 1;\r\nlet lightValueChangeDirection = true;\r\nlet lightHighIntensity = 1;\r\nlet lightLowIntensity = 0.4;\r\n\r\nfunction getAmbientLightIntensity() {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity);\r\n}\r\n\r\n// 光源*\r\nlet lightAmbient;\r\n(function initDirectionalLight() {\r\n    lightAmbient = new THREE.AmbientLight(0xffffff, getAmbientLightIntensity());//平行光。制造明暗面，并不使方块变色严重\r\n    scene.add(lightAmbient);\r\n})();\r\n\r\n// 相机*\r\nlet camera;\r\n(function initCamera() {\r\n    camera = new THREE.PerspectiveCamera(45, width / height, 0.01, 100000);//最远1e10\r\n    camera.name = \"CAMERA\";\r\n    camera.position.x = 0;\r\n    camera.position.y = 10;\r\n    camera.position.z = 0;\r\n})();\r\n\r\n// 渲染器*\r\nlet renderer;\r\n(function initRenderer() {\r\n    renderer = new THREE.WebGLRenderer({\r\n        antialias: true//是否开启反锯齿\r\n    });\r\n    renderer.name = 'RENDERER';\r\n    renderer.shadowMap.enabled = enableShadow;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;//更柔和的影子，需要的性能更高\r\n    renderer.setSize(width, height);\r\n    document.getElementById('canvas-frame').appendChild(renderer.domElement);\r\n    renderer.setClearColor(0xFFFFFF, 1.0);//背景颜色\r\n})();\r\n\r\n// 相机控制器\r\nlet controls;\r\nlet controlsType = \"MCFirstPersonControl\";\r\nlet objects = [];\r\n(function initControls() {\r\n    switch (controlsType) {\r\n        case \"ShowOrbitControl\":\r\n            let showOrbitControl = new ShowOrbitControl(camera, renderer.domElement);\r\n            showOrbitControl.initClickFunction(scene.children);\r\n            controls = showOrbitControl.controls;\r\n            break;\r\n        case \"MCFirstPersonControl\":\r\n            let mcFirstPersonControl = new MCFirstPersonControl(camera, renderer.domElement, objects, scene);\r\n            controls = mcFirstPersonControl;\r\n            break;\r\n    }\r\n})();\r\n\r\n\r\n//-----------以下为物体添加代码---------------------------------------------------------------\r\n// import * as AddXYZLing from './utils/objects/AddXYZLine';\r\n// AddXYZLing.buildXYZLine(scene);\r\n\r\nfunction changeLight() {\r\n    lightAmbient.intensity = getAmbientLightIntensity();\r\n    // lightDirectional.intensity = getDirectionalLightIntensity();\r\n    if (lightValueChangeDirection) {\r\n        if (lightCurrentIntensity >= lightLowIntensity - (lightHighIntensity - lightLowIntensity)) {\r\n            lightCurrentIntensity -= 0.002;\r\n        } else {\r\n            lightValueChangeDirection = false;\r\n        }\r\n    } else {\r\n        if (lightCurrentIntensity <= lightHighIntensity + (lightHighIntensity - lightLowIntensity)) {\r\n            lightCurrentIntensity += 0.002;\r\n        } else {\r\n            if (lightCurrentIntensity > 1.5) {\r\n                lightValueChangeDirection = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n(function addGrassCubes() {\r\n    let cubeFactory = new CubeFactory(\"GrassDirt\");\r\n    {\r\n        let testBlock = [];\r\n        let width = 10;\r\n        //底板\r\n        for (let x = -width; x < width; x++) {\r\n            for (let z = -width; z < width; z++) {\r\n                testBlock.push([x, -1, z]);\r\n            }\r\n        }\r\n        //阶梯\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                for (let y = 0; y < 5; y++) {\r\n                    if (y >= x) {\r\n                        testBlock.push([x - 7, y - x, z - 7])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //土堆\r\n        let mountainHeight = 4;\r\n        for (let y = 0; y < mountainHeight; y++) {\r\n            for (let x = y; x < 2 * mountainHeight - y; x++) {\r\n                for (let z = y; z < 2 * mountainHeight - y; z++) {\r\n                    testBlock.push([x - 5, y, z + 1])\r\n                }\r\n            }\r\n        }\r\n        //碰撞检测用\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                if (x !== 2 || z !== 2) {\r\n                    testBlock.push([x, 0, z-5]);\r\n                }\r\n            }\r\n        }\r\n        testBlock.push([0, 1, -5]);\r\n        testBlock.push([3, 3, -5]);\r\n        testBlock.push([2, 3, -5]);\r\n        testBlock.push([3, 3, -4]);\r\n        testBlock.push([2, 3, -4]);\r\n        testBlock.push([3, 3, -6]);\r\n        testBlock.push([2, 3, -6]);\r\n        testBlock.push([3, 3, -7]);\r\n        testBlock.push([2, 3, -7]);\r\n        testBlock.push([3, 2, -8]);\r\n        testBlock.push([2, 2, -8]);\r\n        testBlock.push([5, 2, -4]);\r\n        testBlock.push([4, 2, -4]);\r\n        testBlock.push([0, 1, -5]);\r\n\r\n        for (let cubePosition of testBlock) {\r\n            let cube = cubeFactory.create(cubePosition[0], cubePosition[1], cubePosition[2]);\r\n            scene.add(cube);\r\n            objects.push(cube);\r\n        }\r\n    }\r\n})();\r\n\r\nlet prevTime = performance.now();\r\n(function animate() {\r\n    requestAnimationFrame(animate);\r\n    let time = performance.now();\r\n    let delta = (time - prevTime) / 1000;\r\n    prevTime = time;\r\n    // TWEEN.update(delta);\r\n    controls.update(delta);\r\n    renderer.render(scene, camera);\r\n    new StatsWindow(\"canvas-frame\").stats.update(delta);\r\n    changeLight();\r\n})();\r\n\r\n//使渲染器与相机随窗口大小改变适应。自适应窗口大小\r\nwindow.onresize = function () {\r\n    width = canvasEL.offsetWidth;\r\n    height = canvasEL.offsetHeight;\r\n    //更新相机视角比例\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(width, height);\r\n};\r\nwindow.onload = () => {\r\n    playBGM();\r\n};\r\nlet audioBGM;\r\n\r\nfunction playBGM() {\r\n    let currentIndex = 0;\r\n    let arr = [//把需要播放的歌曲从后往前排，这里已添加两首音乐，可继续添加多个音乐\r\n        \"./assets/sound/calm1.ogg\",\r\n        \"./assets/sound/calm2.ogg\",\r\n        \"./assets/sound/calm3.ogg\",\r\n        \"./assets/sound/hal1.ogg\",\r\n        \"./assets/sound/hal2.ogg\",\r\n        \"./assets/sound/hal3.ogg\",\r\n        \"./assets/sound/hal4.ogg\",\r\n    ];\r\n    audioBGM = new Audio();\r\n    audioBGM.preload = \"true\";\r\n    audioBGM.controls = true;\r\n    audioBGM.autoplay = true;\r\n    // audioBGM.muted = true;\r\n    audioBGM.hidden = true;\r\n    audioBGM.style.display = \"none\";\r\n    audioBGM.style.position = \"fixed\";\r\n    audioBGM.style.top = \"0\";\r\n    audioBGM.style.right = \"0\";\r\n    audioBGM.style.zIndex = \"101\";\r\n    audioBGM.loop = false;//禁止循环，否则无法触发ended事件\r\n    audioBGM.src = arr[currentIndex];         //每次读数组最后一个元素\r\n    audioBGM.addEventListener('ended', playEndedHandler, false);\r\n    document.addEventListener('click', playHandler, false);\r\n    // audioBGM.play();\r\n    document.body.appendChild(audioBGM);\r\n\r\n    function playEndedHandler() {\r\n        currentIndex++;\r\n        if (currentIndex >= arr.length) {\r\n            currentIndex = 0;\r\n        }\r\n        audioBGM.src = arr[currentIndex];\r\n        audioBGM.play();\r\n        // myAudio.removeEventListener('ended', playEndedHandler, false);\r\n    }\r\n\r\n    function playHandler() {\r\n        audioBGM.play();\r\n        document.removeEventListener('click', playHandler, false);\r\n    }\r\n}"],"sourceRoot":""}