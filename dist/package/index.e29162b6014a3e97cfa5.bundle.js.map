{"version":3,"sources":["webpack:///./src/utils/setting/GlobalSetting.js","webpack:///./src/utils/objects/cube/CubeFactory.js","webpack:///./src/utils/stats/StatsWindow.js","webpack:///./src/utils/basic/Light.js","webpack:///./src/utils/controls/ShowOrbitControl.js","webpack:///./src/utils/objects/cube/DefaultCube.js","webpack:///./src/utils/controls/MCFirstPersonControl.js","webpack:///./src/utils/objects/AddXYZLine.js","webpack:///./src/index.js","webpack:///./src/utils/basic/Scene.js","webpack:///./src/utils/basic/Camera.js","webpack:///./src/utils/basic/Renderer.js","webpack:///./src/utils/controls/ControlBuilder.js","webpack:///./src/utils/sound/Bgm.js"],"names":["enableShadow","defaultCube","_instanceObj","key","this","cubeOptions","_materials","_materialsMap","_geometry","undefined","_cubeSize","initMaterials","initGeometry","length","textureLoader","textureList","imageUrl","images","texture","load","generateMipmaps","minFilter","magFilter","push","materialList","map","vertexColors","side","fog","materialParameters","imageSet","x","y","z","cube","receiveShadow","castShadow","GlobalSetting","position","name","canvasElId","_instance","stats","domElement","style","left","top","document","getElementById","appendChild","getAmbientLightIntensity","lightCurrentIntensity","lightHighIntensity","lightLowIntensity","Math","min","max","getDirectionalLightIntensity","camera","controls","OrbitControls","dampingFactor","enablePan","objects","window","addEventListener","event","clickedObjects","raycaster","mouse","clientX","innerWidth","clientY","innerHeight","setFromCamera","intersectObjects","getClickedObject","obj","object","console","log","grass","cobblestone","cobblestone_mossy","stone","stone_slab","planks_birch","scene","checkRay","X0","X1","Z0","Z1","Y0","Y1","moveForward","moveBackward","moveLeft","moveRight","preRuning","isRunning","canJump","velocity","direction","worldOption","g","personOption","height","sightHeight","jumpHeight","speedWalk","speedRun","accelerateRateStart","accelerateRateStop","thickness","init","PointerLockControls","blocker","createElement","zIndex","width","id","body","append","lock","display","aimX","setAimStyle","aimY","keyCode","performance","now","sqrt","i","initClickFunction","delta","isLocked","Number","normalize","velocityXZMax","velocityZTmp","abs","velocityXTmp","positionBeforeX","getObject","positionBeforeZ","Z0Flat","ray","origin","copy","rayMoveX","intersections","Z0NearFlatTmp","point","Z1Flat","Z1NearFlatTmp","nextZ","X0Flat","X0NearFlatTmp","X1Flat","X1NearFlatTmp","nextX","bottomFlatY","rayMove","bottomFlatYTmp","topFlatY","topFlatYTmp","nextY","button","aim","children","distance","face","normal","newPosition","DefaultCube","buildCube","add","getObjectByName","index","findIndex","e","splice","remove","getObjectById","aimEl","transform","fontSize","fontWeight","textAlign","verticalAlign","lineHeight","fontFamily","backgroundColor","buildLine","x1","y1","z1","x2","y2","z2","color","startPoint","endPoint","geometry","vertices","material","isWebGLAvailable","getWebGLErrorMessage","lightDirectional","canvasEL","backgroundType","textureCube","background","cubeShader","uniforms","value","fragmentShader","vertexShader","depthWrite","cubeWithPic","initScene","lightAmbient","light","setHex","intensity","initAmbientLight","shadow","radius","initDirectionalLight","fov","near","far","initCamera","aspect","offsetWidth","offsetHeight","updateProjectionMatrix","renderer","antialias","shadowMap","enabled","setClearColor","initRenderer","setSize","setPixelRatio","devicePixelRatio","controlsType","showOrbitControl","initControls","lines","lightOption","current","low","high","becomeHigher","cubeFactory","testBlock","mountainHeight","cubeInfo","prevTime","animate","requestAnimationFrame","time","update","render","changeLight","onresize","onload","audioBGM","currentIndex","arr","Audio","preload","autoplay","hidden","right","loop","src","play","playHandler","removeEventListener","initBGMPlayer"],"mappings":"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","file":"package/index.e29162b6014a3e97cfa5.bundle.js","sourcesContent":["export default {\r\n    enableShadow:false\r\n}","import * as THREE from 'three';\r\nimport GlobalSetting from \"../../setting/GlobalSetting\";\r\n\r\nexport default class CubeFactory {\r\n    constructor(defaultCube) {\r\n        if (CubeFactory._instanceObj && CubeFactory._instanceObj[defaultCube.key]) {\r\n            return CubeFactory._instanceObj[defaultCube.key];\r\n        }\r\n        this.cubeOptions = defaultCube;\r\n        this._materials = [];\r\n        this._materialsMap = [];\r\n        this._geometry = undefined;\r\n        this._cubeSize = 1;//方块边长，默认1\r\n        this.initMaterials();\r\n        this.initGeometry();\r\n        CubeFactory._instanceObj = {\r\n            [defaultCube.key]: this\r\n        }\r\n    }\r\n\r\n    //初始化形状\r\n    initGeometry() {\r\n        if (this._geometry) {\r\n            return;\r\n        }\r\n        this._geometry = new THREE.CubeGeometry(this._cubeSize, this._cubeSize, this._cubeSize)\r\n    }\r\n\r\n    //初始化材质\r\n    initMaterials() {\r\n        if (!this.cubeOptions.key) {\r\n            throw '\"key\" in cubeType is undefined'\r\n        }\r\n        if (this._materialsMap) {\r\n            this._materials = this._materialsMap[this.cubeOptions.key];\r\n        }\r\n        if (this._materials && this._materials.length !== 0) {\r\n            return;\r\n        }\r\n        this._materials = [];\r\n        let textureLoader = new THREE.TextureLoader();\r\n        let textureList = [];\r\n        for (let imageUrl of this.cubeOptions.images) {\r\n            let texture = textureLoader.load(imageUrl);\r\n            texture.generateMipmaps = true;//生成纹理，用于相关滤镜，根据远近自动调整贴图质量\r\n            texture.minFilter = THREE.NearestMipMapNearestFilter;//minFilter属性：指定纹理如何缩小。默认值：THREE.LinearMipMapLinearFilter。\r\n            texture.magFilter = THREE.NearestFilter;//magFilter属性：指定纹理如何放大。THREE.NearestFilter 贴图像素化\r\n            textureList.push(texture);\r\n        }\r\n        let materialList = [];\r\n        for (let texture of textureList) {\r\n            materialList.push(\r\n                new THREE.MeshLambertMaterial({\r\n                    // color:0x4F9C1A,\r\n                    map: texture,\r\n                    vertexColors: THREE.VertexColors,\r\n                    side: THREE.DoubleSide,\r\n                    fog: true,//当前材质是否受到全局雾化效果器影响\r\n                    ...this.cubeOptions.materialParameters\r\n                })\r\n            );\r\n        }\r\n        for (let key of this.cubeOptions.imageSet) {\r\n            this._materials.push(materialList[key]);\r\n        }\r\n        this._materialsMap[this.cubeOptions.key] = this._materials;\r\n    };\r\n\r\n\r\n    //构造方块\r\n    buildCube(x, y, z, defaultCube) {\r\n        if (defaultCube) {\r\n            this.cubeOptions = defaultCube;\r\n            this.initMaterials();\r\n        }\r\n        x = x || 0;\r\n        y = y || 0;\r\n        z = z || 0;\r\n        let cube = new THREE.Mesh(\r\n            this._geometry,\r\n            this._materials\r\n            // new THREE.MeshLambertMaterial({color: 0x00cc00})\r\n        );\r\n        cube.receiveShadow = cube.castShadow = GlobalSetting.enableShadow;\r\n        cube.position.x = x + this._cubeSize / 2;\r\n        cube.position.y = y + this._cubeSize / 2;\r\n        cube.position.z = z + this._cubeSize / 2;\r\n        cube.name = this.cubeOptions.key + \"(\" + x + \",\" + y + \",\" + z + \")\";\r\n        return cube;\r\n    }\r\n}","// 查看信息小控件\r\nimport Stats from \"stats-js\";\r\nexport default class StatsWindow {\r\n    constructor(canvasElId) {\r\n        if (StatsWindow._instance) {\r\n            return StatsWindow._instance;\r\n        }\r\n        let stats;\r\n        stats = new Stats();\r\n        stats.domElement.style.position = 'absolute';\r\n        stats.domElement.style.left = '0px';\r\n        stats.domElement.style.top = '0px';\r\n        document.getElementById(canvasElId).appendChild(stats.domElement);\r\n        StatsWindow._instance = this;\r\n        this.stats=stats;\r\n        return this;\r\n    }\r\n}\r\n\r\n","import * as THREE from \"three\";\r\nimport GlobalSetting from \"../setting/GlobalSetting\";\r\n\r\nexport const lightHighIntensity = 1;\r\nexport const lightLowIntensity = 0.4;\r\nexport const lightCurrentIntensity = 1;\r\nexport const lightValueBecomeHigher = true;\r\n\r\nexport function initAmbientLight() {\r\n    let light = new THREE.AmbientLight();//环境光\r\n    light.castShadow = false;\r\n    light.color = new THREE.Color().setHex(0xffffff);\r\n    light.intensity = getAmbientLightIntensity();\r\n    return light;\r\n}\r\n\r\nexport function getAmbientLightIntensity(lightCurrentIntensity, lightHighIntensity, lightLowIntensity) {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity);\r\n}\r\n\r\nexport function initDirectionalLight() {\r\n    let light = new THREE.DirectionalLight();//环境光\r\n    light.castShadow = GlobalSetting.enableShadow;\r\n    light.color = new THREE.Color().setHex(0xffffff);\r\n    light.intensity = getDirectionalLightIntensity();\r\n    light.shadow.radius = 512;\r\n    light.position.x = 10;\r\n    light.position.y = -10;\r\n    light.position.z = 10;\r\n    return light;\r\n}\r\n\r\nexport function getDirectionalLightIntensity(lightCurrentIntensity, lightHighIntensity, lightLowIntensity) {\r\n    return Math.min(Math.max(lightLowIntensity, lightCurrentIntensity), lightHighIntensity) / 4;\r\n}\r\n","import {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\nimport * as THREE from 'three';\r\nexport default class ShowOrbitControl {\r\n\r\n    constructor(camera, domElement) {\r\n        // ShowOrbitControl._instance;\r\n        // this.controls;\r\n        this.camera = camera;\r\n        if (ShowOrbitControl._instance) {\r\n            return ShowOrbitControl._instance;\r\n        }\r\n        this.controls = new OrbitControls(camera, domElement);\r\n        //动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n        this.controls.dampingFactor = 1;\r\n        //是否允许平移\r\n        this.controls.enablePan = false;\r\n        ShowOrbitControl._instance = this;\r\n        return ShowOrbitControl._instance;\r\n    }\r\n\r\n    initClickFunction(objects, camera) {\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(event, objects, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                let obj = clickedObjects[0].object;\r\n                console.log(\"点击的对象：\" + obj.name);\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(event, objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let mouse = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(mouse, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}\r\n\r\n\r\n","//预设方块信息\r\nexport default {\r\n    grass: {\r\n        key: 'grass',\r\n        images: [\r\n            './assets/img/blocks/grass_side.png',\r\n            './assets/img/blocks/grass_top_green.png',\r\n            './assets/img/blocks/dirt.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 2, 0, 0],\r\n        materialParameters: {}\r\n    },\r\n    // Cloud: {\r\n    //     key: 'Cloud',\r\n    //     images: [\r\n    //         './assets/img/blocks/grass_side.png',\r\n    //         './assets/img/blocks/grass_top_green.png',\r\n    //         './assets/img/blocks/dirt.png',\r\n    //     ],\r\n    //     imageSet: [0, 0, 1, 2, 0, 0],\r\n    //     materialParameters: {\r\n    //         transparent: true,//透明\r\n    //         opacity: 0.2,//透明度\r\n    //     }\r\n    // },\r\n    cobblestone: {\r\n        key: 'Cobblestone',\r\n        images: [\r\n            './assets/img/blocks/cobblestone.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {}\r\n    },\r\n    cobblestone_mossy: {\r\n        key: 'cobblestone_mossy',\r\n        images: [\r\n            './assets/img/blocks/cobblestone_mossy.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {}\r\n    },\r\n    stone: {\r\n        key: 'Stone',\r\n        images: [\r\n            './assets/img/blocks/stone.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {}\r\n    },\r\n    stone_slab: {\r\n        key: 'stone_slab',\r\n        images: [\r\n            './assets/img/blocks/stone_slab_side.png',\r\n            './assets/img/blocks/stone_slab_top.png',\r\n        ],\r\n        imageSet: [0, 0, 1, 1, 0, 0],\r\n        materialParameters: {}\r\n    },\r\n    planks_birch: {\r\n        key: 'planks_birch',\r\n        images: [\r\n            './assets/img/blocks/planks_birch.png',\r\n        ],\r\n        imageSet: [0, 0, 0, 0, 0, 0],\r\n        materialParameters: {}\r\n    },\r\n}","import {PointerLockControls} from 'three/examples/jsm/controls/PointerLockControls'\r\nimport CubeFactory from \"../objects/cube/CubeFactory\";\r\nimport * as THREE from 'three';\r\nimport DefaultCube from '../objects/cube/DefaultCube'\r\nexport default class MCFirstPersonControl {\r\n\r\n    constructor(camera, domElement, objects, scene) {\r\n        // MCFirstPersonControl._instance;\r\n        // this.controls;\r\n        // this.removeBlockTimer;//移除方块计时\r\n        this.camera = camera;\r\n        this.objects = objects;\r\n        this.scene = scene;\r\n        if (MCFirstPersonControl._instance) {\r\n            return MCFirstPersonControl._instance;\r\n        }\r\n        this.checkRay = {//0为负，1为正\r\n            X0: [],\r\n            X1: [],\r\n            Z0: [],\r\n            Z1: [],\r\n\r\n            Y0: [],\r\n            Y1: [],\r\n        };\r\n        this.moveForward = false;\r\n        this.moveBackward = false;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.preRuning = undefined;\r\n        this.isRunning = false;\r\n        this.canJump = false;\r\n        // this.prevTime = performance.now();\r\n        this.velocity = new THREE.Vector3();\r\n        this.direction = new THREE.Vector3();\r\n        this.worldOption = {\r\n            g: 9.0\r\n        };\r\n        this.personOption = {\r\n            height: 1.8,//人物总高度。现有配置不能让人物高于2\r\n            sightHeight: 1.5,//眼部高度。现有配置不能让人物高于2\r\n            jumpHeight: 1.4,    //最大跳跃高度，实际为到此高度\r\n            speedWalk: 5.7,     //最大行走速度\r\n            speedRun: 10,       //最大奔跑速度，连按w两次\r\n            accelerateRateStart: 0.3,//加速时加速比率。正数向前；负数反向；0不会加速；绝对值大于等于1可立即到最大速度\r\n            accelerateRateStop: 0.8,//停止时减速比率。范围[0-1]。0时立即停止，1时不会减速\r\n            thickness: 0.6,//人物的边长\r\n        };\r\n        this.init(camera, domElement);\r\n        MCFirstPersonControl._instance = this;\r\n        return MCFirstPersonControl._instance;\r\n    }\r\n\r\n    init(camera, domElement) {\r\n        this.controls = new PointerLockControls(camera, domElement);\r\n        //增加遮罩层\r\n        {\r\n            let blocker = document.createElement(\"div\");\r\n            blocker.style.position = \"absolute\";\r\n            blocker.style.zIndex = \"100\";\r\n            blocker.style.width = \"100%\";\r\n            blocker.style.height = \"100%\";\r\n            blocker.style.top = \"0\";\r\n            blocker.style.left = \"0\";\r\n            blocker.id = \"blocker\";\r\n            // blocker.style.backgroundColor = \"rgba(0, 0, 0, 0.4)\";\r\n            document.body.append(blocker);\r\n            blocker.addEventListener('click', () => {\r\n                this.controls.lock();\r\n            }, false);\r\n            this.controls.addEventListener('lock', function () {\r\n                blocker.style.display = 'none';\r\n            });\r\n            this.controls.addEventListener('unlock', function () {\r\n                blocker.style.display = 'block';\r\n            });\r\n        }\r\n        //添加准星\r\n        {\r\n            let aimX = document.createElement(\"div\");\r\n            aimX.style.height = \"2px\";\r\n            aimX.style.width = \"20px\";\r\n            setAimStyle(aimX);\r\n            document.body.append(aimX);\r\n            let aimY = document.createElement(\"div\");\r\n            aimY.style.height = \"20px\";\r\n            aimY.style.width = \"2px\";\r\n            setAimStyle(aimY);\r\n            document.body.append(aimY);\r\n        }\r\n        //加按键事件\r\n        let onKeyDown = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    if (this.moveForward) {\r\n                        break;\r\n                    }\r\n                    if (!this.preRuning) {\r\n                        this.preRuning = performance.now();\r\n                    } else {\r\n                        this.isRunning = performance.now() - this.preRuning <= 200;\r\n                        this.preRuning = performance.now();\r\n                    }\r\n                    this.moveForward = true;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    if (this.moveLeft) {\r\n                        break;\r\n                    }\r\n                    this.moveLeft = true;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    if (this.moveBackward) {\r\n                        break;\r\n                    }\r\n                    this.moveBackward = true;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    if (this.moveRight) {\r\n                        break;\r\n                    }\r\n                    this.moveRight = true;\r\n                    break;\r\n\r\n                case 32: // space\r\n                    //7.74是60开平方\r\n                    if (this.canJump) this.velocity.y += Math.sqrt(2 * this.worldOption.g * 7.74 * this.personOption.jumpHeight);\r\n                    this.canJump = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        let onKeyUp = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38: // up\r\n                case 87: // w\r\n                    this.isRunning = false;\r\n                    this.moveForward = false;\r\n                    break;\r\n\r\n                case 37: // left\r\n                case 65: // a\r\n                    this.moveLeft = false;\r\n                    break;\r\n\r\n                case 40: // down\r\n                case 83: // s\r\n                    this.moveBackward = false;\r\n                    break;\r\n\r\n                case 39: // right\r\n                case 68: // d\r\n                    this.moveRight = false;\r\n                    break;\r\n\r\n            }\r\n\r\n        };\r\n        document.addEventListener('keydown', onKeyDown, false);\r\n        document.addEventListener('keyup', onKeyUp, false);\r\n        //加水平方向碰撞检测  。0,1脚底；2,3中间；4,5头顶\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.X0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(-1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.X1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(1, 0, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.Z0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, -1), 0, 0));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            this.checkRay.Z1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 0, 1), 0, 0));\r\n        }\r\n        //加垂直方向碰撞检测\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y0.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 0));\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            this.checkRay.Y1.push(new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, 1, 0), 0, 0));\r\n        }\r\n        //初始化点击功能\r\n        this.initClickFunction();\r\n    }\r\n\r\n    update(delta) {\r\n        console.log(this.objects.length)\r\n        delta = delta || 0.016;\r\n        if (!this.controls.isLocked) {\r\n            this.moveForward = false;\r\n            this.moveBackward = false;\r\n            this.moveLeft = false;\r\n            this.moveRight = false;\r\n        }\r\n        //水平方向移动\r\n        {\r\n            this.direction.z = Number(this.moveForward) - Number(this.moveBackward);\r\n            this.direction.x = Number(this.moveRight) - Number(this.moveLeft);\r\n            this.direction.normalize(); // this ensures consistent movements in all directions\r\n            let velocityXZMax = this.isRunning ? this.personOption.speedRun : this.personOption.speedWalk;\r\n\r\n            if (this.moveForward || this.moveBackward) {\r\n                let velocityZTmp = this.velocity.z + this.direction.z * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityZTmp) < velocityXZMax) {\r\n                    this.velocity.z = velocityZTmp;\r\n                } else {\r\n                    this.velocity.z = this.direction.z * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.z = Math.abs(this.velocity.z) > 1 ? this.velocity.z * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            if (this.moveLeft || this.moveRight) {\r\n                let velocityXTmp = this.velocity.x + this.direction.x * velocityXZMax * this.personOption.accelerateRateStart;\r\n                if (Math.abs(velocityXTmp) < velocityXZMax) {\r\n                    this.velocity.x = velocityXTmp;\r\n                } else {\r\n                    this.velocity.x = this.direction.x * velocityXZMax;\r\n                }\r\n            } else {\r\n                this.velocity.x = Math.abs(this.velocity.x) > 1 ? this.velocity.x * (this.personOption.accelerateRateStop) : 0;\r\n            }\r\n\r\n            let positionBeforeX = this.controls.getObject().position.x;\r\n            let positionBeforeZ = this.controls.getObject().position.z;\r\n\r\n            this.controls.moveForward(this.velocity.z * delta);\r\n            this.controls.moveRight(this.velocity.x * delta);\r\n\r\n            {//z轴碰撞检测\r\n                let Z0Flat = undefined;//z负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.Z0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z0[i].ray.origin.x = positionBeforeX;//修正为移动前的x轴位置，防止使用位移后的位置检测墙壁\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.Z0[0].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[1].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z0[2].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z0[3].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z0[4].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z0[5].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.Z0[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let Z0NearFlatTmp = intersections[0].point.z;\r\n                            Z0Flat = Math.max(Z0Flat === undefined ? Z0NearFlatTmp : Z0Flat, Z0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let Z1Flat = undefined;//z正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.Z1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.Z1[i].ray.origin.x = positionBeforeX;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.Z1[0].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[1].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.Z1[2].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.Z1[3].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.Z1[4].ray.origin.x += rayMoveX;\r\n                    this.checkRay.Z1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.Z1[5].ray.origin.x -= rayMoveX;\r\n                    this.checkRay.Z1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.Z1[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let Z1NearFlatTmp = intersections[0].point.z;\r\n                            Z1Flat = Math.min(Z1Flat === undefined ? Z1NearFlatTmp : Z1Flat, Z1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextZ = this.controls.getObject().position.z;\r\n                nextZ = Math.max(Z0Flat === undefined ? nextZ : (Z0Flat + this.personOption.thickness / 2 + 0.001), nextZ);\r\n                nextZ = Math.min(Z1Flat === undefined ? nextZ : (Z1Flat - this.personOption.thickness / 2 - 0.001), nextZ);\r\n                this.controls.getObject().position.z = nextZ\r\n            }\r\n\r\n            {//x轴碰撞检测\r\n                let X0Flat = undefined;//x负轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.X0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X0[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.X0[0].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X0[1].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X0[2].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X0[3].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X0[4].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X0[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    this.checkRay.X0[5].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X0[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.051);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.X0[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let X0NearFlatTmp = intersections[0].point.x;\r\n                            X0Flat = Math.max(X0Flat === undefined ? X0NearFlatTmp : X0Flat, X0NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let X1Flat = undefined;//x正轴碰撞检测\r\n                {\r\n                    for (let i = 0; i < 6; i++) {\r\n                        this.checkRay.X1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                        this.checkRay.X1[i].ray.origin.z = positionBeforeZ;\r\n                    }\r\n                    let rayMoveX = this.personOption.thickness / 2;\r\n                    this.checkRay.X1[0].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[0].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[1].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[1].ray.origin.y -= (this.personOption.sightHeight - 0.05);\r\n\r\n                    this.checkRay.X1[2].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[2].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n                    this.checkRay.X1[3].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[3].ray.origin.y -= (this.personOption.sightHeight - this.personOption.height / 2);\r\n\r\n                    this.checkRay.X1[4].ray.origin.z += rayMoveX;\r\n                    this.checkRay.X1[4].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    this.checkRay.X1[5].ray.origin.z -= rayMoveX;\r\n                    this.checkRay.X1[5].ray.origin.y += (this.personOption.height - this.personOption.sightHeight - 0.05);\r\n                    for (let i = 0; i < 6; i++) {\r\n                        let intersections = this.checkRay.X1[i].intersectObjects(this.objects);\r\n                        if (intersections.length > 0) {\r\n                            let X1NearFlatTmp = intersections[0].point.x;\r\n                            X1Flat = Math.min(X1Flat === undefined ? X1NearFlatTmp : X1Flat, X1NearFlatTmp);\r\n                        }\r\n                    }\r\n                }\r\n                let nextX = this.controls.getObject().position.x;\r\n                nextX = Math.max(X0Flat === undefined ? nextX : (X0Flat + this.personOption.thickness / 2 + 0.001), nextX);\r\n                nextX = Math.min(X1Flat === undefined ? nextX : (X1Flat - this.personOption.thickness / 2 - 0.001), nextX);\r\n                this.controls.getObject().position.x = nextX\r\n                // console.log(Z0Flat,Z1Flat,X0Flat,X1Flat)\r\n            }\r\n            // console.log(this.controls.getObject().position.x,this.controls.getObject().position.y,this.controls.getObject().position.z)\r\n        }\r\n        //垂直方向移动+碰撞检测\r\n        {\r\n            let bottomFlatY = undefined;\r\n            //坠落四角检测\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y0[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2;\r\n                this.checkRay.Y0[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y0[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y0[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y0[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y0[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y0[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let bottomFlatYTmp = intersections[0].point.y;\r\n                        bottomFlatY = Math.max(bottomFlatY === undefined ? bottomFlatYTmp : bottomFlatY, bottomFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //头顶四角检测\r\n            let topFlatY = undefined;\r\n            {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.checkRay.Y1[i].ray.origin.copy(this.controls.getObject().position);//设置射线原点在摄像机位置，即人物眼睛位置\r\n                }\r\n                let rayMove = this.personOption.thickness / 2 - 0.01;\r\n                this.checkRay.Y1[0].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[0].ray.origin.z -= rayMove;\r\n                this.checkRay.Y1[1].ray.origin.x += rayMove;\r\n                this.checkRay.Y1[1].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[2].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[2].ray.origin.z += rayMove;\r\n                this.checkRay.Y1[3].ray.origin.x -= rayMove;\r\n                this.checkRay.Y1[3].ray.origin.z -= rayMove;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let intersections = this.checkRay.Y1[i].intersectObjects(this.objects);\r\n                    if (intersections.length > 0) {\r\n                        let topFlatYTmp = intersections[0].point.y;\r\n                        topFlatY = Math.min(topFlatY === undefined ? topFlatYTmp : topFlatY, topFlatYTmp);\r\n                    }\r\n                }\r\n            }\r\n            //无碰撞时下次垂直位置(相机位置)\r\n            let nextY = this.controls.getObject().position.y + (this.velocity.y * delta);\r\n            if (topFlatY !== undefined) {\r\n                if (nextY > topFlatY - (this.personOption.height - this.personOption.sightHeight)) {\r\n                    nextY = topFlatY - (this.personOption.height - this.personOption.sightHeight)\r\n                    this.velocity.y = 0;\r\n                }\r\n            }\r\n            if (bottomFlatY !== undefined) {\r\n                //下方检测到平台时，脚部不能低于最低平台\r\n                nextY = Math.max(bottomFlatY + this.personOption.sightHeight, nextY);\r\n                if (nextY === bottomFlatY + this.personOption.sightHeight) {\r\n                    this.velocity.y = 0;\r\n                    this.canJump = true;\r\n                } else {\r\n                    this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n                }\r\n            } else {\r\n                //下方未检测到平台时\r\n                this.velocity.y -= this.worldOption.g * Math.sqrt(delta);\r\n            }\r\n            this.controls.getObject().position.y = nextY;\r\n        }\r\n        if (this.controls.getObject().position.y < -500) {\r\n            this.velocity.y = 0;\r\n            this.controls.getObject().position.y = 500;\r\n            this.controls.getObject().position.x = 0;\r\n            this.controls.getObject().position.z = 0;\r\n        }\r\n    }\r\n\r\n    initClickFunction() {\r\n        window.addEventListener('mouseup', (event) => {\r\n            if (event.button === 1) {\r\n\r\n            }\r\n        });\r\n        window.addEventListener('mousedown', (event) => {\r\n            let clickedObjects = getClickedObject(this.scene.children, this.camera);\r\n            if (clickedObjects.length > 0) {\r\n                console.log(\"点击对象【\" + clickedObjects[0].object.name + \"】\", clickedObjects[0]);\r\n                if (\r\n                    clickedObjects[0]\r\n                    && clickedObjects[0].distance <= 10\r\n                    && clickedObjects[0].face && clickedObjects[0].face.normal\r\n                    && clickedObjects[0].object && clickedObjects[0].object.position\r\n                ) {\r\n                    let normal = clickedObjects[0].face.normal;\r\n                    let position = clickedObjects[0].object.position;\r\n                    // console.log(normal.x, normal.y, normal.z, position.x, position.y, position.z)\r\n                    let newPosition = {\r\n                        x: normal.x + position.x - 0.5,\r\n                        y: normal.y + position.y - 0.5,\r\n                        z: normal.z + position.z - 0.5,\r\n                    };\r\n                    // console.log(\"newPosition\", newPosition, normal.x + position.x, normal.y + position.y, normal.z + position.z)\r\n                    if (event.button === 2) {//添加方块 右键\r\n                        //TODO 添加方块代码独立，方块不能添加到人物所站的地方\r\n                        let cubeFactory = new CubeFactory(DefaultCube.grass);\r\n                        let cube = cubeFactory.buildCube(newPosition.x, newPosition.y, newPosition.z);\r\n                        this.scene.add(cube);\r\n                        this.objects.push(cube)\r\n                    } else if (event.button === 0) {//删除方块 左键\r\n                        //TODO 改为长按同一方块时才删除\r\n                        console.log(clickedObjects[0].object, this.scene.getObjectByName(clickedObjects[0].object.name));\r\n                        let index = this.objects.findIndex(e => e.id === clickedObjects[0].object.id);\r\n                        if (index >= 0) {\r\n                            this.objects.splice(index, 1);\r\n                        }\r\n                        this.scene.remove(this.scene.getObjectById(clickedObjects[0].object.id));\r\n                    }\r\n                }\r\n            }\r\n        }, false);\r\n    }\r\n}\r\n\r\nfunction setAimStyle(aimEl) {\r\n    aimEl.style.position = \"fixed\";\r\n    aimEl.style.left = \"50%\";\r\n    aimEl.style.top = \"50%\";\r\n    aimEl.style.transform = \"translate(-50%,-50%)\";\r\n    aimEl.style.zIndex = \"1\";\r\n    aimEl.style.fontSize = \"100%\";\r\n    aimEl.style.fontWeight = \"bold\";\r\n    aimEl.style.textAlign = \"center\";\r\n    aimEl.style.verticalAlign = \"middle\";\r\n    aimEl.style.lineHeight = \"10px\";\r\n    aimEl.style.fontFamily = \"\\\"Times New Roman\\\",serif\";\r\n    aimEl.style.backgroundColor = \"#E0E0E0\";\r\n}\r\n\r\n//获取点击的对象\r\nfunction getClickedObject(objects, camera) {\r\n    let raycaster = new THREE.Raycaster();\r\n    let aim = new THREE.Vector2();\r\n    //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n    aim.x = 0;\r\n    aim.y = 0;\r\n    // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n    raycaster.setFromCamera(aim, camera);\r\n    // 获取raycaster直线和所有模型相交的数组集合\r\n    return raycaster.intersectObjects(objects);\r\n}","import * as THREE from 'three';\r\nfunction buildLine(x1, y1, z1, x2, y2, z2, color) {\r\n    x1 = x1 || 0;\r\n    y1 = y1 || 0;\r\n    z1 = z1 || 0;\r\n    x2 = x2 || 0;\r\n    y2 = y2 || 0;\r\n    z2 = z2 || 0;\r\n    color = color || 0xff0000;\r\n    let startPoint = new THREE.Vector3(x1, y1, z1);\r\n    let endPoint = new THREE.Vector3(x2, y2, z2);\r\n    let geometry = new THREE.Geometry();\r\n    geometry.vertices.push(startPoint);\r\n    geometry.vertices.push(endPoint);\r\n    let material = new THREE.MeshBasicMaterial({color: color});\r\n    return new THREE.LineSegments(geometry, material);\r\n}\r\n\r\nexport function buildXYZLine(scene) {\r\n    //坐标线\r\n    let lines = [];\r\n    lines.push(buildLine(0, 0, 0, 1, 0, 0, 0xff0000));//中心坐标线，X轴，红\r\n    lines.push(buildLine(0, 0, 0, 0, 1, 0, 0x00ff00));//中心坐标线，Y轴，绿\r\n    lines.push(buildLine(0, 0, 0, 0, 0, 1, 0x0000ff));//中心坐标线，Z轴，蓝\r\n    if(scene){\r\n        scene.add(...lines)\r\n    }\r\n    return lines;\r\n}\r\n","import * as THREE from 'three'\r\nimport {WEBGL} from \"three/examples/jsm/WebGL.js\";\r\n// import TWEEN from \"@tweenjs/tween.js\";//动作库\r\nimport CubeFactory from \"./utils/objects/cube/CubeFactory.js\";\r\nimport StatsWindow from \"./utils/stats/StatsWindow.js\";\r\nimport {initAmbientLight, getAmbientLightIntensity, lightHighIntensity, lightLowIntensity, lightCurrentIntensity, lightValueBecomeHigher, initDirectionalLight, getDirectionalLightIntensity, initDirectionalLight1} from \"./utils/basic/Light\";\r\nimport {initBGMPlayer} from \"./utils/sound/Bgm\";\r\nimport {initScene} from \"./utils/basic/Scene\";\r\nimport {initCamera} from \"./utils/basic/Camera\";\r\nimport {initRenderer} from \"./utils/basic/Renderer\";\r\nimport {initControls} from \"./utils/controls/ControlBuilder\";\r\nimport DefaultCube from \"./utils/objects/cube/DefaultCube\";\r\n\r\nif (!WEBGL.isWebGLAvailable()) {\r\n    document.body.appendChild(WEBGL.getWebGLErrorMessage());\r\n}\r\n//------------------------------------初始化基本对象-结束------------------------------------------------\r\nlet canvasEL = document.getElementById(\"canvas-frame\");\r\n// 舞台*\r\nlet scene = initScene();\r\n// 光源*\r\nlet lightAmbient = initAmbientLight();\r\nscene.add(lightAmbient);\r\nlet lightDirectional;\r\nif (GlobalSetting.enableShadow) {\r\n    lightDirectional = initDirectionalLight();\r\n    scene.add(lightDirectional);\r\n}\r\n\r\n// 相机*\r\nlet camera = initCamera();\r\ncamera.aspect = canvasEL.offsetWidth / canvasEL.offsetHeight;\r\ncamera.updateProjectionMatrix();\r\nscene.add(camera);\r\n// 渲染器*\r\nlet renderer = initRenderer();\r\nrenderer.setSize(canvasEL.offsetWidth, canvasEL.offsetHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\ndocument.getElementById('canvas-frame').appendChild(renderer.domElement);\r\n// 收集所欲加入到场景的方块对象\r\nlet objects = [];\r\n// 相机控制器\r\nlet controls = initControls(\"MCFirstPersonControl\", scene, camera, renderer, objects);\r\n//------------------------------------初始化基本对象-结束------------------------------------------------\r\n//-----------以下为物体添加代码---------------------------------------------------------------\r\nimport * as AddXYZLing from './utils/objects/AddXYZLine';\r\nimport GlobalSetting from \"./utils/setting/GlobalSetting\";\r\n\r\nAddXYZLing.buildXYZLine(scene);\r\n\r\nlet lightOption = {\r\n    current: lightCurrentIntensity,\r\n    low: lightLowIntensity,\r\n    high: lightHighIntensity,\r\n    becomeHigher: lightValueBecomeHigher\r\n};\r\n\r\nfunction changeLight() {\r\n    lightAmbient.intensity = getAmbientLightIntensity(lightOption.current, lightOption.high, lightOption.low);\r\n    if (GlobalSetting.enableShadow) {\r\n        lightDirectional.intensity = getDirectionalLightIntensity(lightOption.current, lightOption.high, lightOption.low);\r\n    }\r\n    if (lightOption.becomeHigher) {\r\n        let tmp = lightOption.current >= lightOption.low - (lightOption.high - lightOption.low);\r\n        if (tmp) {\r\n            lightOption.current -= 0.002;\r\n        } else {\r\n            lightOption.becomeHigher = false;\r\n        }\r\n    } else {\r\n        if (lightOption.current <= lightOption.high + (lightOption.high - lightOption.low)) {\r\n            lightOption.current += 0.002;\r\n        } else {\r\n            if (lightOption.current > 1.5) {\r\n                lightOption.becomeHigher = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n(function addGrassCubes() {\r\n    let cubeFactory = new CubeFactory(DefaultCube.grass);\r\n    {\r\n        let testBlock = [];\r\n        let width = 10;\r\n        //底板\r\n        for (let x = -width; x < width; x++) {\r\n            for (let z = -width; z < width; z++) {\r\n                testBlock.push([x, -1, z]);\r\n            }\r\n        }\r\n        //阶梯\r\n        for (let x = 0; x < 5; x++) {\r\n            for (let z = 0; z < 5; z++) {\r\n                for (let y = 0; y < 5; y++) {\r\n                    if (y >= x) {\r\n                        testBlock.push([x - 7, y - x, z - 7])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //土堆\r\n        {\r\n            let mountainHeight = 4;\r\n            for (let y = 0; y < mountainHeight; y++) {\r\n                for (let x = y; x < 2 * mountainHeight - y; x++) {\r\n                    for (let z = y; z < 2 * mountainHeight - y; z++) {\r\n                        testBlock.push([x - 5, y, z + 1])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //碰撞检测用\r\n        {\r\n            for (let x = 0; x < 5; x++) {\r\n                for (let z = 0; z < 5; z++) {\r\n                    if (x !== 2 || z !== 2) {\r\n                        testBlock.push([x, 0, z - 5]);\r\n                    }\r\n                }\r\n            }\r\n            testBlock.push([0, 1, -5]);\r\n            testBlock.push([3, 3, -5]);\r\n            testBlock.push([2, 3, -5]);\r\n            testBlock.push([3, 3, -4]);\r\n            testBlock.push([2, 3, -4]);\r\n            testBlock.push([3, 3, -6]);\r\n            testBlock.push([2, 3, -6]);\r\n            testBlock.push([3, 3, -7]);\r\n            testBlock.push([2, 3, -7]);\r\n            testBlock.push([3, 2, -8]);\r\n            testBlock.push([2, 2, -8]);\r\n            testBlock.push([5, 2, -4]);\r\n            testBlock.push([4, 2, -4]);\r\n            testBlock.push([0, 1, -5]);\r\n        }\r\n        testBlock.push([10, 1, 0, DefaultCube.cobblestone]);\r\n        testBlock.push([10, 1, -2, DefaultCube.cobblestone_mossy]);\r\n        testBlock.push([10, 1, -4, DefaultCube.stone]);\r\n        testBlock.push([10, 1, -6, DefaultCube.stone_slab]);\r\n        testBlock.push([10, 1, -8, DefaultCube.planks_birch]);\r\n        testBlock.push([0, 10, 0, DefaultCube.grass]);\r\n        // //填满\r\n        // for (let x = -10; x < 10; x++) {\r\n        //     for (let z = -10; z < 10; z++) {\r\n        //         for (let y = 1; y <5; y++) {\r\n        //                 testBlock.push([x, y, z])\r\n        //         }\r\n        //     }\r\n        // }\r\n        // for (let num = 0; num < 100; num++) {\r\n        //     let x = Math.round(-Math.random() * 80) + 40;\r\n        //     let z = Math.round(-Math.random() * 80) + 40;\r\n        //     let y = Math.round(Math.random() * 80) + 2;\r\n        //     let xNumMax = Math.round(Math.random() * 8);\r\n        //     let zNumMax = Math.round(Math.random() * 8);\r\n        //     let yNumMax = Math.round(Math.random() * 8);\r\n        //     for (let yNum = 0; yNum < yNumMax; yNum++) {\r\n        //         for (let xNum = 0; xNum < xNumMax - yNum; xNum++) {\r\n        //             for (let zNum = 0; zNum < zNumMax - yNum; zNum++) {\r\n        //                     testBlock.push([x + xNum- yNum, y + yNum, z + zNum- yNum]);\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n        for (let cubeInfo of testBlock) {\r\n            let cube = cubeFactory.buildCube(cubeInfo[0], cubeInfo[1], cubeInfo[2], cubeInfo[3]);\r\n            scene.add(cube);\r\n            objects.push(cube);\r\n        }\r\n    }\r\n})();\r\n\r\nlet prevTime = performance.now();\r\n\r\n(function animate() {\r\n    requestAnimationFrame(animate);\r\n    let time = performance.now();\r\n    let delta = (time - prevTime) / 1000;\r\n    prevTime = time;\r\n    // TWEEN.update(delta);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n    new StatsWindow(\"canvas-frame\").stats.update(delta);\r\n    changeLight();\r\n})();\r\n\r\nwindow.onresize = () => {\r\n    //更新相机视角比例\r\n    camera.aspect = canvasEL.offsetWidth / canvasEL.offsetHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(canvasEL.offsetWidth, canvasEL.offsetHeight);\r\n};\r\n\r\nwindow.onload = () => {\r\n    initBGMPlayer();\r\n};\r\n","import * as THREE from 'three';\r\nexport function initScene() {\r\n    let scene = new THREE.Scene();\r\n    let backgroundColor= 0x87CEEB;\r\n    scene.name = 'SCENE';\r\n    scene.fog = new THREE.FogExp2(backgroundColor, 0.005);//雾效果\r\n    //增加天空盒\r\n    (function skyBox(backgroundType) {\r\n        backgroundType = backgroundType || 1;\r\n        let textureCube = new THREE.CubeTextureLoader().load([\r\n            './assets/img/1.png',\r\n            './assets/img/2.png',\r\n            './assets/img/3.png',\r\n            './assets/img/4.png',\r\n            './assets/img/5.png',\r\n            './assets/img/6.png'\r\n        ]);\r\n        if (backgroundType === 1) {//使用场景背景添加\r\n            scene.background = new THREE.Color(backgroundColor);\r\n        } else if (backgroundType === 2) {\r\n            scene.background = textureCube\r\n        } else {//使用盒子添加\r\n            //着色器\r\n            let cubeShader = THREE.ShaderLib[\"cube\"];\r\n            cubeShader.uniforms[\"tCube\"].value = textureCube;\r\n            let material = new THREE.ShaderMaterial({\r\n                fragmentShader: cubeShader.fragmentShader,  //定义自己的片元着色器\r\n                vertexShader: cubeShader.vertexShader,  //定义自己的顶点着色器\r\n                uniforms: cubeShader.uniforms,  //给着色器传入uniform变量的值\r\n                depthWrite: false,  //决定这个材质是否影响WebGL的深度缓存\r\n                side: THREE.BackSide,  //侧面：反面\r\n            });\r\n            //创建方盒子\r\n            let cubeWithPic = new THREE.Mesh(new THREE.CubeGeometry(1000000, 1000000, 1000000), material);\r\n            scene.add(cubeWithPic);\r\n        }\r\n    })(1);\r\n    return scene;\r\n}","import * as THREE from \"three\";\r\n\r\nexport function initCamera() {\r\n    let camera = new THREE.PerspectiveCamera();\r\n    camera.name = \"CAMERA\";\r\n    camera.fov = 45; //fov表示摄像机视锥体垂直视野角度，最小值为0，最大值为180，默认值为50，实际项目中一般都定义45，因为45最接近人正常睁眼角度\r\n    // camera.aspect = width / height; //aspect表示摄像机视锥体长宽比，默认长宽比为1，即表示看到的是正方形，实际项目中使用的是屏幕的宽高比\r\n    camera.near = 0.1; //near表示摄像机视锥体近端面，这个值默认为0.1，实际项目中都会设置为1\r\n    camera.far = 1000; //far表示摄像机视锥体远端面，默认为2000，这个值可以是无限的，说的简单点就是我们视觉所能看到的最远距离\r\n    camera.position.x = 0;\r\n    camera.position.y = 10;\r\n    camera.position.z = 0;\r\n    return camera;\r\n}","import * as THREE from \"three\";\r\nimport GlobalSetting from \"../setting/GlobalSetting\";\r\n\r\nexport function initRenderer() {\r\n    let renderer = new THREE.WebGLRenderer();\r\n    renderer.name = 'RENDERER';\r\n    renderer.antialias = true;//是否开启反锯齿\r\n    renderer.shadowMap.enabled =  GlobalSetting.enableShadow;\r\n    // renderer.shadowMap.type = THREE.PCFSoftShadowMap;//更柔和的影子，需要的性能更高\r\n    // renderer.setSize(width, height);\r\n    renderer.setClearColor(0xFFFFFF, 1.0);//背景颜色\r\n    return renderer\r\n}","import ShowOrbitControl from \"./ShowOrbitControl\";\r\nimport MCFirstPersonControl from \"./MCFirstPersonControl\";\r\n\r\nexport function initControls(controlsType,scene,camera,renderer,objects) {\r\n    let controls;\r\n    switch (controlsType) {\r\n        case \"ShowOrbitControl\":\r\n            let showOrbitControl = new ShowOrbitControl(camera, renderer.domElement);\r\n            showOrbitControl.initClickFunction(scene.children);\r\n            controls = showOrbitControl.controls;\r\n            break;\r\n        case \"MCFirstPersonControl\":\r\n            let mcFirstPersonControl = new MCFirstPersonControl(camera, renderer.domElement, objects, scene);\r\n            controls = mcFirstPersonControl;\r\n            break;\r\n    }\r\n    return controls;\r\n}","\r\nexport  function initBGMPlayer() {\r\n    let audioBGM;\r\n    let currentIndex = 0;\r\n    let arr = [//把需要播放的歌曲从后往前排，这里已添加两首音乐，可继续添加多个音乐\r\n        \"./assets/sound/calm1.ogg\",\r\n        \"./assets/sound/calm2.ogg\",\r\n        \"./assets/sound/calm3.ogg\",\r\n        \"./assets/sound/hal1.ogg\",\r\n        \"./assets/sound/hal2.ogg\",\r\n        \"./assets/sound/hal3.ogg\",\r\n        \"./assets/sound/hal4.ogg\",\r\n    ];\r\n    audioBGM = new Audio();\r\n    audioBGM.preload = \"true\";\r\n    audioBGM.controls = true;\r\n    audioBGM.autoplay = true;\r\n    // audioBGM.muted = true;\r\n    audioBGM.hidden = true;\r\n    audioBGM.style.display = \"none\";\r\n    audioBGM.style.position = \"fixed\";\r\n    audioBGM.style.top = \"0\";\r\n    audioBGM.style.right = \"0\";\r\n    audioBGM.style.zIndex = \"101\";\r\n    audioBGM.loop = false;//禁止循环，否则无法触发ended事件\r\n    audioBGM.src = arr[currentIndex];         //每次读数组最后一个元素\r\n    audioBGM.addEventListener('ended', playEndedHandler, false);\r\n    document.addEventListener('click', playHandler, false);\r\n    // audioBGM.play();\r\n    document.body.appendChild(audioBGM);\r\n\r\n    function playEndedHandler() {\r\n        currentIndex++;\r\n        if (currentIndex >= arr.length) {\r\n            currentIndex = 0;\r\n        }\r\n        audioBGM.src = arr[currentIndex];\r\n        audioBGM.play();\r\n        // myAudio.removeEventListener('ended', playEndedHandler, false);\r\n    }\r\n\r\n    function playHandler() {\r\n        audioBGM.play();\r\n        document.removeEventListener('click', playHandler, false);\r\n    }\r\n    return audioBGM;\r\n}"],"sourceRoot":""}